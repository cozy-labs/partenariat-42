{"version":3,"sources":["app/application.js","app/collections/count_list.js","app/helper/color_set.js","app/initialize.js","app/lib/base_view.js","app/lib/view_collection.js","app/lib/view_helper.js","app/models/count.js","app/router.js","app/views/count-editor/count_editor_view.js","app/views/count-editor/templates/count_editor.jade","app/views/count/count_view.js","app/views/count/templates/count.jade","app/views/count/templates/history_elem.jade","app/views/count/transfer/templates/transfer.jade","app/views/count/transfer/templates/transfer_contrib.jade","app/views/count/transfer/templates/transfer_contrib_row.jade","app/views/count/transfer/transfer_view.js","app/views/home/count_list_view.js","app/views/home/count_row_view.js","app/views/home/home_view.js","app/views/home/templates/count_row.jade","app/views/home/templates/home.jade","app/views/menu/count_list_view.js","app/views/menu/count_row_view.js","app/views/menu/menu_view.js","app/views/menu/templates/count_row.jade","app/views/menu/templates/menu.jade"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApnFA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlFA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApzIA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5CA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlOA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhpCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA","file":"public/javascripts/app.js","sourcesContent":["\n// Application bootstrapper.\nvar Application = {\n\tinitialize: function () {\n\t\tvar Router = require('./router');\n\n\n\t\t// Ideally, initialized classes should be kept in controllers & mediator.\n\t\t// If you're making big webapp, here's more sophisticated skeleton\n\t\t// https://github.com/paulmillr/brunch-with-chaplin\n\n\n\t\tthis.router = new Router();\n\n\n\t\tif (typeof Object.freeze === 'function') {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n};\n\nmodule.exports = Application;\n","var Count = require('../models/count');\n\nvar CountList = Backbone.Collection.extend({\n\tmodel: Count,\n\turl: 'count',\n\n});\n\nmodule.exports = CountList;\n","module.exports = [\n    '304FFE',\n    '2979FF',\n    '00B0FF',\n    '00DCE9',\n    '00D5B8',\n    '00C853',\n    'E70505',\n    'FF5700',\n    'FF7900',\n    'FFA300',\n    'B3C51D',\n    '64DD17',\n    'FF2828',\n    'F819AA',\n    'AA00FF',\n    '6200EA',\n    '7190AB',\n    '51658D'\n]\n","var application = require('application');\n\n$(function () {\n\tapplication.initialize();\n\tBackbone.history.start();\n});\n","require('lib/view_helper');\n\n// Base class for all views.\nvar BaseView = Backbone.View.extend({\n  initialize: function () {\n    this.render = _.bind(this.render, this);\n  },\n\n  template: function () { return null; },\n  getRenderData: function () { return null; },\n\n  render: function () {\n    this.$el.html(this.template(this.getRenderData()));\n    this.afterRender();\n    return this;\n  },\n\n  afterRender: function () { return null; }\n});\n\nmodule.exports = BaseView;\n","\nvar BaseView = require('./base_view');\n\n/*\n   View that display a collection of subitems\n   used to DRY views\n   Usage : new ViewCollection(collection:collection)\n   Automatically populate itself by creating a itemView for each item\n   in its collection\n\n   can use a template that will be displayed alongside the itemViews\n\n   itemView       : the Backbone.View to be used for items\n   itemViewOptions : the options that will be passed to itemViews\n   collectionEl : the DOM element's selector where the itemViews will\n   be displayed. Automatically falls back to el if null\n   */\n\nvar ViewCollection = BaseView.extend({\n  itemView: null,\n  views: {},\n  collectionEl: null,\n\n  appendView: function (view) {\n    this.$collectionEl.append(view.el);\n  },\n\n  initialize: function () {\n    BaseView.prototype.initialize.call(this);\n    this.views = {};\n    this.listenTo(this.collection, 'reset', this.onReset);\n    this.listenTo(this.collection, 'add', this.addItem);\n    this.listenTo(this.collection, 'remove', this.removeItem);\n\n    if (this.collectionEl === null || this.collectionEl == undefined) {\n      this.collectionEl = this.el;\n    }\n  },\n\n  render: function () {\n    for (id in this.views) {\n      this.views[id].$el.detach();\n    }\n    BaseView.prototype.render.call(this);\n    return this;\n  },\n\n  afterRender: function () {\n    this.$collectionEl = $(this.collectionEl);\n    for (id in this.views) {\n      this.appendView(this.views[id]);\n    }\n    this.onReset(this.collection);\n  },\n\n  remove: function () {\n    this.onReset();\n    BaseView.prototype.remove.call(this);\n  },\n\n  onReset: function (newCollection) {\n    for (id in this.views) {\n      view.remove();\n    }\n\t\tvar self = this;\n\t\tnewCollection.forEach(function (elem) {\n\t\t\t\tself.addItem(elem);\n\t\t});\n  },\n\n  addItem: function (model) {\n    view = new this.itemView({model: model});\n    this.views[model.cid] = view.render();\n    this.appendView(view);\n  },\n\n\n  removeItem: function (model) {\n    this.views[model.cid].remove();\n    delete this.views[model.cid];\n  }\n})\n\nmodule.exports = ViewCollection;\n","// Put your handlebars.js helpers here.\n","\n\nvar Count = Backbone.Model.extend({\n\tname: null,\n\tdescription: null,\n\tusers: [],\n\thistory: [],\n});\n\nmodule.exports = Count;\n","\nvar HomeView = require('views/home/home_view');\nvar MenuView = require('views/menu/menu_view');\nvar CountEditorView = require('views/count-editor/count_editor_view');\nvar CountView = require('views/count/count_view');\n\n\nvar CountList = require('collections/count_list');\nvar Count = require('models/count');\n\nvar Router = Backbone.Router.extend({\n\n\tmainScreen: null,\n\tmainMenu: null,\n\n\tinitialize: function () {\n\t\tif (window.countCollection == null || window.countCollection == undefined) {\n\t\t\tthis.createCountCollection();\n\t\t}\n\n\t\tthis.mainMenu = new MenuView();\n\t\tthis.mainMenu.render();\n\n\t\tBackbone.Router.prototype.initialize.call(this);\n\t},\n\n\troutes: {\n\t\t''\t\t\t\t\t\t\t\t\t\t: 'mainBoard',\n\t\t'count/create'\t\t\t\t: 'countEditor',\n\t\t'count/update/:id'\t\t: 'countEditor',\n\t\t'count/:name'\t\t\t\t\t: 'printCount',\n\t},\n\n\n\tmainBoard: function () {\n\t\tview = new HomeView();\n\n\t\tthis.displayView(view);\n\t},\n\n\n\tcountEditor: function (countId) {\n\t\tview = new CountEditorView({countId: countId});\n\n\t\tthis.displayView(view);\n\t},\n\n\n\tprintCount: function (countName) {\n\t\tview = new CountView({countName: countName});\n\n\t\tthis.displayView(view);\n\t},\n\n\n\tdisplayView: function (view) {\n\t\tif (this.mainView !== null && this.mainView !== undefined) {\n\t\t\tthis.mainView.remove();\n\t\t}\n\t\tthis.mainView = view;\n\t\t$('#content-screen').append(view.$el);\n\t\tview.render();\n\t},\n\n\n\tcreateCountCollection: function () {\n\t\twindow.countCollection = new CountList();\n\n\t\tif (window.listCount == null || window.listCount == undefined || window.listCount == \"\") {\n\t\t\tconsole.log('listCount empty');\n\t\t\treturn;\n\t\t}\n\n\t\tvar index = 0;\n\t\twhile (index < window.listCount.length) {\n\t\t\tvar newCount = new Count(window.listCount[index]);\n\t\t\twindow.countCollection.add(newCount);\n\t\t\tindex++;\n\t\t}\n\t},\n});\n\nmodule.exports = Router;\n","var BaseView = require('../../lib/base_view');\nvar template = require('./templates/count_editor');\nvar app = require('../../application');\n\n\nvar CountEditor = BaseView.extend({\n\tid: 'count-editor-screen',\n\ttemplate: template,\n\n\tcount: null,\n\n\tevents: {\n\t\t'click #submit-editor':\t'submitEditor',\n\t},\n\n\n\tinitialize: function (params) {\n\t\tthis.count = params.countId;\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\n\tgetRenderData: function () {\n\t\tif (this.count != null && this.count != undefined) {\n\t\t\tvar model = window.countCollection.get(this.count);\n\t\t\treturn ({model: model.toJSON()});\n\t\t}\n\t\treturn ({model: null});\n\t},\n\n\n\tsubmitEditor: function () {\n\t\tif (this.count == null || this.count == undefined) {\n\t\t\tthis.lauchCountCreation();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lauchCountUpdate();\n\t},\n\n\n\tlauchCountCreation: function () {\n\t\twindow.countCollection.create({\n\t\t\tname: this.$('#input-name').val(),\n\t\t\tdescription: this.$('#input-description').val(),\n\t\t\tusers: [],\n\t\t});\n\t\tapp.router.navigate('', {trigger: true});\n\t},\n\n\tlauchCountUpdate: function () {\n\t\tvar model = window.countCollection.get(this.count);\n\t\tif (model == null || model == undefined) {\n\t\t\tconsole.error('Can\\'t retrieve model');\n\t\t\tapp.router.navigate('', {trigger: true});\n\t\t\treturn;\n\t\t}\n\n\t\tvar change = {\n\t\t\tname: this.$('#input-name').val(),\n\t\t\tdescription: this.$('#input-description').val(),\n\t\t};\n\t\tmodel.set(change);\n\n\t\tmodel.sync('update', model, {\n\t\t\terror: function (xhr) {\n\t\t\t\tconsole.error (xhr);\n\t\t\t},\n\t\t\tsuccess: function () {\n\t\t\t\tview = _.find(app.router.mainMenu.countCollectionView.views, function (view) {\n\t\t\t\t\tif (view.model.cid == model.cid) {\n\t\t\t\t\t\treturn (view.model);\n\t\t\t\t\t}\n\t\t\t\t\treturn (null);\n\t\t\t\t});\n\t\t\t\tview.render();\n\t\t\t\tapp.router.navigate('', {trigger: true});\n\t\t\t}});\n\t},\n});\n\nmodule.exports = CountEditor;\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nif ( model)\n{\nbuf.push('<h1>' + escape((interp = model.name) == null ? '' : interp) + '</h1><form><div class=\"form-group\"><label for=\"input-name\">Count Name</label><input');\nbuf.push(attrs({ 'id':('input-name'), 'type':('text'), 'placeholder':('Name'), 'value':(\"\" + (model.name) + \"\"), \"class\": ('form-control') }, {\"type\":true,\"placeholder\":true,\"value\":true}));\nbuf.push('/></div><div class=\"form-group\"><label for=\"input-description\">Count Description</label><input');\nbuf.push(attrs({ 'id':('input-description'), 'type':('text'), 'placeholder':('Description'), 'value':(\"\" + (model.description) + \"\"), \"class\": ('form-control') }, {\"type\":true,\"placeholder\":true,\"value\":true}));\nbuf.push('/></div><button id=\"submit-editor\" class=\"btn btn-default\">Submit</button></form>');\n}\nelse\n{\nbuf.push('<h1>New Count</h1><form><div class=\"form-group\"><label for=\"input-name\">Count Name</label><input id=\"input-name\" type=\"text\" placeholder=\"Name\" class=\"form-control\"/></div><div class=\"form-group\"><label for=\"input-description\">Count Description</label><input id=\"input-description\" type=\"text\" placeholder=\"Description\" class=\"form-control\"/></div><button id=\"submit-editor\" class=\"btn btn-default\">Submit</button></form>');\n}\n}\nreturn buf.join(\"\");\n};","var BaseView = require('../../lib/base_view');\nvar app = require('../../application');\n\nvar template = require('./templates/count');\nvar templateHistory = require('./templates/history_elem');\n\nvar TransferView = require('./transfer/transfer_view');\nvar setColor = require('../../helper/color_set');\n\n\nvar CountView = BaseView.extend({\n\tid: 'count-screen',\n\ttemplate: template,\n\n\ttemplateHistory : templateHistory,\n\n\tcount: null,\n\tdataResume: {\n\t\tallExpense: 0,\n\t},\n\n\ttransferView: null,\n\n\tevents: {\n\t\t'click #count-lauch-add-user':\t'addUser',\n\t\t'click #add-new-transfer': 'lauchNewTransfer',\n\t\t'click .header-history-elem': 'printTransferBody',\n\t},\n\n\n\tinitialize: function (attributes) {\n\t\tthis.count = window.countCollection.models.find(function (count) {\n\t\t\tif (count.get('name') == attributes.countName) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t\tif (this.count == undefined || this.count == null) {\n\t\t\tconsole.error('invalide route');\n\t\t}\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\n\tgetRenderData: function () {\n\t\tif (this.count !== null && this.count !== undefined) {\n\t\t\treturn ({count: this.count.toJSON()});\n\t\t}\n\t\treturn ({count: null});\n\t},\n\n\n\tafterRender: function () {\n\t\tvar history = this.count.get('history');\n\n\t\tvar self = this;\n\t\thistory.forEach(function (transfer) {\n\t\t\tself.$('#history-list-view').append(self.templateHistory({transfer: transfer}));\n\t\t});\n\n\t\tvar chartCtx = this.$('#chart-users').get(0).getContext(\"2d\");\n\t\tvar data = this.count.get('users').map(function (elem) {\n\t\t\treturn {value: elem.expenses, color: '#'+elem.color, label: elem.name}\n\t\t});\n\t\tthis.pieChart = new Chart(chartCtx).Pie(data);\n\t},\n\n\n\taddUser: function () {\n\t\tvar userList = this.count.get('users');\n\t\tvar newUser = this.$('#count-input-add-user').val();\n\t\tvar color = setColor[userList.length % setColor.length];\n\n\t\tuserList.push({name: newUser, expenses: 0, color: color});\n\t\tthis.$('#user-list').append('<div><button class=\"btn\" style=\"background-color: #'+ color +'\">' + newUser + '</button></div>');\n\t\tif (this.transferView !== null) {\n\t\t\tthis.transferView.addUserToCount(newUser);\n\t\t}\n\t\tthis.count.save({users: userList});\n\t\tthis.$('#count-input-add-user').val('');\n\t},\n\n\n\tlauchNewTransfer: function (event) {\n\t\tif (this.transferView == null) {\n\t\t\tthis.transferView = new TransferView({\n\t\t\t\tcount: this.count,\n\t\t\t\tusers: this.count.get('users'),\n\t\t\t\tpieChart: this.pieChart\n\t\t\t});\n\t\t\tthis.transferView.render();\n\n\t\t\tthis.listenToOnce(this.transferView, 'remove-transfer', this.removeTransferView);\n\n\t\t\tthis.listenToOnce(this.transferView, 'new-transfer', function (data) {\n\t\t\t\tthis.$('#history-list-view').prepend(this.templateHistory({transfer: data}));\n\t\t\t\tthis.$('#nb-expenses').text(this.count.get('history').length);\n\t\t\t\tthis.$('#all-expenses').text(this.count.get('allExpenses'));\n\t\t\t\tthis.removeTransferView();\n\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.transferView.setTransferType(event.target.value);\n\t\t}\n\t},\n\n\tremoveTransferView: function () {\n\t\tthis.transferView.remove();\n\t\tdelete this.transferView;\n\t\tthis.tranferView = null;\n\n\t\tthis.$('#new-transfer-module').prepend('<button id=\"add-new-transfer\" class=\"btn btn-default btn-block\">Add a new expense</button>')\n\t},\n\n\n\tprintTransferBody: function (event) {\n\t\tvar elem =  $(event.target);\n\t\tif (elem.is('span')) {\n\t\t\tvar historyBody =  $(event.target).parent().next('div');\n\t\t}\n\t\telse {\n\t\t\tvar historyBody =  $(event.target).next('div');\n\t\t}\n\t\tif (historyBody.is('.printed')) {\n\t\t\thistoryBody.slideUp('');\n\t\t\thistoryBody.removeClass('printed');\n\t\t}\n\t\telse {\n\t\t\thistoryBody.slideDown('slow');\n\t\t\thistoryBody.addClass('printed');\n\t\t}\n\t},\n\n});\n\nmodule.exports = CountView;\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"jumbotron\"><h1>' + escape((interp = count.name) == null ? '' : interp) + '</h1><p>' + escape((interp = count.description) == null ? '' : interp) + '</p></div><div class=\"panel panel-default\"><div class=\"panel-heading\">Users</div><div class=\"panel-body\"><div class=\"row\"><div class=\"col-md-4\"><div id=\"user-list\">');\n// iterate count.users\n;(function(){\n  if ('number' == typeof count.users.length) {\n    for (var $index = 0, $$l = count.users.length; $index < $$l; $index++) {\n      var user = count.users[$index];\n\nbuf.push('<p></p><button');\nbuf.push(attrs({ 'style':(\"background-color: #\" + (user.color) + \"\"), \"class\": ('btn') }, {\"style\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + '</button>');\n    }\n  } else {\n    for (var $index in count.users) {\n      var user = count.users[$index];\n\nbuf.push('<p></p><button');\nbuf.push(attrs({ 'style':(\"background-color: #\" + (user.color) + \"\"), \"class\": ('btn') }, {\"style\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + '</button>');\n   }\n  }\n}).call(this);\n\nbuf.push('</div><div class=\"row\"><div class=\"input-group\"><input id=\"count-input-add-user\" type=\"text\" placeholder=\"My name\" class=\"form-control\"/><span class=\"input-group-btn\"><button id=\"count-lauch-add-user\" type=\"button\" class=\"btn btn-default\">Add user</button></span></div></div></div><div class=\"col-md-4\"><canvas id=\"chart-users\"></canvas></div><div class=\"col-md-4\"><label for=\"all-expenses\">All Expenses:</label><p id=\"all-expenses\">' + escape((interp = count.allExpenses) == null ? '' : interp) + '</p><label for=\"nb-expenses\">Number Expenses:</label><p id=\"nb-expenses\">' + escape((interp = count.history.length) == null ? '' : interp) + '</p></div></div></div></div><div class=\"panel panel-default panel-heading\">History<div class=\"panel-body\"><div style=\"background-color: grey\" class=\"panel panel-default\"><div id=\"new-transfer-module\" class=\"panel-body\"><button id=\"add-new-transfer\" class=\"btn btn-default btn-block\">Add a new expense</button></div></div></div><div id=\"history-list-view\"></div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nvar history_row_mixin = function(user){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\nbuf.push('<tr><td>' + escape((interp = user.name) == null ? '' : interp) + '</td><td>' + escape((interp = user.share) == null ? '' : interp) + '</td><td>' + escape((interp = user.amount) == null ? '' : interp) + '</td></tr>');\n};\nbuf.push('<div class=\"panel panel-default\"><div class=\"panel-heading header-history-elem\"><span> ' + escape((interp = transfer.name) == null ? '' : interp) + '</span><span style=\"float: right\">' + escape((interp = transfer.amount) == null ? '' : interp) + '</span></div><div style=\"display: none\" class=\"panel-body\">');\nif ( transfer.title)\n{\nbuf.push('<h3>' + escape((interp = transfer.title) == null ? '' : interp) + '</h3>');\n}\nif ( transfer.description)\n{\nbuf.push('<p>' + escape((interp = transfer.description) == null ? '' : interp) + '</p>');\n}\nif ( transfer.date)\n{\nbuf.push('<p>Date: ' + escape((interp = transfer.date) == null ? '' : interp) + '</p>');\n}\nbuf.push('<table class=\"table\"><thead><tr><th>Name</th><th>%</th><th>Amount</th></tr></thead><tbody>');\n// iterate transfer.users\n;(function(){\n  if ('number' == typeof transfer.users.length) {\n    for (var $index = 0, $$l = transfer.users.length; $index < $$l; $index++) {\n      var user = transfer.users[$index];\n\nhistory_row_mixin(user);\n    }\n  } else {\n    for (var $index in transfer.users) {\n      var user = transfer.users[$index];\n\nhistory_row_mixin(user);\n   }\n  }\n}).call(this);\n\nbuf.push('</tbody></table><button id=\"delete-history-elem\" class=\"btn btn-default btn-block\">Delete</button><button id=\"update-history-elem\" class=\"btn btn-default btn-block\">Modify</button></div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div id=\"new-transfer-displayer\" style=\"display: none\"><label for=\"new-transfer-amount\">Name<div id=\"new-transfer-name\"><input id=\"transfer-input-name\" type=\"text\" placeholder=\"Shopping...\" class=\"form-contrl\"/></div><label for=\"new-transfer-amount\">Description</label><div id=\"new-transfer-description\"><input id=\"transfer-input-description\" type=\"text\" class=\"form-contrl\"/></div><label for=\"new-transfer-amount\">amount</label><div id=\"new-transfer-amount\" class=\"row\"><div class=\"col-lg-6\"><div class=\"input-group\"><input id=\"transfer-input-amount\" type=\"number\" placeholder=\"42.21\" aria-label=\"...\" class=\"form-control\"/></div></div></div><label for=\"new-transfer-user\">Users</label><div id=\"new-transfer-user\" class=\"row\"><div id=\"new-transfer-user-content\" class=\"form-group\">');\n// iterate users\n;(function(){\n  if ('number' == typeof users.length) {\n    for (var $index = 0, $$l = users.length; $index < $$l; $index++) {\n      var user = users[$index];\n\nbuf.push('<button');\nbuf.push(attrs({ 'type':('button'), 'value':('' + (user.name) + ''), \"class\": ('btn') + ' ' + ('btn-default') + ' ' + ('transfer-user') }, {\"type\":true,\"value\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + '</button>');\n    }\n  } else {\n    for (var $index in users) {\n      var user = users[$index];\n\nbuf.push('<button');\nbuf.push(attrs({ 'type':('button'), 'value':('' + (user.name) + ''), \"class\": ('btn') + ' ' + ('btn-default') + ' ' + ('transfer-user') }, {\"type\":true,\"value\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + '</button>');\n   }\n  }\n}).call(this);\n\nbuf.push('</div></div></label></div><div id=\"new-transfer-btn\" class=\"row\"><button id=\"transfer-cancel\" class=\"btn btn-default btn-block\">Cancel</button></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div id=\"new-transfer-contrib-section\"><table id=\"new-transfer-contrib-table\" class=\"table\"><thead><tr><th>Name</th><th>%</th><th>Amount</th></tr></thead></table></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<tr><td>' + escape((interp = user.name) == null ? '' : interp) + '</td><td>' + escape((interp = user.share) == null ? '' : interp) + '</td><td>' + escape((interp = user.amount) == null ? '' : interp) + '</td></tr>');\n}\nreturn buf.join(\"\");\n};","var BaseView = require('../../../lib/base_view');\nvar app = require('../../../application');\n\nvar template = require('./templates/transfer');\n\nvar templateTransferContrib = require('./templates/transfer_contrib');\nvar templateTransferContribRow = require('./templates/transfer_contrib_row');\n\n\nvar TransferView = BaseView.extend({\n\ttemplate: template,\n\n\n\ttemplateTransferContrib: templateTransferContrib,\n\ttemplateTransferContribRow: templateTransferContribRow,\n\n\n\tcount: null,\n\tusers: null,\n\n\n\n\tevents: {\n\t\t'click .transfer-user': 'setTransferUser',\n\t\t'click #transfer-send': 'sendTransfer',\n\t\t'click #transfer-cancel': 'resetNewTransfer',\n\t},\n\n\tinitialize: function (attributes) {\n\t\tthis.count = attributes.count;\n\t\tthis.users = attributes.users;\n\t\tthis.pieChart = attributes.pieChart;\n\t\tthis.data = {\n\t\t\tusers: [],\n\t\t\tamount: 0,\n\t\t};\n\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\n\trender: function () {\n\t\t$('#add-new-transfer').remove()\n\t\t$('#new-transfer-module').prepend(this.$el);\n\t\tthis.$el.html(this.template({users: this.users}));\n\t\tthis.$('#new-transfer-displayer').slideDown('slow');\n\n\t\tthis.$('#transfer-input-amount')[0].addEventListener('change', (function(_this) {\n\t\t\treturn function (event) {_this.updateContribTable(event);};\n\t\t})(this));\n\n\t\tthis.$('#transfer-input-name')[0].addEventListener('change', (function(_this) {\n\t\t\treturn function (event) {_this.data.name = event.target.value;};\n\t\t})(this));\n\n\t\tthis.$('#transfer-input-description')[0].addEventListener('change', (function(_this) {\n\t\t\treturn function (event) {_this.data.description = event.target.value;};\n\t\t})(this));\n\t},\n\n\n\tupdateContribTable: function () {\n\t\tthis.data.amount = this.$('#transfer-input-amount').val();\n\n\t\tif (this.data.users.length > 0) {\n\t\t\tvar oldContrib = this.$('#new-transfer-contrib-content');\n\t\t\tif (oldContrib !== null && oldContrib !== undefined) {\n\t\t\t\toldContrib.remove();\n\t\t\t}\n\n\t\t\tthis.$('#new-transfer-contrib-table').append('<tbody id=\"new-transfer-contrib-content\"></tbody>');\n\t\t\tvar self = this;\n\t\t\tthis.data.users.forEach(function (user) {\n\t\t\t\tuser.amount = +(Math.round(self.data.amount / 100 * user.share * 100) / 100).toFixed(2);\n\t\t\t\tuser.share = +(Math.round(user.share * 100) / 100).toFixed(2);\n\t\t\t\t\tself.$('#new-transfer-contrib-content').append(\n\t\t\t\t\t\t\tself.templateTransferContribRow({user: user}));\n\t\t\t});\n\t\t}\n\t},\n\n\n\taddUserToTransfer: function (event) {\n\t\tvar userName = event.target.value;\n\t\tvar listUsers = this.data.users;\n\t\tvar targetButton = this.$(event.target);\n\n\t\tif (listUsers.length == 0) {\n\t\t\tthis.$('#new-transfer-displayer').append(this.templateTransferContrib());\n\t\t\tthis.$('#new-transfer-btn').prepend('<button id=\"transfer-send\" class=\"btn btn-default btn-block\"> Save</button>');\n\t\t}\n\n\t\tvar nbUsers = listUsers.length + 1;\n\t\tvar shareCollected = 0;\n\n\t\tif (listUsers.length > 0) {\n\t\t\tlistUsers.forEach(function (elem) {\n\t\t\t\tshareCollected += elem.share / nbUsers;\n\t\t\t\telem.share = elem.share - elem.share / nbUsers;\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tshareCollected = 100;\n\t\t}\n\n\t\tlistUsers.push({name: userName, share: shareCollected});\n\n\t\ttargetButton.removeClass('btn-default');\n\t\ttargetButton.addClass('btn-info');\n\t},\n\n\n\tremoveUserFromTransfer: function (event) {\n\t\tvar userName = event.target.value;\n\t\tvar listUsers = this.data.users;\n\t\tvar targetButton = this.$(event.target);\n\t\tvar userDeleted;\n\n\t\t{\n\t\t\tvar index = 0;\n\t\t\twhile (index < listUsers.length) {\n\t\t\t\tif (listUsers[index].name == userName) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\tuserDeleted = listUsers.splice(index, 1);\n\t\t}\n\n\t\tif (listUsers.length == 0) {\n\t\t\tthis.$('#new-transfer-contrib-section').remove();\n\t\t\tthis.$('#transfer-send').remove();\n\t\t}\n\n\t\ttargetButton.removeClass('btn-info');\n\t\ttargetButton.addClass('btn-default');\n\n\n\t\tif (listUsers.length > 0) {\n\t\t\tvar shareToDistribute = userDeleted[0].share / listUsers.length;\n\n\t\t\tlistUsers.forEach(function (elem) {\n\t\t\t\telem.share = Number(elem.share) + Number(shareToDistribute);\n\t\t\t});\n\t\t}\n\t},\n\n\n\tsetTransferUser: function (event) {\n\t\tvar find = this.data.users.find(function (element) {\n\t\t\tif (element.name == event.target.value) {\n\t\t\t\treturn element;\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\n\t\tif (find == undefined) {\n\t\t\tthis.addUserToTransfer(event);\n\t\t}\n\t\telse {\n\t\t\tthis.removeUserFromTransfer(event);\n\t\t\t}\n\n\t\tthis.updateContribTable();\n\t},\n\n\n\taddUserToCount: function (newUser) {\n\t\t\tthis.$('#new-transfer-user-content').append('<button type=\"button\" value=\"'+ newUser +\n\t\t\t\t\t'\" class=\"btn btn-default transfer-user\">' + newUser + '</button>');\n\t},\n\n\n\tsendTransfer: function () {\n\t\tif (this.data.amount != 0) {\n\t\t\tvar countHistory = this.count.get('history');\n\n\t\t\tthis.data.id = Date.now() + Math.round(Math.random() % 100);\n\n\n\t\t\tcountHistory.push(this.data);\n\t\t\tthis.count.set('history', countHistory);\n\t\t\tvar newAllExpenses = Number(this.count.get('allExpenses')) + Number(this.data.amount);\n\t\t\tthis.count.set('allExpenses', newAllExpenses);\n\n\t\t\tfor (i in this.data.users) {\n\t\t\t\tvar user = this.data.users[i];\n\t\t\t\tvar index = this.count.get('users').findIndex(function (elem, index) {\n\t\t\t\t\tif (elem.name === user.name) {\n\t\t\t\t\t\telem.expenses += user.amount;\n\t\t\t\t\t\treturn true\n\t\t\t\t\t}\n\t\t\t\t\treturn false\n\t\t\t\t});\n\n\t\t\t\tif (index >= this.pieChart.segments.length) {\n\t\t\t\t\tvar newUser = this.count.get('users')[index];\n\n\t\t\t\t\tthis.pieChart.addData({\n\t\t\t\t\t\tvalue: newUser.expenses,\n\t\t\t\t\t\tcolor: newUser.color,\n\t\t\t\t\t\tlabel: newUser.name\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.pieChart.segments[index].value = this.count.get('users')[index].expenses;\n\t\t\t\t\tthis.pieChart.update();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.count.save();\n\t\t\tthis.trigger('new-transfer', this.data);\n\t\t}\n\t},\n\n\tresetNewTransfer: function () {\n\t\tthis.trigger('remove-transfer');\n\t},\n\n\tremove: function () {\n\t\tthis.$el.slideUp('');\n\t\tBaseView.prototype.remove.call(this);\n\t}\n});\n\nmodule.exports = TransferView;\n","\nvar ViewCollection = require('../../lib/view_collection');\nvar HomeCountRowView = require('./count_row_view');\n\nvar HomeCountListView = ViewCollection.extend({\n\tel: '#home-list-count',\n\n\titemView: HomeCountRowView,\n\n\tinitialize: function (collection) {\n\t\tthis.collection = collection;\n\t\tViewCollection.prototype.initialize.call(this);\n\t},\n});\n\nmodule.exports = HomeCountListView;\n","var BaseView = require('../../lib/base_view');\nvar template = require('./templates/count_row');\n\nvar app = require('../../application');\n\nvar HomeCountRowView = BaseView.extend({\n\ttemplate: template,\n\n\tevents: {\n\t\t'click .home-delete-count' : 'deleteCount',\n\t\t'click .home-modify-count' : 'modifyCount',\n\t},\n\n\tgetRenderData: function () {\n\t\treturn ({model: this.model.toJSON()});\n\t},\n\n\tdeleteCount: function () {\n\t\twindow.countCollection.remove(this);\n\t\tthis.model.destroy();\n\t},\n\n\tmodifyCount: function () {\n\t\tapp.router.navigate('count/update/' + this.model.id, {trigger: true});\n\t},\n\n});\n\nmodule.exports = HomeCountRowView;\n","var BaseView = require('../../lib/base_view');\nvar CountListView = require('./count_list_view');\n\n\nvar template = require('./templates/home');\nvar app = require('../../application');\n\nvar HomeView = BaseView.extend({\n\tid: 'home-screen',\n  template: template,\n\n\tevents: {\n\t\t'click #create-new-count' : 'createNewCount',\n\t},\n\n\n\tafterRender: function () {\n\t\tthis.countCollectionView = new CountListView(window.countCollection);\n\t\tthis.countCollectionView.render();\n\t},\n\n\n\tcreateNewCount: function () {\n\t\tapp.router.navigate('count/create', {trigger: true});\n\t},\n\n});\n\nmodule.exports = HomeView;\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"panel panel-default\"><div class=\"panel-heading\">' + escape((interp = model.name) == null ? '' : interp) + '</div><div class=\"panel-body\"><h4>Description</h4><p>' + escape((interp = model.description) == null ? '' : interp) + '</p>');\nif ( model.users.length > 0)\n{\nbuf.push('<h4>Users</h4>');\n// iterate model.users\n;(function(){\n  if ('number' == typeof model.users.length) {\n    for (var $index = 0, $$l = model.users.length; $index < $$l; $index++) {\n      var user = model.users[$index];\n\nbuf.push('<button');\nbuf.push(attrs({ 'style':(\"background-color: #\" + (user.color) + \"\"), \"class\": ('btn') }, {\"style\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + '</button>');\n    }\n  } else {\n    for (var $index in model.users) {\n      var user = model.users[$index];\n\nbuf.push('<button');\nbuf.push(attrs({ 'style':(\"background-color: #\" + (user.color) + \"\"), \"class\": ('btn') }, {\"style\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + '</button>');\n   }\n  }\n}).call(this);\n\nbuf.push('<p></p>');\n}\nbuf.push('<div><button class=\"home-delete-count btn btn-default btn-block\">Supprimer</button><button class=\"home-modify-count btn btn-default btn-block\">Modifier</button></div></div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div id=\"list-all-count\"><label for=\"home-list\">All Count</label><ul id=\"home-list-count\" class=\"nav nav-sidebar\"></ul></div><button id=\"create-new-count\" class=\"btn btn-default\">Create New Count</button>');\n}\nreturn buf.join(\"\");\n};","\nvar ViewCollection = require('../../lib/view_collection');\nvar MenuCountRowView = require('./count_row_view');\n\nvar MenuCountListView = ViewCollection.extend({\n\tel: '#menu-list-count',\n\n\titemView: MenuCountRowView,\n\n\tinitialize: function (collection) {\n\t\tthis.collection = collection;\n\t\tViewCollection.prototype.initialize.call(this);\n\t},\n});\n\nmodule.exports = MenuCountListView;\n","var BaseView = require('../../lib/base_view');\nvar template = require('./templates/count_row');\nvar app = require('../../application');\n\nvar MenuCountRowView = BaseView.extend({\n\ttemplate: template,\n\n\tclassName: 'menu-count-row',\n\ttagName: 'li',\n\n\tinitialize: function () {\n\t\tvar self = this;\n\t\tthis.$el.click(function () {\n\t\t\tself.printCount();\n\t\t})\n\t},\n\n\n\tgetRenderData: function () {\n\t\treturn ({model: this.model.toJSON()});\n\t},\n\n\n\tprintCount: function () {\n\t\tapp.router.navigate('count/' + this.model.get('name'), {trigger: true});\n\t},\n});\n\nmodule.exports = MenuCountRowView;\n","var BaseView = require('../../lib/base_view');\nvar CountListView = require('./count_list_view');\nvar template = require('./templates/menu');\nvar app = require('../../application');\n\nvar MenuView = BaseView.extend({\n\tel: '#menu-screen',\n\tclassName: 'sidebar',\n\n\ttemplate: template,\n\n\tevents: {\n\t\t'click #menu-all-count'\t\t: 'goHomeView',\n\t\t'click #menu-add-count'\t\t: 'createNewCount',\n\t},\n\n\tafterRender: function () {\n\t\tthis.countCollectionView = new CountListView(window.countCollection);\n\t\tthis.countCollectionView.render();\n\t},\n\n\n\tgoHomeView: function () {\n\t\tapp.router.navigate('', {trigger: true});\n\t},\n\n\n\tcreateNewCount: function () {\n\t\tapp.router.navigate('count/create', {trigger: true});\n\t},\n\n});\n\nmodule.exports = MenuView;\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<a>' + escape((interp = model.name) == null ? '' : interp) + '</a>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<label for=\"menu-section\">Count</label><ul class=\"nav nav-sidebar\"><li><a id=\"menu-all-count\">All Count</a></li></ul><ul id=\"menu-list-count\" class=\"nav nav-sidebar\"></ul><ul class=\"nav nav-sidebar\"><li><a id=\"menu-add-count\">Create a Count</a></li></ul>');\n}\nreturn buf.join(\"\");\n};"]}