{"version":3,"sources":["app/private/application.js","app/private/collections/count_list.js","app/private/helper/color_set.js","app/private/initialize.js","app/private/lib/base_view.js","app/private/lib/view_collection.js","app/private/models/count.js","app/private/router.js","app/private/views/allArchives/all_archive_view.js","app/private/views/allArchives/archive_list_view.js","app/private/views/allArchives/archive_row_view.js","app/private/views/allArchives/templates/all_archive.jade","app/private/views/allArchives/templates/archive_row.jade","app/private/views/allCount/all_count_view.js","app/private/views/allCount/count_list_view.js","app/private/views/allCount/count_row_view.js","app/private/views/allCount/templates/all_count.jade","app/private/views/allCount/templates/count_row.jade","app/private/views/count/archive_view.js","app/private/views/count/count_base_view.js","app/private/views/count/count_view.js","app/private/views/count/square_view.js","app/private/views/count/stats_view.js","app/private/views/count/templates/count.jade","app/private/views/count/templates/square.jade","app/private/views/countEditor/count_creation_view.js","app/private/views/countEditor/count_edition_base.js","app/private/views/countEditor/count_update_view.js","app/private/views/countEditor/templates/count_creation.jade","app/private/views/countEditor/templates/count_update.jade","app/private/views/countEditor/templates/url.jade","app/private/views/menu/count_list_view.js","app/private/views/menu/count_row_view.js","app/private/views/menu/menu_view.js","app/private/views/menu/templates/count_row.jade","app/private/views/newEvent/expense/new_expense_view.js","app/private/views/newEvent/expense/templates/new_expense.jade"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAplMA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtCA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxljIA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvrlHA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxpDA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfnOA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApFA;AAAA","file":"public/javascripts/app.js","sourcesContent":["// Application bootstrapper.\nvar Application = {\n  initialize: function () {\n\n    var Router = require('./router');\n\n    // Router initialization\n    this.router = new Router();\n\n\n    if (typeof Object.freeze === 'function') {\n      Object.freeze(this);\n    }\n  }\n};\n\nmodule.exports = Application;\n","var Count = require('../models/count');\n\nvar CountList = Backbone.Collection.extend({\n\tmodel: Count,\n\turl: 'count',\n});\n\nmodule.exports = CountList;\n","module.exports = [\n    '2979FF',\n    'B3C51D',\n    '00D5B8',\n    'FF5700',\n    'F819AA',\n    '7190AB',\n    '00B0FF',\n    'E70505',\n    'FF7900',\n    '51658D',\n    '304FFE',\n    '00DCE9',\n    'FF2828',\n    '6200EA',\n    '64DD17',\n    '00C853',\n    'FFA300',\n]\n","var application = require('./application');\n\n$(function () {\n  application.initialize();\n\n  Backbone.history.start();\n\n  // Lauche listenert for responsive menu\n  $('[data-toggle=offcanvas]').click(function() {\n    $('.row-offcanvas').toggleClass('active');\n  });\n});\n","\n// Base class for all views.\nvar BaseView = Backbone.View.extend({\n  initialize: function () {\n    this.render = _.bind(this.render, this);\n  },\n\n  template: function () { return null; },\n  getRenderData: function () { return null; },\n\n  render: function () {\n    this.$el.html(this.template(this.getRenderData()));\n    this.afterRender();\n    return this;\n  },\n\n  afterRender: function () { return null; }\n});\n\nmodule.exports = BaseView;\n","\nvar BaseView = require('./base_view');\n\n/*\n   View that display a collection of subitems\n   used to DRY views\n   Usage : new ViewCollection(collection:collection)\n   Automatically populate itself by creating a itemView for each item\n   in its collection\n\n   can use a template that will be displayed alongside the itemViews\n\n   itemView       : the Backbone.View to be used for items\n   itemViewOptions : the options that will be passed to itemViews\n   collectionEl : the DOM element's selector where the itemViews will\n   be displayed. Automatically falls back to el if null\n   */\n\nvar ViewCollection = BaseView.extend({\n  itemView: null,\n  views: {},\n  collectionEl: null,\n\n  appendView: function (view) {\n    this.$collectionEl.append(view.el);\n  },\n\n  initialize: function () {\n    BaseView.prototype.initialize.call(this);\n    this.views = {};\n    this.listenTo(this.collection, 'reset', this.onReset);\n    this.listenTo(this.collection, 'add', this.addItem);\n    this.listenTo(this.collection, 'remove', this.removeItem);\n\n    if (this.collectionEl === null || this.collectionEl == undefined) {\n      this.collectionEl = this.el;\n    }\n  },\n\n  render: function () {\n    for (id in this.views) {\n      this.views[id].$el.detach();\n    }\n    BaseView.prototype.render.call(this);\n    return this;\n  },\n\n  afterRender: function () {\n    this.$collectionEl = $(this.collectionEl);\n    for (id in this.views) {\n      this.appendView(this.views[id]);\n    }\n    this.onReset(this.collection);\n  },\n\n  remove: function () {\n    this.onReset();\n    BaseView.prototype.remove.call(this);\n  },\n\n  onReset: function (newCollection) {\n    for (id in this.views) {\n      view.remove();\n    }\n\t\tvar self = this;\n\t\tnewCollection.forEach(function (elem) {\n\t\t\t\tself.addItem(elem);\n\t\t});\n  },\n\n  addItem: function (model) {\n    view = new this.itemView({model: model});\n    this.views[model.cid] = view.render();\n    this.appendView(view);\n  },\n\n\n  removeItem: function (model) {\n    this.views[model.cid].remove();\n    delete this.views[model.cid];\n  }\n})\n\nmodule.exports = ViewCollection;\n","\nvar app = require('../application');\n\nvar Count = Backbone.Model.extend({\n\n\tremoveExpense: function (id, callback) {\n\t\tvar index = this.get('expenses').findIndex(function (elem) {\n\t\t\tif (elem.id === id) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tvar newExpenses = this.get('expenses');\n\t\tvar expenseRemove = newExpenses.splice(index, 1)[0];\n\n\t\tvar currentExpenses = this.get('allExpenses');\n\t\tvar currentUsers = this.get('users');\n\t\tvar leecherList = expenseRemove.leecher;\n\t\tvar seeder = expenseRemove.seeder;\n\n\t\tvar newUsersList = this.get('users').map(function (user) {\n\t\t\tleecherList.every(function (expenseUser) {\n\t\t\t\tif (user.name === expenseUser.name) {\n\t\t\t\t\tvar leechPerUser = (Math.round(Number(expenseRemove.amount) / Number(expenseRemove.leecher.length) * 100) / 100).toFixed(2);\n\t\t\t\t\tuser.leech = (Math.round((Number(user.leech) - leechPerUser) * 100) / 100).toFixed(2);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t});\n\n\t\t\tif (user.name == seeder) {\n\t\t\t\t\tuser.seed = (Math.round((Number(user.seed) - Number(expenseRemove.amount)) * 100) / 100).toFixed(2);\n\t\t\t}\n\t\t\treturn user;\n\t\t});\n\n\t\tvar newAllExpenses = (Math.round((Number(currentExpenses) - Number(expenseRemove.amount)) * 100) / 100).toFixed(2);\n\n\t\tthis.save({\n\t\t\texpenses: newExpenses,\n\t\t\tallExpenses: newAllExpenses,\n\t\t\tusers: newUsersList\n\t\t}, {\n\t\t\twait: true,\n\t\t\tsuccess: function () {\n\t\t\t\tcallback();\n\t\t\t},\n\t\t\terror: function (xht) {\n\t\t\t\tconsole.error(xhr);\n\t\t\t}\n\t\t});\n\t},\n\n\n\tarchive: function () {\n\t\tvar self = this;\n\t\tthis.save({\n\t\t\tstatus: 'archive'\n\t\t}, {\n\t\t\twait: true,\n\t\t\tsuccess: function () {\n\t\t\t\twindow.countCollection.remove(self);\n        window.archiveCollection.push(self);\n\t\t\t\tapp.router.navigate('', {trigger: true});\n\t\t\t},\n\t\t\terror: function (xhr) {\n\t\t\t\tconsole.error(xhr);\n\t\t\t}\n\t\t});\n\t},\n});\n\nmodule.exports = Count;\n","\n// View list\nvar AllCountView = require('./views/allCount/all_count_view');\nvar AllArchiveView = require('./views/allArchives/all_archive_view');\n\n// View screen\nvar CountView = require('./views/count/count_view');\nvar MenuView = require('./views/menu/menu_view');\nvar CountUpdateView = require('./views/countEditor/count_update_view');\nvar CountCreationView = require('./views/countEditor/count_creation_view');\nvar ArchiveView = require('./views/count/archive_view');\nvar NewExpense = require('./views/newEvent/expense/new_expense_view');\n\n// Models\nvar CountList = require('./collections/count_list');\nvar Count = require('./models/count');\n\nvar Router = Backbone.Router.extend({\n\n  mainScreen: null,\n  mainMenu: null,\n  currentButton: null,\n\n  /*\n   * I Fetch all the data from the server in during the router initialization\n   * because for now there is no much data and it's easy to print any page.\n   *\n   * The main HTML is already render server side, be remain the count list\n   */\n  initialize: function () {\n    this.initializeCollections();\n\n    this.mainMenu = new MenuView();\n    this.mainMenu.renderCounts();\n\n    Backbone.Router.prototype.initialize.call(this);\n  },\n\n\n  routes: {\n    ''\t\t\t\t         \t: 'mainBoard',\n    'count/create'\t        \t: 'countCreation',\n    'count/update/:id' \t    \t: 'countUpdate',\n    'count/:id'                 : 'printCount',\n    'count/:name/new-expense'   : 'newExpense',\n    'archive'\t\t\t\t    : 'printAllArchive',\n    'archive/:name'\t\t    \t: 'printArchive',\n  },\n\n\n  /*\n   * Print The main Board with the list of counts.\n   *\n   * If the is not count I redirect to the count creation\n   */\n  mainBoard: function () {\n    if (window.countCollection.length === 0) {\n      this.navigate('count/create', {trigger: true});\n    } else {\n      this.selectInMenu($('#menu-all-count').parent());\n      view = new AllCountView();\n\n      this.displayView(view);\n    }\n  },\n\n\n  /*\n   * This view is used for count modification\n   */\n  countUpdate: function (countId) {\n    count = window.countCollection.get(countId);\n    this.selectInMenu($('#count-'+ count.get('name')).parent());\n    view = new CountUpdateView({count: count});\n\n    this.displayView(view);\n  },\n\n\n  /*\n   * This view is used for count creation\n   */\n  countCreation: function () {\n    this.selectInMenu($('#menu-add-count').parent());\n    view = new CountCreationView();\n\n    this.displayView(view);\n  },\n\n\n  /*\n   * Screen for create a new expense\n   */\n  newExpense: function (countName) {\n    this.selectInMenu($('#count-'+countName).parent());\n\n    view = new NewExpense({countName: countName});\n\n    this.displayView(view);\n  },\n\n\n  /*\n   * Count printer\n   */\n  printCount: function (countName) {\n    this.selectInMenu($('#count-'+countName).parent());\n\n    view = new CountView({countName: countName});\n\n    this.displayView(view);\n  },\n\n\n  /*\n   * Print all archives\n   */\n    printAllArchive: function () {\n      this.selectInMenu($('#menu-archives').parent());\n      view = new AllArchiveView();\n\n      this.displayView(view);\n    },\n\n\n    /*\n     * Print specifique archive\n     * TODO: Check if we select with archive id or name, need to be with archive\n     * to avoid url conflic with count\n     */\n  printArchive: function (archiveName) {\n    this.selectInMenu($('#menu-archives').parent());\n    view = new ArchiveView({countName: archiveName});\n\n    this.displayView(view);\n  },\n\n\n  /*\n   * Manage menu overlight, must be call in all path\n   */\n      selectInMenu: function (button) {\n        if (this.currentButton !== null) {\n          this.currentButton.removeClass('active');\n        }\n        this.currentButton = button;\n        this.currentButton.addClass('active');\n      },\n\n\n      /*\n       * Generique function to manage view printing, must be call if you want print\n       * a screen\n       */\n    displayView: function (view) {\n      if (this.mainView !== null && this.mainView !== undefined) {\n        this.mainView.remove();\n      }\n      this.mainView = view;\n      $('#content-screen').append(view.$el);\n      view.render();\n    },\n\n\n  /*\n   * Fetch the data from server and create two collection:\n   *\n   * - countCollection\n   * - archiveCollection\n   */\n    initializeCollections: function () {\n      window.countCollection = new CountList();\n      window.archiveCollection = new CountList();\n\n      if (window.listCount == null || window.listCount == undefined || window.listCount == \"\") {\n        console.log('listCount empty');\n        return;\n      }\n\n      for (index in window.listCount) {\n        var count = window.listCount[index];\n        if (count.status === 'active') {\n          var newCount = new Count(count);\n          window.countCollection.add(newCount);\n        }\n        else if (count.status === 'archive') {\n          var newCount = new Count(count);\n          window.archiveCollection.add(newCount);\n        }\n      }\n    },\n});\n\nmodule.exports = Router;\n","var BaseView = require('../../lib/base_view');\nvar ArchiveListView = require('./archive_list_view');\n\nvar AllArchiveView = BaseView.extend({\n\tid: 'all-archive-screen',\n  template: require('./templates/all_archive'),\n\n\n\tinitialize: function () {\n\t\tthis.collection = window.archiveCollection;\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n  getRenderData: function () {\n    return {numberArchives: this.collection.length}\n  },\n\n\tafterRender: function () {\n\t\tthis.collectionView = new ArchiveListView({\n\t\t\tcollection: this.collection,\n\t\t});\n\t\tthis.collectionView.render();\n\t},\n});\n\nmodule.exports = AllArchiveView;\n","var ViewCollection = require('../../lib/view_collection');\nvar ArchiveRowView = require('./archive_row_view');\n\nvar ArchiveListView = ViewCollection.extend({\n\tel: '#list-view',\n\n\titemView: ArchiveRowView,\n\n\tinitialize: function () {\n\t\tthis.collection = window.archiveCollection;\n\t\tViewCollection.prototype.initialize.call(this);\n\t}\n});\n\nmodule.exports = ArchiveListView;\n","var BaseView = require('../../lib/base_view');\n\nvar app = require('../../application');\n\nvar ArchiveRowView = BaseView.extend({\n\ttemplate: require('./templates/archive_row'),\n\n\tevents: {\n\t\t'click .archive-see-count'\t: 'seeArchive',\n\t},\n\n\tgetRenderData: function () {\n\t\treturn ({model: this.model.toJSON()});\n\t},\n\n\n\tseeArchive: function () {\n\t\tapp.router.navigate('archive/' + this.model.get('name'), {trigger: true});\n\t},\n});\n\nmodule.exports = ArchiveRowView;\n","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\nvar locals_ = (locals || {}),numberArchives = locals_.numberArchives;\nbuf.push(\"<div class=\\\"panel panel-default\\\"><div class=\\\"panel-body\\\">\");\nif ( numberArchives > 0)\n{\nbuf.push(\"<ul id=\\\"list-view\\\" class=\\\"nav nav-sidebar\\\"></ul>\");\n}\nelse\n{\nbuf.push(\"<div class=\\\"page-header\\\"><h1>No archive yet</h1><p>When you archieve some account you can find it here :)</p></div>\");\n}\nbuf.push(\"</div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\nvar locals_ = (locals || {}),model = locals_.model;\nbuf.push(\"<div class=\\\"panel panel-primary\\\"><div class=\\\"panel-heading\\\">\" + (jade.escape((jade_interp = model.name) == null ? '' : jade_interp)) + \"</div><div class=\\\"panel-body\\\"><label for=\\\"description\\\">Description</label><div id=\\\"description\\\" class=\\\"form-group\\\"><p>\" + (jade.escape((jade_interp = model.description) == null ? '' : jade_interp)) + \"</p></div><label for=\\\"user-list\\\">Users</label><div id=\\\"user-list\\\" class=\\\"form-group\\\">\");\n// iterate model.users\n;(function(){\n  var $$obj = model.users;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var user = $$obj[$index];\n\nbuf.push(\"<button\" + (jade.attr(\"style\", \"background-color: #\" + (user.color) + \"\", true, false)) + \" class=\\\"btn\\\">\" + (jade.escape((jade_interp = user.name) == null ? '' : jade_interp)) + \"</button>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var user = $$obj[$index];\n\nbuf.push(\"<button\" + (jade.attr(\"style\", \"background-color: #\" + (user.color) + \"\", true, false)) + \" class=\\\"btn\\\">\" + (jade.escape((jade_interp = user.name) == null ? '' : jade_interp)) + \"</button>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div><div class=\\\"form-group\\\"><button class=\\\"archive-see-count btn btn-primary btn-block\\\">See</button></div></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var BaseView = require('../../lib/base_view');\nvar CountListView = require('./count_list_view');\n\nvar AllCountView = BaseView.extend({\n\tid: 'all-count-screen',\n  template: require('./templates/all_count'),\n\n\tevents: {\n\t\t'click #create-new-count' : 'createNewCount',\n\t},\n\n\n\tinitialize: function (attributes) {\n\t\tthis.collection = window.countCollection;\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\n\tafterRender: function () {\n\t\tthis.collectionView = new CountListView({\n\t\t\tcollection: this.collection,\n\t\t});\n\t\tthis.collectionView.render();\n\t},\n\n\n\tcreateNewCount: function () {\n\t\tapp.router.navigate('count/create', {trigger: true});\n\t},\n\n});\n\nmodule.exports = AllCountView;\n","\nvar ViewCollection = require('../../lib/view_collection');\nvar CountRowView = require('./count_row_view');\n\nvar CountListView = ViewCollection.extend({\n\tel: '#list-view',\n\n\titemView: CountRowView,\n\n\tinitialize: function () {\n\t\tthis.collection = window.countCollection;\n\t\tViewCollection.prototype.initialize.call(this);\n\t}\n});\n\nmodule.exports = CountListView;\n","var BaseView = require('../../lib/base_view');\n\nvar app = require('../../application');\n\nvar CountRowView = BaseView.extend({\n\ttemplate: require('./templates/count_row'),\n\n\tevents: {\n\t\t'click .count-delete' : 'deleteCount',\n\t\t'click .count-modify' : 'modifyCount',\n\t\t'click .count-see'\t\t: 'seeCount',\n\t},\n\n\tgetRenderData: function () {\n\t\treturn ({model: this.model.toJSON()});\n\t},\n\n\tdeleteCount: function () {\n\t\twindow.countCollection.remove(this);\n\t\tthis.model.destroy();\n\t\tif (window.countCollection.length === 0) {\n\t\t\tapp.router.navigate('count/create', {trigger: true});\n\t\t}\n\t},\n\n\n\tmodifyCount: function () {\n\t\tapp.router.navigate('count/update/' + this.model.id, {trigger: true});\n\t},\n\n\n\tseeCount: function () {\n\t\tapp.router.navigate('count/' + this.model.get('name'), {trigger: true});\n\t}\n\n});\n\nmodule.exports = CountRowView;\n","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div class=\\\"panel panel-default\\\"><div class=\\\"panel-body\\\"><ul id=\\\"list-view\\\" class=\\\"nav nav-sidebar\\\"><button id=\\\"create-new-count\\\" class=\\\"btn btn-default\\\">Create New Count</button></ul></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\nvar locals_ = (locals || {}),model = locals_.model;\nbuf.push(\"<div class=\\\"panel panel-primary\\\"><div class=\\\"panel-heading\\\">\" + (jade.escape((jade_interp = model.name) == null ? '' : jade_interp)) + \"</div><div class=\\\"panel-body\\\">\");\nif ( model.description)\n{\nbuf.push(\"<label for=\\\"description\\\">Description</label><div id=\\\"description\\\" class=\\\"form-group\\\"><p>\" + (jade.escape((jade_interp = model.description) == null ? '' : jade_interp)) + \"</p></div>\");\n}\nbuf.push(\"<label for=\\\"user-list\\\">Users</label><div id=\\\"user-list\\\" class=\\\"form-group\\\">\");\n// iterate model.users\n;(function(){\n  var $$obj = model.users;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var user = $$obj[$index];\n\nbuf.push(\"<button\" + (jade.attr(\"style\", \"background-color: #\" + (user.color) + \"\", true, false)) + \" class=\\\"btn\\\">\" + (jade.escape((jade_interp = user.name) == null ? '' : jade_interp)) + \"</button>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var user = $$obj[$index];\n\nbuf.push(\"<button\" + (jade.attr(\"style\", \"background-color: #\" + (user.color) + \"\", true, false)) + \" class=\\\"btn\\\">\" + (jade.escape((jade_interp = user.name) == null ? '' : jade_interp)) + \"</button>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div><div class=\\\"form-group\\\"><button class=\\\"count-see btn btn-default btn-block\\\">See</button><button class=\\\"count-modify btn btn-default btn-block\\\">Modify</button><button class=\\\"count-delete btn btn-default btn-block\\\">Delete</button></div></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var CountBaseView = require('./count_base_view');\nvar app = require('../../application');\n\n/*\n * View for all the archived count, based on the countBaseView (as count).\n * Shorter because an archive can't be modified\n */\nvar ArchiveView = CountBaseView.extend({\n\tid: 'archive-screen',\n\n\tcount: null,\n\tdataResume: {\n\t\tallExpense: 0,\n\t},\n\n\tnewExpense: null,\n\tbalancing: null,\n\n\tevents: {\n\t\t'click #header-balancing'\t\t\t: 'printBalancing',\n\t},\n\n\tinitialize: function (attributes) {\n\t\tthis.count = window.archiveCollection.models.find(function (count) {\n\t\t\tif (count.get('name') == attributes.countName) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tCountBaseView.prototype.initialize.call(this);\n\t},\n\n\n});\n\nmodule.exports = ArchiveView;\n","// Requirements\nvar BaseView = require('../../lib/base_view');\nvar app = require('../../application');\n\n// Modules\nvar StatsView = require('./stats_view');\nvar SquareView = require('./square_view');\n\n\n/*\n * CountBaseView is a generique class wiche is call in count and archive. There\n * are both exactly the same stucture but just more or less actions\n */\nvar CountBaseView = BaseView.extend({\n  template: require('./templates/count'),\n\n\n  /*\n   * If count is undefined that mean I haven't find it in the collection so it's\n   * a bad url. I redirect to the mainBoard\n   */\n\tinitialize: function () {\n\t\tif (this.count == undefined || this.count == null) {\n\t\t\tconsole.error('invalide route');\n      app.router.navigate('', {trigger: true});\n\t\t}\n\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\n  /*\n   * Call in render in BaseView class. Render the data to the template\n   */\n\tgetRenderData: function () {\n\t\tif (this.count !== null && this.count !== undefined) {\n      var expensePerUser = +(Math.round(this.count.get('allExpenses') /\n            this.count.get('users').length * 100) / 100).toFixed(2);\n\n\t\t\treturn ({\n        count: this.count.toJSON(),\n        expensePerUser: expensePerUser\n      });\n\t\t}\n\t},\n\n\n  /*\n   * Render stats module\n   */\n\tafterRender: function () {\n      if (this.count.get('expenses').length > 0) {\n        this.stats = new StatsView({count: this.count});\n        this.stats.render();\n      }\n\t},\n\n\n  /*\n   * The balancing is by default not printed so I don't create it unless it's\n   * required.\n   */\n\tprintBalancing: function () {\n\t\tif (this.balancing === null || this.balancing === undefined) {\n\t\t\tthis.balancing = new SquareView({count: this.count});\n\t\t\tthis.balancing.render();\n\t\t}\n\t\tthis.balancing.clickDisplayer()\n\t},\n});\n\nmodule.exports = CountBaseView;\n","var CountBaseView = require('./count_base_view');\nvar app = require('../../application');\n\nvar colorSet = require('../../helper/color_set');\n\n\n\n/*\n * The base view for the ACTIVE count, based on the countBaseView class\n */\nvar CountView = CountBaseView.extend({\n  id: 'count-screen',\n\n  count: null,\n  dataResume: {\n    allExpense: 0,\n  },\n\n  newExpense: null,\n  balancing: null,\n\n  events: {\n    'click #count-lauch-add-user'\t:\t'addUser',\n    'click #add-new-expense'\t\t\t: 'lauchNewExpense',\n    'click .header-expense-elem'\t: 'printTransferBody',\n    'click .delete-expense-elem'\t: 'deleteExpense',\n    'click #header-balancing'\t\t\t: 'printBalancing',\n  },\n\n\n  /*\n   * If we are in 'cozy navigation' we get the name of the class and\n   * check in the collection if he can find it. Else if we are in public\n   * navigation there must be juste one count available, set in the router\n   */\n  initialize: function (attributes) {\n      this.count = window.countCollection.models.find(function (count) {\n        if (count.get('name') == attributes.countName) {\n          return true;\n        }\n        return false;\n      });\n\n    console.log('id: ', this.count.id);\n    CountBaseView.prototype.initialize.call(this);\n  },\n\n\n  /*\n   * All the process for add a user in the count\n   */\n  addUser: function () {\n    var userList = this.count.get('users');\n    var newUser = this.$('#count-input-add-user').val();\n    var color = colorSet[userList.length % colorSet.length];\n\n    // Remove precedent alert\n    this.$('#alert-name').remove();\n\n    // Check if the name is taker\n    var nameIsTaken = userList.find(function (elem) {\n      if (elem.name === newUser) {\n        return true;\n      }\n      return false;\n    });\n\n    // Print an alert and quit if the name is taken\n    if (nameIsTaken !== undefined) {\n      this.$('#name-alert').append('<div id=\"alert-name\" class=\"alert alert-danger\" role=\"alert\"><a href=\"#\" class=\"close\" data-dismiss=\"alert\">&times;</a>Name already taken</div>');\n      return;\n    }\n\n    // Add the name to the userlist if not taken\n    userList.push({name: newUser, seed: 0, leech: 0, color: color});\n    // Add the user button to  userlist\n    this.$('#user-list').append('<div class=\"row\"><button class=\"btn\" style=\"background-color: #'+ color +'\">' + newUser + '</button></div>');\n\n    // Save the new list of user\n    this.count.save({users: userList});\n\n    // Empty the user input\n    this.$('#count-input-add-user').val('');\n\n    // Update the stats\n    if (this.balancing !== null && this.balancing !== undefined) {\n      this.balancing.update();\n    }\n  },\n\n\n  /*\n   * The new expense editor is manage in a new page in order to make this page\n   * lighter in code and informations. It's also easier we re-render the count\n   * with the new data so we haven't to handle this manually.\n   */\n  lauchNewExpense: function (event) {\n    app.router.navigate('count/' + this.count.get('name') + '/new-expense', {trigger: true});\n  },\n\n\n  /*\n   * Remove an expense\n   */\n  removeNewExpense: function () {\n    this.newExpense.remove();\n    delete this.newExpense;\n    this.newExpense= null;\n\n    // Remove the div\n    this.$('#module').prepend('<button id=\"add-new-expense\" class=\"btn btn-default btn-block\"> Add a new expense</button>');\n  },\n\n\n  /*\n   * Print expand or remove data body of an element of the history\n   */\n  printTransferBody: function (event) {\n    var elem =  $(event.target);\n    if (elem.is('span')) {\n      var expenseBody =  $(event.target).parent().next('div');\n    } else {\n      var expenseBody =  $(event.target).next('div');\n    }\n\n    if (expenseBody.is('.printed')) {\n      expenseBody.slideUp('slow');\n      expenseBody.removeClass('printed');\n    } else {\n      expenseBody.slideDown('slow');\n      expenseBody.addClass('printed');\n    }\n  },\n\n\n  /*\n   * Remove a history element and update the stats\n   */\n    deleteExpense: function (event) {\n      var id = Number(this.$(event.target).parent().attr('id'));\n      var self = this;\n      this.count.removeExpense(id, function () {\n        self.stats.update();\n        if (self.balancing !== null && self.balancing !== undefined) {\n          self.balancing.update();\n        }\n        self.$(event.target).parent().parent().remove();\n      });\n      if (this.expenses == null || this.expenses == undefined || this.expenses.length == 0) {\n        this.$('#expense-list-view').prepend('<span id=\"empty-history\">Your history is empty</span>');\n      }\n    },\n\n\n});\n\nmodule.exports = CountView;\n","var BaseView = require('../../lib/base_view');\nvar app = require('../../application');\n\n/*\n * Specific view Wiche manage the balancing module.\n *\n * TODO: Separate with a model\n */\nvar SquareView = BaseView.extend({\n\tid: 'square-view',\n\ttemplate: require('./templates/square'),\n\n\n\tevents: {\n\t\t'click #archive-count': 'archive',\n\t},\n\n\n\tinitialize: function (attributes) {\n\t\tthis.count = attributes.count;\n\n\t\tthis.setUsersBalancing();\n\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\n\trender: function () {\n\t\t$('#module-balancing').prepend(this.$el);\n\t\tthis.$el.html(this.template({users: this.usersBalancing, squareMoves: this.squareMoves}));\n\t\tthis.$('#square-displayer').slideDown('slow');\n\n\t},\n\n\n  /*\n   * Print or remove the body of the balancing module\n   */\n\tclickDisplayer: function () {\n\t\tvar displayer = this.$('#square-displayer');\n\n\t\tif (displayer.is('.printed')) {\n\t\t\tdisplayer.slideUp('slow');\n\t\t\tdisplayer.removeClass('printed');\n\t\t} else {\n\t\t\tdisplayer.slideDown('slow');\n\t\t\tdisplayer.addClass('printed');\n\t\t}\n\t},\n\n\n  /*\n   * Update and rerender the balancing\n   * TODO: make a manual update to changing directly the values not a\n   * remove/rerender because that trigger a slide up/slide down and it's visible\n   */\n\tupdate: function () {\n\t\tthis.setUsersBalancing();\n\t\tthis.setSquareMoves();\n\t\tthis.remove();\n\t\tthis.render();\n\t},\n\n\n  /*\n   * Create an array with the name, color and balancing of each user\n   */\n\tsetUsersBalancing: function () {\n\t\tvar allExpenses = this.count.get('allExpenses');\n\t\tvar users = this.count.get('users');\n\n\t\tthis.usersBalancing = users.map(function (user) {\n\t\t\treturn {\n\t\t\t\tname: user.name,\n\t\t\t\tcolor: user.color,\n\t\t\t\tbalancing: (Math.round((user.seed - user.leech) * 100) / 100).toFixed(2)\n\t\t\t}\n\t\t});\n\n\t\tthis.setSquareMoves();\n\t},\n\n\n  /*\n   * Calcule each moves to balancing the count\n   */\n\tsetSquareMoves: function () {\n\t\tthis.squareMoves = [];\n\n    // copy the userBalancing array\n\t\tvar tmpUsers = JSON.parse(JSON.stringify(this.usersBalancing));\n\n\t\tvar i = 0;\n\n    /*\n     * The main loop: in each loop we find the biggest leecher and the biggest\n     * seeder and we equalise between their. If one of them have is balancing to\n     * 0 I remove it.\n     *\n     * Repeate the loop while it stay 1 or less user. If one user stay it's the\n     * a \"lost\", I can't redistribute to any user. The goal it's to make this\n     * lost tinier possible. For now it's max \"0.01 * (nb or user -1)\"\n     */\n\t\twhile (tmpUsers.length > 1 && i++ < 50) {\n\t\t\tvar leecher = null;\n\t\t\tvar indexLeecher = 0;\n\n      // Find the biggest leecher\n\t\t\tfor (index in tmpUsers) {\n\t\t\t\tif (leecher === null || (leecher.balancing > tmpUsers[index].balancing && leecher != tmpUsers[index])) {\n\t\t\t\t\tleecher = {\n\t\t\t\t\t\tname: tmpUsers[index].name,\n\t\t\t\t\t\tbalancing: Number(tmpUsers[index].balancing)\n\t\t\t\t\t}\n\t\t\t\t\tindexLeecher = index;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar seeder = null;\n\t\t\tvar indexSeeder = 0;\n\n      // Find the biggest seeder\n\t\t\tfor (index in tmpUsers) {\n\t\t\t\tif (seeder === null || (seeder.balancing < tmpUsers[index].balancing && seeder != tmpUsers[index])) {\n\t\t\t\t\tseeder = {\n\t\t\t\t\t\tname: tmpUsers[index].name,\n\t\t\t\t\t\tbalancing: Number(tmpUsers[index].balancing)\n\t\t\t\t\t}\n\t\t\t\t\tindexSeeder = index;\n\t\t\t\t}\n\t\t\t}\n\n      // Set the amount I can send from the leecher to the seeder to equalize a\n      // max\n\t\t\tif (leecher.balancing * -1 > seeder.balancing) {\n\t\t\t\texchange = seeder.balancing;\n\t\t\t} else {\n\t\t\t\texchange = - leecher.balancing;\n\t\t\t}\n\n      // Set the new balancin\n\t\t\tseeder.balancing = (Math.round((seeder.balancing - exchange) * 100) / 100).toFixed(2);\n\t\t\tleecher.balancing = (Math.round((leecher.balancing + exchange) * 100) / 100).toFixed(2);\n\n      // Add the exchange to the list of exchanges\n\t\t\tif (exchange !== 0 && exchange !== 'NaN') {\n\t\t\t\tthis.squareMoves.push({\n\t\t\t\t\tfrom: leecher.name,\n\t\t\t\t\tto: seeder.name,\n\t\t\t\t\texchange: exchange\n\t\t\t\t});\n\t\t\t}\n\n      // Remove the leecher of the seeder if their balancing is equal to 0\n\t\t\tif (leecher.balancing == 0) {\n\t\t\t\ttmpUsers.splice(indexLeecher, 1);\n\t\t\t}\n\t\t\tif (seeder.balancing == 0) {\n\t\t\t\ttmpUsers.splice(indexSeeder, 1);\n\t\t\t}\n\t\t}\n\t},\n\n\n  /*\n   * Archive a count\n   */\n\tarchive: function (event) {\n\t\tthis.count.archive();\n\t},\n\n\n\tresetSquare: function () {\n\t\tthis.trigger('remove-module');\n\t},\n});\n\nmodule.exports = SquareView;\n","\nvar BaseView = require('../../lib/base_view');\n\n\n/*\n * Manage all stats in stats module\n */\nvar StatsView = BaseView.extend({\n\tel: '#stats-module',\n\n\n\tinitialize: function (attributes) {\n\t\tthis.count = attributes.count;\n\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\n\n  /*\n   * Create the pie chart and reder it\n   */\n\trender: function () {\n\t\tvar chartCtx = this.$('#chart-users').get(0).getContext(\"2d\");\n\t\tvar data = this.computeDataCount();\n\t\tthis.pieChart = new Chart(chartCtx).Pie(data);\n\t},\n\n\n  /*\n   * Compute data needed for the pie chart. We don't add the user with 0 seed\n   * because the update don't work from 0 to X value.\n   */\n\tcomputeDataCount: function () {\n    var data = [];\n\t\tthis.count.get('users').forEach(function (elem) {\n      if (Number(elem.seed) !== 0) {\n        data.push({value: elem.seed, color: '#'+elem.color, label: elem.name});\n      }\n\t\t});\n    return data;\n\t},\n\n\n  /*\n   * Update the value of the pie chart\n   */\n\tupdate: function () {\n\t\tvar allExpenses = Number(this.count.get('allExpenses'));\n\t\tvar nbUsers = Number(this.count.get('users').length);\n\n\t\tvar perUserExpenses = +(Math.round(allExpenses / nbUsers * 100) / 100).toFixed(2);\n\n    // Update the numbers of the general state (to the right of the pie chart)\n\t\tthis.$('#nb-expenses').text(this.count.get('expenses').length);\n\t\tthis.$('#all-expenses').text(allExpenses);\n\t\tthis.$('#perUser-expenses').text(perUserExpenses);\n\n\t\tvar self = this;\n\n    /*\n     * Main loop wiche I update/ create data to the pie chart\n     */\n\t\tthis.count.get('users').forEach(function (user, indexUser) {\n\t\t\tvar indexPie = null;\n      // For each user we looking him in the data of the pie chart\n\t\t\tself.pieChart.segments.find(function (pieSegment, index) {\n\t\t\t\tif (pieSegment.label === user.name) {\n\t\t\t\t\tindexPie = index;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t})\n      // If we find it we update the chart with the new data in the segment\n\t\t\tif (indexPie !== undefined && indexPie !== null) {\n\t\t\t\tif (user.seed == 0) {\n\t\t\t\t\tself.pieChart.removeData(indexPie);\n\t\t\t\t} else {\n\t\t\t\t\tself.pieChart.segments[indexPie].value = user.seed;\n\t\t\t\t\tself.pieChart.update();\n\t\t\t\t}\n        // If not we create a new segment\n\t\t\t} else {\n\t\t\t\tself.pieChart.addData({\n\t\t\t\t\tvalue: user.seed,\n\t\t\t\t\tcolor: '#' + user.color,\n\t\t\t\t\tlabel: user.name\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\n});\n\nmodule.exports = StatsView;\n","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\nvar locals_ = (locals || {}),count = locals_.count,expensePerUser = locals_.expensePerUser;\nbuf.push(\"<div class=\\\"panel panel-default\\\"><div class=\\\"panel-body\\\"><div class=\\\"panel panel-primary\\\"><div class=\\\"panel-heading\\\">Users</div><div class=\\\"panel-body\\\"><div id=\\\"stats-module\\\"><div class=\\\"col-md-4\\\"><div id=\\\"user-list\\\" class=\\\"col-md-12\\\">\");\n// iterate count.users\n;(function(){\n  var $$obj = count.users;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var user = $$obj[$index];\n\nbuf.push(\"<div class=\\\"row\\\"><button\" + (jade.attr(\"style\", \"background-color: #\" + (user.color) + \"\", true, false)) + \" class=\\\"btn\\\">\" + (jade.escape((jade_interp = user.name) == null ? '' : jade_interp)) + \"</button></div>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var user = $$obj[$index];\n\nbuf.push(\"<div class=\\\"row\\\"><button\" + (jade.attr(\"style\", \"background-color: #\" + (user.color) + \"\", true, false)) + \" class=\\\"btn\\\">\" + (jade.escape((jade_interp = user.name) == null ? '' : jade_interp)) + \"</button></div>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div>\");\nif ( count.status == 'active')\n{\nbuf.push(\"<div id=\\\"name-alert\\\" class=\\\"row col-md-8\\\"><div class=\\\"input-group\\\"><form><input id=\\\"count-input-add-user\\\" type=\\\"text\\\" placeholder=\\\"My name\\\" class=\\\"form-control\\\"/><span class=\\\"input-group-btn\\\"><input id=\\\"count-lauch-add-user\\\" type=\\\"submit\\\" value=\\\"Add user\\\" class=\\\"btn btn-default\\\"/></span></form></div></div>\");\n}\nbuf.push(\"</div>\");\nif ( count.expenses.length > 0)\n{\nbuf.push(\"<div id=\\\"canvas-block\\\" class=\\\"col-md-4 col-xs-6\\\"><h4>Expenses per users</h4><canvas id=\\\"chart-users\\\" width=\\\"150\\\" height=\\\"150\\\"></canvas></div>\");\n}\nbuf.push(\"</div><div class=\\\"col-md-4 col-xs-6\\\"><label for=\\\"all-expenses\\\">All Expenses:</label><p id=\\\"all-expenses\\\">\" + (jade.escape((jade_interp = count.allExpenses) == null ? '' : jade_interp)) + \"</p><label for=\\\"nb-expenses\\\">Number Expenses:</label><p id=\\\"nb-expenses\\\">\" + (jade.escape((jade_interp = count.expenses.length) == null ? '' : jade_interp)) + \"</p><label for=\\\"nb-expenses\\\">Expenses per user:</label><p id=\\\"perUser-expenses\\\">\" + (jade.escape((jade_interp = expensePerUser) == null ? '' : jade_interp)) + \"</p></div></div>\");\nif ( (count.status == 'active'))\n{\nbuf.push(\"<div class=\\\"btn-group btn-block\\\"><button id=\\\"add-new-expense\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" class=\\\"btn btn-lg btn-success btn-block\\\"><span>&nbsp;Add an expense&nbsp;</span></button></div>\");\n}\nbuf.push(\"</div><div class=\\\"panel panel-primary\\\"><div id=\\\"header-balancing\\\" class=\\\"panel-heading\\\"><span class=\\\"caret\\\"></span><span>&nbsp;Balancing</span></div><div id=\\\"module-balancing\\\"></div></div><div class=\\\"panel panel-primary\\\"><div class=\\\"panel-heading\\\">History</div><div class=\\\"panel-body\\\"><div id=\\\"expense-list-view\\\">\");\nif ( count.expenses.length == 0)\n{\nbuf.push(\"<span id=\\\"empty-history\\\">Your history is empty</span>\");\n}\nelse\n{\n// iterate count.expenses\n;(function(){\n  var $$obj = count.expenses;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var expense = $$obj[$index];\n\nbuf.push(\"<div class=\\\"panel panel-default\\\"><div class=\\\"panel-heading header-expense-elem\\\"><span class=\\\"caret\\\"></span><span> \" + (jade.escape((jade_interp = expense.name) == null ? '' : jade_interp)) + \"</span><span style=\\\"float: right\\\">\" + (jade.escape((jade_interp = expense.amount) == null ? '' : jade_interp)) + \" \" + (jade.escape((jade_interp = expense.currency.name) == null ? '' : jade_interp)) + \"</span></div><div style=\\\"display: none\\\"\" + (jade.attr(\"id\", \"\" + (expense.id) + \"\", true, false)) + \" class=\\\"panel-body\\\"><label for=\\\"seeder\\\">Who have paid ?</label><div id=\\\"seeder\\\"></div><button class=\\\"btn\\\">\" + (jade.escape((jade_interp = expense.seeder) == null ? '' : jade_interp)) + \"</button><div class=\\\"form-group\\\"><label for=\\\"leecher-list\\\">Who contribute ?</label><div id=\\\"leecher-list\\\" class=\\\"form-group\\\">\");\n// iterate expense.leecher\n;(function(){\n  var $$obj = expense.leecher;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var leecher = $$obj[$index];\n\nbuf.push(\"<button class=\\\"btn\\\">\" + (jade.escape((jade_interp = leecher.name) == null ? '' : jade_interp)) + \"</button>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var leecher = $$obj[$index];\n\nbuf.push(\"<button class=\\\"btn\\\">\" + (jade.escape((jade_interp = leecher.name) == null ? '' : jade_interp)) + \"</button>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div></div><button class=\\\"btn btn-default btn-block delete-expense-elem\\\">Delete</button></div></div>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var expense = $$obj[$index];\n\nbuf.push(\"<div class=\\\"panel panel-default\\\"><div class=\\\"panel-heading header-expense-elem\\\"><span class=\\\"caret\\\"></span><span> \" + (jade.escape((jade_interp = expense.name) == null ? '' : jade_interp)) + \"</span><span style=\\\"float: right\\\">\" + (jade.escape((jade_interp = expense.amount) == null ? '' : jade_interp)) + \" \" + (jade.escape((jade_interp = expense.currency.name) == null ? '' : jade_interp)) + \"</span></div><div style=\\\"display: none\\\"\" + (jade.attr(\"id\", \"\" + (expense.id) + \"\", true, false)) + \" class=\\\"panel-body\\\"><label for=\\\"seeder\\\">Who have paid ?</label><div id=\\\"seeder\\\"></div><button class=\\\"btn\\\">\" + (jade.escape((jade_interp = expense.seeder) == null ? '' : jade_interp)) + \"</button><div class=\\\"form-group\\\"><label for=\\\"leecher-list\\\">Who contribute ?</label><div id=\\\"leecher-list\\\" class=\\\"form-group\\\">\");\n// iterate expense.leecher\n;(function(){\n  var $$obj = expense.leecher;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var leecher = $$obj[$index];\n\nbuf.push(\"<button class=\\\"btn\\\">\" + (jade.escape((jade_interp = leecher.name) == null ? '' : jade_interp)) + \"</button>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var leecher = $$obj[$index];\n\nbuf.push(\"<button class=\\\"btn\\\">\" + (jade.escape((jade_interp = leecher.name) == null ? '' : jade_interp)) + \"</button>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div></div><button class=\\\"btn btn-default btn-block delete-expense-elem\\\">Delete</button></div></div>\");\n    }\n\n  }\n}).call(this);\n\n}\nbuf.push(\"</div></div></div></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\nvar locals_ = (locals || {}),users = locals_.users,squareMoves = locals_.squareMoves;\nbuf.push(\"<div id=\\\"square-displayer\\\" style=\\\"display: none\\\" class=\\\"panel-body\\\"><label for=\\\"balancing\\\">Balancing:</label><ul id=\\\"balancing\\\">\");\n// iterate users\n;(function(){\n  var $$obj = users;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var user = $$obj[$index];\n\nbuf.push(\"<li><button\" + (jade.attr(\"style\", \"background-color: #\" + (user.color) + \"\", true, false)) + \" class=\\\"btn\\\">\" + (jade.escape((jade_interp = user.name) == null ? '' : jade_interp)) + \":</button>\");\nif ( user.balancing == 0)\n{\nbuf.push(\"<span style=\\\"color: blue\\\">&nbsp;ok</span>\");\n}\nif ( user.balancing > 0)\n{\nbuf.push(\"<span style=\\\"color: green\\\">&nbsp;+\" + (jade.escape((jade_interp = user.balancing) == null ? '' : jade_interp)) + \"</span>\");\n}\nif ( user.balancing < 0)\n{\nbuf.push(\"<span style=\\\"color: red\\\">&nbsp;\" + (jade.escape((jade_interp = user.balancing) == null ? '' : jade_interp)) + \"</span>\");\n}\nbuf.push(\"</li>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var user = $$obj[$index];\n\nbuf.push(\"<li><button\" + (jade.attr(\"style\", \"background-color: #\" + (user.color) + \"\", true, false)) + \" class=\\\"btn\\\">\" + (jade.escape((jade_interp = user.name) == null ? '' : jade_interp)) + \":</button>\");\nif ( user.balancing == 0)\n{\nbuf.push(\"<span style=\\\"color: blue\\\">&nbsp;ok</span>\");\n}\nif ( user.balancing > 0)\n{\nbuf.push(\"<span style=\\\"color: green\\\">&nbsp;+\" + (jade.escape((jade_interp = user.balancing) == null ? '' : jade_interp)) + \"</span>\");\n}\nif ( user.balancing < 0)\n{\nbuf.push(\"<span style=\\\"color: red\\\">&nbsp;\" + (jade.escape((jade_interp = user.balancing) == null ? '' : jade_interp)) + \"</span>\");\n}\nbuf.push(\"</li>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</ul><label for=\\\"balancing\\\">How to be square:</label><ul id=\\\"square\\\">\");\n// iterate squareMoves\n;(function(){\n  var $$obj = squareMoves;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var move = $$obj[$index];\n\nbuf.push(\"<li>[\" + (jade.escape((jade_interp = move.from) == null ? '' : jade_interp)) + \"] gave [\" + (jade.escape((jade_interp = move.exchange) == null ? '' : jade_interp)) + \"] to [\" + (jade.escape((jade_interp = move.to) == null ? '' : jade_interp)) + \"]</li>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var move = $$obj[$index];\n\nbuf.push(\"<li>[\" + (jade.escape((jade_interp = move.from) == null ? '' : jade_interp)) + \"] gave [\" + (jade.escape((jade_interp = move.exchange) == null ? '' : jade_interp)) + \"] to [\" + (jade.escape((jade_interp = move.to) == null ? '' : jade_interp)) + \"]</li>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</ul><button id=\\\"archive-count\\\" class=\\\"btn btn-primary btn-block\\\">Close and archive</button></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var CountEditionBase = require('./count_edition_base');\nvar BaseView = require('../../lib/base_view');\nvar app = require('../../application');\n\nvar colorSet = require('../../helper/color_set');\n\n/*\n * View wiche manage the editing for an update or a creation of a view\n * I make the both in the same class because it's exactly the same data to\n * manage.\n *\n * It's an update when this.count is defined, so we update this count else if we\n * find no count it's a creation.\n */\nvar CountCreationView = CountEditionBase.extend({\n  template: require('./templates/count_creation'),\n  templateUrl: require('./templates/url'),\n\n  events: {\n    'click #submit-editor'  : 'lauchCountCreation',\n    'click #add-user'\t\t: 'addUser',\n    'click .currency'\t\t: 'setCurrency',\n    'click #input-public'   : 'setPublic'\n  },\n\n\n  initialize: function (params) {\n\n    this.userList = [];\n    this.currencies = [];\n    this.countName = '';\n    this.nameIsUsed = false;\n    this.isPublic = false;\n\n    BaseView.prototype.initialize.call(this);\n  },\n\n\n  /*\n   * Add a listener in the changes of the input of name\n   */\n  afterRender: function () {\n    this.$('#input-name')[0].addEventListener('change', (function(_this) {\n      return function (event) {\n        _this.countName = _this.checkCountName(event);\n      };\n    })(this));\n  },\n\n\n  /*\n   * Check if the name is already taken is the count. If it taken it put an\n   * alert else he add a button with the name.\n   */\n  addUser: function (event) {\n    var color = colorSet[this.userList.length % colorSet.length];\n    var newUser = this.$('#input-users').val();\n\n    this.$('#alert-name').remove();\n\n    // Check if the name is already in the userList\n    var nameIsTaken = this.userList.find(function (user) {\n      if (user.name === newUser) {\n        return true;\n      }\n      return false;\n    });\n\n    // If there is a name we put the alert\n    if (nameIsTaken !== undefined) {\n      this.$('#input-user-grp').append('<div id=\"alert-name\" class=\"alert alert-danger\" role=\"alert\">\\\n          <a href=\"#\" class=\"close\" data-dismiss=\"alert\">&times;</a>Name already taken</div>');\n      return;\n    }\n\n    // Else we create a user\n    if (newUser.length > 0) {\n      this.userList.push({\n        name: newUser,\n        seed: 0,\n        leech: 0,\n        color: color\n      });\n\n      // Add the button\n      this.$('#list-users').append('<button class=\"btn\" style=\"background-color: #'+ color +'\">' + newUser + '</button>');\n      // Add empty the input\n      this.$('#input-users').val('');\n    }\n  },\n\n\n  /*\n   * Set the currencies available of the count\n   * TODO: Move to check input like the users in the add expense to avoid the\n   * manual managing of the overlighting\n   */\n    setCurrency: function (event) {\n      var selectedCurrency = this.$(event.target).children().get(0).value;\n      var currencyIndex = null;\n\n      this.currencies.find(function (elem, index) {\n        if (elem.name == selectedCurrency) {\n          currencyIndex = index;\n          return true;\n        }\n        return false;\n      });\n\n      if (currencyIndex == null) {\n        this.currencies.push({\n          name: selectedCurrency,\n          taux: 1,\n        });\n      } else {\n        this.currencies.splice(currencyIndex, 1);\n      }\n    },\n\n\n    /*\n     * Check all inputs to verifies if their are correct. If their wrong an alert\n     * div is trigger. If all inputs are good I save the new count in the\n     * collection server side\n     */\n    lauchCountCreation: function () {\n      var countDescription = this.$('#input-description').val();\n      var countName = this.countName;\n\n      var error = false;\n\n      this.$('#alert-zone').remove();\n      this.$('#formular').prepend('<div id=\"alert-zone\"></div>');\n\n      if (this.nameIsUsed == true) {\n        this.errorMessage('Your namee is already use');\n        error = true;\n      }\n      if (this.countName.length <= 0) {\n        this.errorMessage('Your count need a name');\n        error = true;\n      }\n      if (this.userList.length <= 0) {\n        this.errorMessage('Your count need almost one user');\n        error = true;\n      }\n      if (this.currencies.length <= 0) {\n        this.errorMessage('Your count need almost one currency');\n        error = true;\n      }\n\n      if (error === false) {\n        window.countCollection.create({\n          name: this.countName,\n          description: countDescription,\n          users: this.userList,\n          currencies: this.currencies,\n          isPublic: this.isPublic,\n          status: 'active',\n        },{\n          wait: true,\n          success: function () {\n            app.router.navigate('count/' + countName, {trigger: true});\n          },\n          error: function (xhr) {\n            console.error(xhr);\n            app.router.navigate('', {trigger: true});\n          }});\n      }\n    },\n});\n\nmodule.exports = CountCreationView;\n","var BaseView = require('../../lib/base_view');\nvar app = require('../../application');\n\nvar colorSet = require('../../helper/color_set');\n\n/*\n * View wiche manage the editing for an update or a creation of a view\n * I make the both in the same class because it's exactly the same data to\n * manage.\n *\n * It's an update when this.count is defined, so we update this count else if we\n * find no count it's a creation.\n */\nvar CountEditorBase = BaseView.extend({\n  id: 'count-editor-screen',\n\n\n  /*\n   * Add a listener in the changes of the input of name\n   */\n  afterRender: function () {\n    this.$('#input-name')[0].addEventListener('change', (function(_this) {\n      return function (event) {_this.checkCountName(event);};\n    })(this));\n    if (this.count !== null && this.count.get('isPublic') == true) {\n      this.setPublic();\n      this.$('#input-public').attr('checked');\n    }\n  },\n\n\n\n  /*\n   * Check if the count name is valable. It can't match with any of the other\n   * count because that would create somes conflics in the url managements (we\n   * find the counts by the name). For now we check the archive.\n   * TODO: move the archive finding and url management to id\n   */\n  checkCountName: function (event) {\n    var countName = event.target.value;\n\n    // Check the count collection\n    var nameIsTaken = window.countCollection.find(function (elem) {\n      if (elem.get('name')== countName) {\n        return true;\n      }\n      return false;\n    });\n\n    // Check the archive collection\n    if (nameIsTaken === undefined || nameIsTaken === null) {\n      var nameIsTaken = window.archiveCollection.find(function (elem) {\n        if (elem.get('name')== countName) {\n          return true;\n        }\n        return false;\n      });\n    }\n\n    var inputGrp = this.$('#input-name-grp');\n    // If name is tacken I add an alert\n    if (nameIsTaken !== null && nameIsTaken !== undefined) {\n      if (this.nameIsUsed === false) {\n        inputGrp.addClass('has-error');\n        inputGrp.append('<div id=\"name-used\" class=\"alert alert-danger\" role=\"alert\">Name already use</div>');\n        this.nameIsUsed = true;\n      }\n    } else {\n      // Else we set the count name\n      if (this.nameIsUsed === true) {\n        this.$('#name-used').remove();\n        inputGrp.removeClass('has-error');\n        this.nameIsUsed = false;\n      }\n      return countName;\n    }\n  },\n\n\n    errorMessage: function (msg) {\n      this.$('#alert-zone').append('<div class=\"alert alert-danger\" role=\"alert\"><a href=\"#\" class=\"close\" data-dismiss=\"alert\">&times;</a>'+msg+'</div>');\n    },\n});\n\nmodule.exports = CountEditorBase;\n","var CountEditionBase = require('./count_edition_base');\nvar BaseView = require('../../lib/base_view');\nvar app = require('../../application');\n\nvar colorSet = require('../../helper/color_set');\n\n/*\n * View wiche manage the editing for an update or a creation of a view\n * I make the both in the same class because it's exactly the same data to\n * manage.\n *\n * It's an update when this.count is defined, so we update this count else if we\n * find no count it's a creation.\n */\nvar CountUpdateView = CountEditionBase.extend({\n  id: 'count-editor-screen',\n  template: require('./templates/count_update'),\n  templateUrl: require('./templates/url'),\n\n  events: {\n    'click #submit-editor'  : 'lauchCountUpdate',\n    'click #input-public'   : 'setPublic'\n  },\n\n\n  initialize: function (params) {\n\n    this.count = params.count;\n\n    if (this.count == null || this.count == undefined) {\n      console.error(\"Error: retrieve count update\");\n    }\n\n    BaseView.prototype.initialize.call(this);\n  },\n\n\n  /*\n   * Add a listener in the changes on the input of name. That permit a dynamique\n   * warning.\n   */\n  afterRender: function () {\n    this.$('#input-name')[0].addEventListener('change', (function(_this) {\n      return function (event) {\n        var res = _this.checkCountName(event);\n        if (res != null) {\n          _this.count.set('name', res);\n        }\n      };\n    })(this));\n\n    if (this.count !== null && this.count.get('isPublic') == true) {\n      this.setPublic();\n    }\n  },\n\n\n  /*\n   * Set the variable <this.isPublic> which will set the credential to the futur\n   * access from the public area.\n   */\n  setPublic: function () {\n    if (this.count.get('isPublic') == false) {\n      this.count.set('isPublic', true);\n      this.$('#input-public').text('Make this count private');\n      this.$('#public-section').append(this.templateUrl({url: this.createPublicUrl()}))\n    } else {\n      this.count.set('isPublic', false);\n      this.$('#input-public').text('Make this count public');\n      this.$('#public-section-body').remove();\n    }\n  },\n\n  /*\n   *\n   */\n  createPublicUrl: function () {\n\n    if (window.domain == false || window.domain == undefined || window.domain == null) {\n      return (window.location.origin + '/public/count/' + this.count.id);\n    } else {\n      return (window.domain + '/public/count/' + this.count.id);\n    }\n  },\n\n\n\n  getRenderData: function () {\n    if (this.count != null) {\n      return ({model: this.count.toJSON()});\n    }\n    return ({model: null});\n  },\n\n\n  /*\n   * Lauche an update server side\n   * TODO: improve it and ckeck if name is already taken\n   */\n    lauchCountUpdate: function () {\n      this.count.set('description', this.$('#input-description').val());\n\n      this.count.save(this.count.attributes, {\n        error: function (xhr) {\n          console.error (xhr);\n        },\n        success: function (data) {\n          app.router.navigate('/count/' + data.get('name'), {trigger: true});\n        }\n      });\n    },\n});\n\nmodule.exports = CountUpdateView;\n","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div class=\\\"page-header\\\"><h1>New count</h1><p>A new count is juste a folder where you can put some friends and</p>create a fictional history of who paid what and who owe who.</div><div id=\\\"formular\\\"><div id=\\\"input-name-grp\\\" class=\\\"form-group\\\"><label for=\\\"input-name\\\">Count Name</label><input id=\\\"input-name\\\" type=\\\"text\\\" placeholder=\\\"Name\\\" class=\\\"form-control\\\"/></div><div class=\\\"form-group\\\"><label for=\\\"input-description\\\">Count Description</label><input id=\\\"input-description\\\" type=\\\"text\\\" placeholder=\\\"Description\\\" class=\\\"form-control\\\"/></div><label for=\\\"currency\\\">Count Currencies</label><div id=\\\"currency\\\" class=\\\"form-group\\\"><div id=\\\"currencies-list\\\" data-toggle=\\\"buttons\\\" class=\\\"btn-group\\\"><label class=\\\"btn btn-primary currency\\\"><input type=\\\"checkbox\\\", autocomplete=\\\"off\\\", value=\\\"€\\\"> €</label><label class=\\\"btn btn-primary currency\\\"><input type=\\\"checkbox\\\", autocomplete=\\\"off\\\", value=\\\"$\\\"> $</label></div></div><div class=\\\"form-group\\\"><div id=\\\"list-users\\\" class=\\\"btn-group\\\"></div></div><label for=\\\"input-user-grp\\\">Count Users</label><div id=\\\"input-user-grp\\\" class=\\\"form-group\\\"><div class=\\\"input-group\\\"><form><input id=\\\"input-users\\\" type=\\\"text\\\" placeholder=\\\"My name\\\" class=\\\"form-control\\\"/><span class=\\\"input-group-btn\\\"><input id=\\\"add-user\\\" type=\\\"submit\\\" value=\\\"Add user\\\" class=\\\"btn btn-default\\\"/></span></form></div></div><div id=\\\"name-alert\\\"></div><button id=\\\"submit-editor\\\" class=\\\"btn btn-default\\\">Submit</button></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\nvar locals_ = (locals || {}),model = locals_.model;\nbuf.push(\"<h1>\" + (jade.escape((jade_interp = model.name) == null ? '' : jade_interp)) + \"</h1><form><div class=\\\"form-group\\\"><label for=\\\"input-name\\\">Count Name</label><input id=\\\"input-name\\\" type=\\\"text\\\" placeholder=\\\"Name\\\"\" + (jade.attr(\"value\", \"\" + (model.name) + \"\", true, false)) + \" class=\\\"form-control\\\"/></div><div class=\\\"form-group\\\"><label for=\\\"input-description\\\">Count Description</label><input id=\\\"input-description\\\" type=\\\"text\\\" placeholder=\\\"Description\\\"\" + (jade.attr(\"value\", \"\" + (model.description) + \"\", true, false)) + \" class=\\\"form-control\\\"/></div><div class=\\\"panel panel-primary\\\"><div class=\\\"panel-heading\\\">Public</div><div class=\\\"panel-body\\\"><div id=\\\"public-section\\\" class=\\\"col-md-6\\\"><div class=\\\"form-group\\\"><div data-toggle=\\\"buttons\\\" class=\\\"btn-group\\\"><label id=\\\"input-public\\\" class=\\\"btn btn-primary leecher\\\">\");\nif ( model.isPublic)\n{\nbuf.push(\"<input type='checkbox' autocomplete=\\\"off\\\"><Make>this count private</Make>\");\n}\nelse\n{\nbuf.push(\"<input id=\\\"input-public\\\" type='checkbox' autocomplete=\\\"off\\\"> Make this count public\");\n}\nbuf.push(\"</label></div></div></div><div class=\\\"col-md-6\\\"><p>You can make this count public, which mean that everyone who try to</p><access>the address below will see the count and will have the</access><possibility>to modify it.</possibility></div></div></div><button id=\\\"submit-editor\\\" class=\\\"btn btn-default\\\">Submit</button></form>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\nvar locals_ = (locals || {}),url = locals_.url;\nbuf.push(\"<div id=\\\"public-section-body\\\"><label for=\\\"public-url\\\">Url to share:</label><p id=\\\"public-url\\\"> \" + (jade.escape((jade_interp = url) == null ? '' : jade_interp)) + \"</p></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","\nvar ViewCollection = require('../../lib/view_collection');\nvar MenuCountRowView = require('./count_row_view');\n\n/*\n * Manage the name of the count in the menu. That's work as a ViewCollection\n * linked to a collection. If you add a model to the collection it will be\n * automatically add to the viewcollection\n */\nvar MenuCountListView = ViewCollection.extend({\n\tel: '#menu-list-count',\n\n\titemView: MenuCountRowView,\n\n  /*\n   * Link the viewCollection to the collection\n   */\n\tinitialize: function (collection) {\n\t\tthis.collection = collection;\n\t\tViewCollection.prototype.initialize.call(this);\n\t},\n});\n\nmodule.exports = MenuCountListView;\n","var BaseView = require('../../lib/base_view');\nvar app = require('../../application');\n\n/*\n * This view represente an element of the viewCollection countListView\n */\nvar MenuCountRowView = BaseView.extend({\n  //template: require('./templates/count_row'),\n\n  tagName: 'li',\n\n  /*\n   * Lauch the click listener to render the count\n   */\n  initialize: function () {\n    var self = this;\n    this.$el.click(function () {\n      self.printCount();\n    })\n  },\n\n\n  getRenderData: function () {\n    return ({model: this.model.toJSON()});\n  },\n\n  render: function () {\n    name = this.model.get('name')\n    this.$el.html('<a id=\"count-' + name +'\">'+ name+'</a>');\n    this.afterRender();\n    return this;\n  },\n\n\n  /*\n   * Reroute  to the count url -> show the view main page\n   */\n  printCount: function () {\n    app.router.navigate('count/' + this.model.get('name'), {trigger: true});\n  },\n});\n\nmodule.exports = MenuCountRowView;\n","var BaseView = require('../../lib/base_view');\nvar CountListView = require('./count_list_view');\nvar app = require('../../application');\n\n/*\n * Main view for the sidemenu. Contain the viewCollection count_list_view to\n * dynamically create a list of the count name  and redirect to the good url.\n */\nvar MenuView = BaseView.extend({\n\tel: '#sidebar',\n\n\tevents: {\n\t\t'click #menu-all-count'\t\t: 'goHomeView',\n\t\t'click #menu-add-count'\t\t: 'createNewCount',\n\t\t'click #menu-archives'\t\t: 'goToArchives',\n\t},\n\n  /*\n   * Render the list of count in the menu\n   */\n\trenderCounts: function () {\n\t\tthis.countCollectionView = new CountListView(window.countCollection);\n\t\tthis.countCollectionView.render();\n\t},\n\n\n  /*\n   * Redirect to the mainBoard\n   */\n\tgoHomeView: function () {\n\t\tapp.router.navigate('', {trigger: true});\n\t},\n\n\n  /*\n   * Redirect to the count creation\n   */\n\tcreateNewCount: function () {\n\t\tapp.router.navigate('count/create', {trigger: true});\n\t},\n\n\n  /*\n   * Redirect to the archive list\n   */\n\tgoToArchives: function () {\n\t\tapp.router.navigate('archive', {trigger: true});\n\t},\n\n});\n\nmodule.exports = MenuView;\n","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\nvar locals_ = (locals || {}),model = locals_.model;\nbuf.push(\"<a\" + (jade.attr(\"id\", \"count-\" + (model.name) + \"\", true, false)) + \">\" + (jade.escape((jade_interp = model.name) == null ? '' : jade_interp)) + \"</a>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var BaseView = require('../../../lib/base_view');\nvar app = require('../../../application');\n\n\n/*\n * View for adding an expense to the count. That's manage in a new view to make\n * more easy the history rendering if we add a new expense.\n */\nvar AddExpenseView = BaseView.extend({\n\ttemplate: require('./templates/new_expense'),\n  id: 'new-expense',\n\n\tcount: null,\n\n\n\tevents: {\n\t\t'click .seeder'\t\t\t\t: 'setSeeder',\n\t\t'click .leecher'\t\t\t: 'setLeecher',\n\t\t'click #add-expense-save'\t: 'lauchSaveExpense',\n\t\t'click #add-expense-cancel'\t: 'resetNewExpense',\n\t\t'click .currency'\t\t\t:\t'setCurrency',\n\t},\n\n\n  /*\n   * Find the correct count with the name in attribute. It can be some conflic\n   * in the url if two count have the same name, so be carefule.\n   */\n\tinitialize: function (attributes) {\n\n    // Find the count\n\t\tthis.count = window.countCollection.models.find(function (count) {\n\t\t\tif (count.get('name') == attributes.countName) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n    // If there is no count, it's a bed url so I redirect to the main page\n\t\tif (this.count == undefined || this.count == null) {\n\t\t\tconsole.error('invalide route');\n      app.router.navigate('', {trigger: true});\n\t\t}\n\n\t\tvar leecher = this.count.get('users').map(function (elem) {\n\t\t\treturn {name: elem.name};\n\t\t});\n\n\t\tthis.data = {\n\t\t\tleecher: leecher,\n\t\t\tcurrency: this.count.get('currencies')[0],\n\t\t};\n\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\n  getRenderData: function () {\n    return {\n      currencies: this.count.get('currencies'),\n      users: this.count.get('users'),\n    };\n  },\n\n  /*\n   * Add all the listener to dynamically check if the inputs are correct\n   */\n  afterRender: function () {\n    this.$('#input-amount')[0].addEventListener('change', (function(_this) {\n      return function (event) {_this.data.amount = event.target.value;};\n    })(this));\n\n    this.$('#input-name')[0].addEventListener('change', (function(_this) {\n      return function (event) {_this.data.name = event.target.value;};\n    })(this));\n\n    this.$('#input-description')[0].addEventListener('change', (function(_this) {\n      return function (event) {_this.data.description = event.target.value;};\n    })(this));\n  },\n\n\n  /*\n   * Set the seeder of the expense or \"who paid\"\n   */\n\tsetSeeder: function (event) {\n\t\tvar target = this.$(event.target).children().get(0).value;\n\t\tif (this.data.seeder === target) {\n\t\t\tthis.data.seeder = null;\n\t\t} else {\n\t\t\tthis.data.seeder = target;\n\t\t}\n\t},\n\n\n  /*\n   * Set the leechers of the expense or \"who take part\"\n   */\n\tsetLeecher: function (event) {\n\t\tvar target = this.$(event.target).children().get(0).value;\n\t\tvar listLeecher = this.data.leecher;\n\t\tvar leecherIndex = null;;\n\n\t\tlistLeecher.find(function (element, index) {\n\t\t\tif (element.name == target) {\n\t\t\t\tleecherIndex = index;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tif (leecherIndex === null) {\n\t\t\tlistLeecher.push({name: target});\n\t\t}\n\t\telse {\n\t\t\tlistLeecher.splice(leecherIndex, 1);\n\t\t}\n\t},\n\n\n  /*\n   * Set the currency of the expense\n   */\n\tsetCurrency: function (event) {\n\t\tthis.data.currency = event.target.text;\n\t\tthis.$('#choose-currency').text(this.data.currency);\n\t},\n\n\n    /*\n     * Check if all inputs are correct and print an alert if it's not, else call\n     * sendNewExpense()\n     */\n\tlauchSaveExpense: function () {\n\t\tvar data = this.data;\n\t\tvar error = false;\n\n\t\tthis.$('#alert-zone').remove();\n\t\tthis.$('#add-expense-displayer').prepend('<div id=\"alert-zone\"></div>');\n\t\tif (data.name === null || data.name == undefined) {\n\t\t\tthis.errorMessage('Your expense need a name');\n\t\t\terror = true;\n\t\t}\n\t\tif (data.seeder === null || data.seeder == undefined) {\n\t\t\tthis.errorMessage('One person must paid');\n\t\t\terror = true;\n\t\t}\n\t\tif (data.amount == undefined) {\n\t\t\tthis.errorMessage('You haven\\'t set a amount');\n\t\t\terror = true;\n\t\t} else if (data.amount <= 0) {\n\t\t\tthis.errorMessage('The amount must be positive');\n\t\t\terror = true;\n\t\t}\n\t\tif (data.leecher.length === 0) {\n\t\t\tthis.errorMessage('You must choose almost one persone who get benefice');\n\t\t\terror = true;\n\t\t}\n\t\tif (error === false) {\n\t\t\tthis.sendNewExpense();\n\t\t}\n\t},\n\n\n  /*\n   * Generique function to trigger an alert.\n   */\n\terrorMessage: function (msg) {\n\t\tthis.$('#alert-zone').append('<div class=\"alert alert-danger\" role=\"alert\">'+msg+'</div>');\n\t},\n\n\n  /*\n   * Make all cacules to create the set of data to create the bunch of data\n   * needer to each expense. I had lost of issues with the number wiche a some\n   * time manage as string so I cast everything as Number to be sure.\n   *\n   * The (Math.round(Num1 +/- Num2) * 100) / 100)toFixed(2) is use to manage the\n   * round.\n   * TODO: create a generique function to manage round.\n   */\n\tsendNewExpense: function () {\n\t\tvar self = this;\n\t\tvar newExpensesList = this.count.get('expenses');\n\t\tnewExpensesList.push(this.data);\n\n\t\tthis.data.id = Date.now() + Math.round(Math.random() % 100);\n\n\t\tvar allUsers = this.count.get('users');\n\t\tallUsers.every(function (user) {\n\t\t\tif (self.data.seeder === user.name) {\n\t\t\t\tuser.seed = (Math.round((Number(self.data.amount) + Number(user.seed)) * 100) / 100).toFixed(2);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tvar leechPerUser = (Math.round(Number(this.data.amount) / Number(this.data.leecher.length) * 100) / 100).toFixed(2);\n\t\tthis.data.leecher.forEach(function (elem) {\n\t\t\tallUsers.every(function (user) {\n\t\t\t\tif (elem.name === user.name) {\n\t\t\t\t\tuser.leech = +(Math.round((Number(leechPerUser) + Number(user.leech)) * 100) / 100).toFixed(2);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t});\n\t\t});\n\n\t\tvar newAllExpenses = (Math.round((Number(this.count.get('allExpenses')) + Number(this.data.amount)) * 100) / 100).toFixed(2);\n\t\tthis.count.save({\n\t\t\tallExpenses: newAllExpenses,\n\t\t\texpenses: newExpensesList,\n\t\t\tusers: allUsers,\n\t\t}, {\n\t\t\twait: true,\n\t\t\tsuccess: function (data) {\n        app.router.navigate('/count/' + self.count.get('name'), {trigger: true});\n\t\t\t},\n\t\t});\n\t},\n\n\tresetNewExpense: function () {\n    app.router.navigate('/count/' + this.count.get('name'), {trigger: true});\n\t},\n});\n\nmodule.exports = AddExpenseView;\n","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\nvar locals_ = (locals || {}),currencies = locals_.currencies,users = locals_.users;\nbuf.push(\"<form id=\\\"add-expense-displayer\\\" class=\\\"form-group\\\"><div id=\\\"alert-zone\\\"></div><label for=\\\"input-name\\\">Expense Name</label><input id=\\\"input-name\\\" type=\\\"text\\\" placeholder=\\\"Shopping...\\\" maxlength=\\\"40\\\" required=\\\"required\\\" autofocus=\\\"autofocus\\\" class=\\\"form-control\\\"/><div class=\\\"form-group\\\"><label for=\\\"input-description\\\">Expense Description</label><textarea id=\\\"input-description\\\" rows=\\\"5\\\" class=\\\"form-control\\\"></textarea></div><div class=\\\"form-group\\\"><label for=\\\"input-amount\\\">Amount</label><div class=\\\"input-group\\\"><input id=\\\"input-amount\\\" type=\\\"number\\\" placeholder=\\\"42.21\\\" aria-label=\\\"...\\\" required=\\\"required\\\" class=\\\"form-control\\\"/><div class=\\\"input-group-btn\\\"><button id=\\\"choose-currency\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" class=\\\"btn btn-default dropdown-toggle\\\">\" + (jade.escape((jade_interp = currencies[0].name) == null ? '' : jade_interp)) + \"</button><ul class=\\\"dropdown-menu dropdown-menu-right\\\">\");\n// iterate currencies\n;(function(){\n  var $$obj = currencies;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var currency = $$obj[$index];\n\nbuf.push(\"<li class=\\\"currency\\\"><a>\" + (jade.escape((jade_interp = currency.name) == null ? '' : jade_interp)) + \"</a></li>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var currency = $$obj[$index];\n\nbuf.push(\"<li class=\\\"currency\\\"><a>\" + (jade.escape((jade_interp = currency.name) == null ? '' : jade_interp)) + \"</a></li>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</ul></div></div></div><label for=\\\"seeder-list\\\">Who Paid ?</label><div class=\\\"form-group\\\"><div id=\\\"seeder-list\\\" data-toggle=\\\"buttons\\\" class=\\\"btn-group\\\">\");\n// iterate users\n;(function(){\n  var $$obj = users;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var user = $$obj[$index];\n\nbuf.push(\"<label class=\\\"btn btn-primary seeder\\\"><input type='radio', autocomplete='off', value=\\\"\" + (jade.escape((jade_interp = user.name) == null ? '' : jade_interp)) + \"\\\"> \" + (jade.escape((jade_interp = user.name) == null ? '' : jade_interp)) + \"</label>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var user = $$obj[$index];\n\nbuf.push(\"<label class=\\\"btn btn-primary seeder\\\"><input type='radio', autocomplete='off', value=\\\"\" + (jade.escape((jade_interp = user.name) == null ? '' : jade_interp)) + \"\\\"> \" + (jade.escape((jade_interp = user.name) == null ? '' : jade_interp)) + \"</label>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div></div><label for=\\\"leecher-list\\\">Who take Part ?</label><div class=\\\"form-group\\\"><div id=\\\"leecher-list\\\" data-toggle=\\\"buttons\\\" class=\\\"btn-group\\\">\");\n// iterate users\n;(function(){\n  var $$obj = users;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var user = $$obj[$index];\n\nbuf.push(\"<label class=\\\"btn btn-primary leecher active\\\"><input type='checkbox', autocomplete='off', value=\\\"\" + (jade.escape((jade_interp = user.name) == null ? '' : jade_interp)) + \"\\\"> \" + (jade.escape((jade_interp = user.name) == null ? '' : jade_interp)) + \"</label>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var user = $$obj[$index];\n\nbuf.push(\"<label class=\\\"btn btn-primary leecher active\\\"><input type='checkbox', autocomplete='off', value=\\\"\" + (jade.escape((jade_interp = user.name) == null ? '' : jade_interp)) + \"\\\"> \" + (jade.escape((jade_interp = user.name) == null ? '' : jade_interp)) + \"</label>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div></div><div class=\\\"form-group\\\"><button id=\\\"add-expense-save\\\" type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\">Save</button><button id=\\\"add-expense-cancel\\\" class=\\\"btn btn-primary btn-block\\\">Cancel</button></div></form>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}"]}