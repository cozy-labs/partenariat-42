{"version":3,"sources":["app/application.js","app/collections/count_list.js","app/helper/color_set.js","app/initialize.js","app/lib/base_view.js","app/lib/view_collection.js","app/lib/view_helper.js","app/models/count.js","app/router.js","app/views/allArchives/all_archive_view.js","app/views/allArchives/archive_list_view.js","app/views/allArchives/archive_row_view.js","app/views/allArchives/templates/all_archive.jade","app/views/allArchives/templates/archive_row.jade","app/views/allCount/all_count_view.js","app/views/allCount/count_list_view.js","app/views/allCount/count_row_view.js","app/views/allCount/templates/all_count.jade","app/views/allCount/templates/count_row.jade","app/views/count/archive_view.js","app/views/count/count_base_view.js","app/views/count/count_view.js","app/views/count/square_view.js","app/views/count/stats_view.js","app/views/count/templates/count.jade","app/views/count/templates/square.jade","app/views/countEditor/count_editor_view.js","app/views/countEditor/templates/count_editor.jade","app/views/menu/count_list_view.js","app/views/menu/count_row_view.js","app/views/menu/menu_view.js","app/views/menu/templates/count_row.jade","app/views/newEvent/expense/new_expense_view.js","app/views/newEvent/expense/templates/new_expense.jade"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApFA;AAAA;ACAA;AAAA;AACA;AADA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1EA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtLA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjpBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApnMA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/DA;AAAA","file":"public/javascripts/app.js","sourcesContent":["\n// Application bootstrapper.\nvar Application = {\n\tinitialize: function () {\n\t\tvar Router = require('./router');\n\n    // Router initialization\n\t\tthis.router = new Router();\n\n\n\t\tif (typeof Object.freeze === 'function') {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n};\n\nmodule.exports = Application;\n","var Count = require('../models/count');\n\nvar CountList = Backbone.Collection.extend({\n\tmodel: Count,\n\turl: 'count',\n});\n\nmodule.exports = CountList;\n","module.exports = [\n    '2979FF',\n    'B3C51D',\n    '00D5B8',\n    'FF5700',\n    'F819AA',\n    '7190AB',\n    '00B0FF',\n    'E70505',\n    'FF7900',\n    '51658D',\n    '304FFE',\n    '00DCE9',\n    'FF2828',\n    '6200EA',\n    '64DD17',\n    '00C853',\n    'FFA300',\n]\n","var application = require('application');\n\n$(function () {\n  application.initialize();\n\n  Backbone.history.start();\n\n\n  // Lauche listenert for responsive menu\n  $('[data-toggle=offcanvas]').click(function() {\n    $('.row-offcanvas').toggleClass('active');\n  });\n});\n","require('lib/view_helper');\n\n// Base class for all views.\nvar BaseView = Backbone.View.extend({\n  initialize: function () {\n    this.render = _.bind(this.render, this);\n  },\n\n  template: function () { return null; },\n  getRenderData: function () { return null; },\n\n  render: function () {\n    this.$el.html(this.template(this.getRenderData()));\n    this.afterRender();\n    return this;\n  },\n\n  afterRender: function () { return null; }\n});\n\nmodule.exports = BaseView;\n","\nvar BaseView = require('./base_view');\n\n/*\n   View that display a collection of subitems\n   used to DRY views\n   Usage : new ViewCollection(collection:collection)\n   Automatically populate itself by creating a itemView for each item\n   in its collection\n\n   can use a template that will be displayed alongside the itemViews\n\n   itemView       : the Backbone.View to be used for items\n   itemViewOptions : the options that will be passed to itemViews\n   collectionEl : the DOM element's selector where the itemViews will\n   be displayed. Automatically falls back to el if null\n   */\n\nvar ViewCollection = BaseView.extend({\n  itemView: null,\n  views: {},\n  collectionEl: null,\n\n  appendView: function (view) {\n    this.$collectionEl.append(view.el);\n  },\n\n  initialize: function () {\n    BaseView.prototype.initialize.call(this);\n    this.views = {};\n    this.listenTo(this.collection, 'reset', this.onReset);\n    this.listenTo(this.collection, 'add', this.addItem);\n    this.listenTo(this.collection, 'remove', this.removeItem);\n\n    if (this.collectionEl === null || this.collectionEl == undefined) {\n      this.collectionEl = this.el;\n    }\n  },\n\n  render: function () {\n    for (id in this.views) {\n      this.views[id].$el.detach();\n    }\n    BaseView.prototype.render.call(this);\n    return this;\n  },\n\n  afterRender: function () {\n    this.$collectionEl = $(this.collectionEl);\n    for (id in this.views) {\n      this.appendView(this.views[id]);\n    }\n    this.onReset(this.collection);\n  },\n\n  remove: function () {\n    this.onReset();\n    BaseView.prototype.remove.call(this);\n  },\n\n  onReset: function (newCollection) {\n    for (id in this.views) {\n      view.remove();\n    }\n\t\tvar self = this;\n\t\tnewCollection.forEach(function (elem) {\n\t\t\t\tself.addItem(elem);\n\t\t});\n  },\n\n  addItem: function (model) {\n    view = new this.itemView({model: model});\n    this.views[model.cid] = view.render();\n    this.appendView(view);\n  },\n\n\n  removeItem: function (model) {\n    this.views[model.cid].remove();\n    delete this.views[model.cid];\n  }\n})\n\nmodule.exports = ViewCollection;\n","// Put your handlebars.js helpers here.\n","\nvar app = require('../application');\n\nvar Count = Backbone.Model.extend({\n\n\tremoveExpense: function (id, callback) {\n\t\tvar index = this.get('expenses').findIndex(function (elem) {\n\t\t\tif (elem.id === id) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tvar newExpenses = this.get('expenses');\n\t\tvar expenseRemove = newExpenses.splice(index, 1)[0];\n\n\t\tvar currentExpenses = this.get('allExpenses');\n\t\tvar currentUsers = this.get('users');\n\t\tvar leecherList = expenseRemove.leecher;\n\t\tvar seeder = expenseRemove.seeder;\n\n\t\tvar newUsersList = this.get('users').map(function (user) {\n\t\t\tleecherList.every(function (expenseUser) {\n\t\t\t\tif (user.name === expenseUser.name) {\n\t\t\t\t\tvar leechPerUser = (Math.round(Number(expenseRemove.amount) / Number(expenseRemove.leecher.length) * 100) / 100).toFixed(2);\n\t\t\t\t\tuser.leech = (Math.round((Number(user.leech) - leechPerUser) * 100) / 100).toFixed(2);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t});\n\n\t\t\tif (user.name == seeder) {\n\t\t\t\t\tuser.seed = (Math.round((Number(user.seed) - Number(expenseRemove.amount)) * 100) / 100).toFixed(2);\n\t\t\t}\n\t\t\treturn user;\n\t\t});\n\n\t\tvar newAllExpenses = (Math.round((Number(currentExpenses) - Number(expenseRemove.amount)) * 100) / 100).toFixed(2);\n\n\t\tthis.save({\n\t\t\texpenses: newExpenses,\n\t\t\tallExpenses: newAllExpenses,\n\t\t\tusers: newUsersList\n\t\t}, {\n\t\t\twait: true,\n\t\t\tsuccess: function () {\n\t\t\t\tcallback();\n\t\t\t},\n\t\t\terror: function (xht) {\n\t\t\t\tconsole.error(xhr);\n\t\t\t}\n\t\t});\n\t},\n\n\n\tarchive: function () {\n\t\tvar self = this;\n\t\tthis.save({\n\t\t\tstatus: 'archive'\n\t\t}, {\n\t\t\twait: true,\n\t\t\tsuccess: function () {\n\t\t\t\twindow.countCollection.remove(self);\n        window.archiveCollection.push(self);\n\t\t\t\tapp.router.navigate('', {trigger: true});\n\t\t\t},\n\t\t\terror: function (xhr) {\n\t\t\t\tconsole.error(xhr);\n\t\t\t}\n\t\t});\n\t},\n});\n\nmodule.exports = Count;\n","\n// View list\nvar AllCountView = require('views/allCount/all_count_view');\nvar AllArchiveView = require('views/allArchives/all_archive_view');\n\n// View screen\nvar CountView = require('views/count/count_view');\nvar MenuView = require('views/menu/menu_view');\nvar CountEditorView = require('views/countEditor/count_editor_view');\nvar ArchiveView = require('views/count/archive_view');\nvar NewExpense = require('views/newEvent/expense/new_expense_view');\n\n// Models\nvar CountList = require('collections/count_list');\nvar Count = require('models/count');\n\nvar Router = Backbone.Router.extend({\n\n\tmainScreen: null,\n\tmainMenu: null,\n\tcurrentButton: null,\n\n  /*\n   * I Fetch all the data from the server in during the router initialization\n   * because for now there is no much data and it's easy to print any page.\n   *\n   * The main HTML is already render server side, be remain the count list\n   */\n\tinitialize: function () {\n    this.initializeCollections();\n\n\t\tthis.mainMenu = new MenuView();\n\t\tthis.mainMenu.renderCounts();\n\n\t\tBackbone.Router.prototype.initialize.call(this);\n\t},\n\n\n\troutes: {\n\t\t''\t\t\t\t\t\t\t\t\t    \t: 'mainBoard',\n\t\t'count/create'\t\t\t     \t: 'countEditor',\n\t\t'count/update/:id'     \t\t: 'countEditor',\n\t\t'count/:name'\t\t\t\t  \t  : 'printCount',\n    'count/:name/new-expense' : 'newExpense',\n\t\t'archive'\t\t\t\t\t\t\t    : 'printAllArchive',\n\t\t'archive/:name'\t\t\t    \t: 'printArchive',\n\t},\n\n\n  /*\n   * Print The main Board with the list of counts.\n   *\n   * If the is not count I redirect to the count creation\n   */\n\tmainBoard: function () {\n\t\tif (window.countCollection.length === 0) {\n\t\t\tthis.navigate('count/create', {trigger: true});\n\t\t} else {\n\t\t\tthis.selectInMenu($('#menu-all-count').parent());\n\t\t\tview = new AllCountView();\n\n\t\t\tthis.displayView(view);\n\t\t}\n\t},\n\n\n  /*\n   * This view is used for count creation and count modifiation too.\n   * If the count id is defined there is an udpade otherwise it's a creation\n   */\n\tcountEditor: function (countId) {\n\t\tthis.selectInMenu($('#menu-add-count').parent());\n\t\tview = new CountEditorView({countId: countId});\n\n\t\tthis.displayView(view);\n\t},\n\n\n  /*\n   * Screen for create a new expense\n   */\n  newExpense: function (countName) {\n\t\tthis.selectInMenu($('#count-'+countName).parent());\n\n\t\tview = new NewExpense({countName: countName});\n\n\t\tthis.displayView(view);\n  },\n\n\n  /*\n   * Count printer\n   */\n\tprintCount: function (countName) {\n\t\tthis.selectInMenu($('#count-'+countName).parent());\n\n\t\tview = new CountView({countName: countName});\n\n\t\tthis.displayView(view);\n\t},\n\n\n  /*\n   * Print all archives\n   */\n\tprintAllArchive: function () {\n\t\tthis.selectInMenu($('#menu-archives').parent());\n\t\tview = new AllArchiveView();\n\n\t\tthis.displayView(view);\n\t},\n\n\n  /*\n   * Print specifique archive\n   * TODO: Check if we select with archive id or name, need to be with archive\n   * to avoid url conflic with count\n   */\n\tprintArchive: function (archiveName) {\n\t\tthis.selectInMenu($('#menu-archives').parent());\n\t\tview = new ArchiveView({countName: archiveName});\n\n\t\tthis.displayView(view);\n\t},\n\n\n  /*\n   * Manage menu overlight, must be call in all path\n   */\n\tselectInMenu: function (button) {\n\t\tif (this.currentButton !== null) {\n\t\t\tthis.currentButton.removeClass('active');\n\t\t}\n\t\tthis.currentButton = button;\n\t\tthis.currentButton.addClass('active');\n\t},\n\n\n  /*\n   * Generique function to manage view printing, must be call if you want print\n   * a screen\n   */\n\tdisplayView: function (view) {\n\t\tif (this.mainView !== null && this.mainView !== undefined) {\n\t\t\tthis.mainView.remove();\n\t\t}\n\t\tthis.mainView = view;\n\t\t$('#content-screen').append(view.$el);\n\t\tview.render();\n\t},\n\n\n  /*\n   * Fetch the data from server and create two collection:\n   *\n   * - countCollection\n   * - archiveCollection\n   */\n\tinitializeCollections: function () {\n\t\twindow.countCollection = new CountList();\n\t\twindow.archiveCollection = new CountList();\n\n\t\tif (window.listCount == null || window.listCount == undefined || window.listCount == \"\") {\n\t\t\tconsole.log('listCount empty');\n\t\t\treturn;\n\t\t}\n\n\t\tfor (index in window.listCount) {\n\t\t\tvar count = window.listCount[index];\n\t\t\tif (count.status === 'active') {\n\t\t\t\tvar newCount = new Count(count);\n\t\t\t\twindow.countCollection.add(newCount);\n\t\t\t}\n\t\t\telse if (count.status === 'archive') {\n\t\t\t\tvar newCount = new Count(count);\n\t\t\t\twindow.archiveCollection.add(newCount);\n\t\t\t}\n\t\t}\n\t},\n});\n\nmodule.exports = Router;\n","var BaseView = require('../../lib/base_view');\nvar ArchiveListView = require('./archive_list_view');\n\nvar AllArchiveView = BaseView.extend({\n\tid: 'all-archive-screen',\n  template: require('./templates/all_archive'),\n\n\n\tinitialize: function () {\n\t\tthis.collection = window.archiveCollection;\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n  getRenderData: function () {\n    return {numberArchives: this.collection.length}\n  },\n\n\tafterRender: function () {\n\t\tthis.collectionView = new ArchiveListView({\n\t\t\tcollection: this.collection,\n\t\t});\n\t\tthis.collectionView.render();\n\t},\n});\n\nmodule.exports = AllArchiveView;\n","var ViewCollection = require('../../lib/view_collection');\nvar ArchiveRowView = require('./archive_row_view');\n\nvar ArchiveListView = ViewCollection.extend({\n\tel: '#list-view',\n\n\titemView: ArchiveRowView,\n\n\tinitialize: function () {\n\t\tthis.collection = window.archiveCollection;\n\t\tViewCollection.prototype.initialize.call(this);\n\t}\n});\n\nmodule.exports = ArchiveListView;\n","var BaseView = require('../../lib/base_view');\n\nvar app = require('../../application');\n\nvar ArchiveRowView = BaseView.extend({\n\ttemplate: require('./templates/archive_row'),\n\n\tevents: {\n\t\t'click .archive-see-count'\t: 'seeArchive',\n\t},\n\n\tgetRenderData: function () {\n\t\treturn ({model: this.model.toJSON()});\n\t},\n\n\n\tseeArchive: function () {\n\t\tapp.router.navigate('archive/' + this.model.get('name'), {trigger: true});\n\t},\n});\n\nmodule.exports = ArchiveRowView;\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"panel panel-default\"><div class=\"panel-body\">');\nif ( numberArchives > 0)\n{\nbuf.push('<ul id=\"list-view\" class=\"nav nav-sidebar\"></ul>');\n}\nelse\n{\nbuf.push('<div class=\"page-header\"><h1>No archive yet</h1><p>When you archieve some account you can find it here :)</p></div>');\n}\nbuf.push('</div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"panel panel-primary\"><div class=\"panel-heading\">' + escape((interp = model.name) == null ? '' : interp) + '</div><div class=\"panel-body\"><label for=\"description\">Description</label><div id=\"description\" class=\"form-group\"><p>' + escape((interp = model.description) == null ? '' : interp) + '</p></div><label for=\"user-list\">Users</label><div id=\"user-list\" class=\"form-group\">');\n// iterate model.users\n;(function(){\n  if ('number' == typeof model.users.length) {\n    for (var $index = 0, $$l = model.users.length; $index < $$l; $index++) {\n      var user = model.users[$index];\n\nbuf.push('<button');\nbuf.push(attrs({ 'style':(\"background-color: #\" + (user.color) + \"\"), \"class\": ('btn') }, {\"style\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + '</button>');\n    }\n  } else {\n    for (var $index in model.users) {\n      var user = model.users[$index];\n\nbuf.push('<button');\nbuf.push(attrs({ 'style':(\"background-color: #\" + (user.color) + \"\"), \"class\": ('btn') }, {\"style\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + '</button>');\n   }\n  }\n}).call(this);\n\nbuf.push('</div><div class=\"form-group\"><button class=\"archive-see-count btn btn-primary btn-block\">See</button></div></div></div>');\n}\nreturn buf.join(\"\");\n};","var BaseView = require('../../lib/base_view');\nvar CountListView = require('./count_list_view');\n\nvar AllCountView = BaseView.extend({\n\tid: 'all-count-screen',\n  template: require('./templates/all_count'),\n\n\tevents: {\n\t\t'click #create-new-count' : 'createNewCount',\n\t},\n\n\n\tinitialize: function (attributes) {\n    console.log('plop')\n\t\tthis.collection = window.countCollection;\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\n\tafterRender: function () {\n\t\tthis.collectionView = new CountListView({\n\t\t\tcollection: this.collection,\n\t\t});\n\t\tthis.collectionView.render();\n\t},\n\n\n\tcreateNewCount: function () {\n\t\tapp.router.navigate('count/create', {trigger: true});\n\t},\n\n});\n\nmodule.exports = AllCountView;\n","\nvar ViewCollection = require('../../lib/view_collection');\nvar CountRowView = require('./count_row_view');\n\nvar CountListView = ViewCollection.extend({\n\tel: '#list-view',\n\n\titemView: CountRowView,\n\n\tinitialize: function () {\n\t\tthis.collection = window.countCollection;\n\t\tViewCollection.prototype.initialize.call(this);\n\t}\n});\n\nmodule.exports = CountListView;\n","var BaseView = require('../../lib/base_view');\n\nvar app = require('../../application');\n\nvar CountRowView = BaseView.extend({\n\ttemplate: require('./templates/count_row'),\n\n\tevents: {\n\t\t'click .count-delete' : 'deleteCount',\n\t\t'click .count-modify' : 'modifyCount',\n\t\t'click .count-see'\t\t: 'seeCount',\n\t},\n\n\tgetRenderData: function () {\n\t\treturn ({model: this.model.toJSON()});\n\t},\n\n\tdeleteCount: function () {\n\t\twindow.countCollection.remove(this);\n\t\tthis.model.destroy();\n\t\tif (window.countCollection.length === 0) {\n\t\t\tapp.router.navigate('count/create', {trigger: true});\n\t\t}\n\t},\n\n\n\tmodifyCount: function () {\n\t\tapp.router.navigate('count/update/' + this.model.id, {trigger: true});\n\t},\n\n\n\tseeCount: function () {\n\t\tapp.router.navigate('count/' + this.model.get('name'), {trigger: true});\n\t}\n\n});\n\nmodule.exports = CountRowView;\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"panel panel-default\"><div class=\"panel-body\"><ul id=\"list-view\" class=\"nav nav-sidebar\"><button id=\"create-new-count\" class=\"btn btn-default\">Create New Count</button></ul></div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"panel panel-primary\"><div class=\"panel-heading\">' + escape((interp = model.name) == null ? '' : interp) + '</div><div class=\"panel-body\">');\nif ( model.description)\n{\nbuf.push('<label for=\"description\">Description</label><div id=\"description\" class=\"form-group\"><p>' + escape((interp = model.description) == null ? '' : interp) + '</p></div>');\n}\nbuf.push('<label for=\"user-list\">Users</label><div id=\"user-list\" class=\"form-group\">');\n// iterate model.users\n;(function(){\n  if ('number' == typeof model.users.length) {\n    for (var $index = 0, $$l = model.users.length; $index < $$l; $index++) {\n      var user = model.users[$index];\n\nbuf.push('<button');\nbuf.push(attrs({ 'style':(\"background-color: #\" + (user.color) + \"\"), \"class\": ('btn') }, {\"style\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + '</button>');\n    }\n  } else {\n    for (var $index in model.users) {\n      var user = model.users[$index];\n\nbuf.push('<button');\nbuf.push(attrs({ 'style':(\"background-color: #\" + (user.color) + \"\"), \"class\": ('btn') }, {\"style\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + '</button>');\n   }\n  }\n}).call(this);\n\nbuf.push('</div><div class=\"form-group\"><button class=\"count-see btn btn-default btn-block\">See</button><button class=\"count-modify btn btn-default btn-block\">Modify</button><button class=\"count-delete btn btn-default btn-block\">Delete</button></div></div></div>');\n}\nreturn buf.join(\"\");\n};","var CountBaseView = require('./count_base_view');\nvar app = require('../../application');\n\nvar ArchiveView = CountBaseView.extend({\n\tid: 'archive-screen',\n\n\tcount: null,\n\tdataResume: {\n\t\tallExpense: 0,\n\t},\n\n\tnewExpense: null,\n\tbalancing: null,\n\n\tevents: {\n\t\t'click #header-balancing'\t\t\t: 'printBalancing',\n\t},\n\n\tinitialize: function (attributes) {\n\t\tthis.count = window.archiveCollection.models.find(function (count) {\n\t\t\tif (count.get('name') == attributes.countName) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tCountBaseView.prototype.initialize.call(this);\n\t},\n\n\n});\n\nmodule.exports = ArchiveView;\n","var BaseView = require('../../lib/base_view');\nvar app = require('../../application');\n\nvar StatsView = require('./stats_view');\nvar SquareView = require('./square_view');\n\n\nvar CountBaseView = BaseView.extend({\n  template: require('./templates/count'),\n\n\tinitialize: function () {\n\t\tif (this.count == undefined || this.count == null) {\n\t\t\tconsole.error('invalide route');\n      app.router.navigate('', {trigger: true});\n\t\t}\n\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\n\tgetRenderData: function () {\n\t\tif (this.count !== null && this.count !== undefined) {\n      var expensePerUser = +(Math.round(this.count.get('allExpenses') /\n            this.count.get('users').length * 100) / 100).toFixed(2);\n\n\t\t\treturn ({\n        count: this.count.toJSON(),\n        expensePerUser: expensePerUser\n      });\n\t\t}\n\t},\n\n\n\tafterRender: function () {\n    //var expenseList = this.count.get('expenses');\n    //var self = this;\n\n    //if (expenseList.length == 0) {\n      //this.$('#expense-list-view').prepend('<span id=\"empty-history\">Your history is empty</span>');\n    //} else {\n      //expenseList.forEach(function (expense) {\n        //self.$('#expense-list-view').prepend(self.templateExpense({expense: expense}));\n      //});\n    //}\n\n    this.stats = new StatsView({count: this.count});\n    this.stats.render();\n\n\t},\n\n\n\tprintBalancing: function () {\n\t\tif (this.balancing === null || this.balancing === undefined) {\n\t\t\tthis.balancing = new SquareView({count: this.count});\n\t\t\tthis.balancing.render();\n\t\t}\n\t\tthis.balancing.clickDisplayer()\n\t},\n});\n\nmodule.exports = CountBaseView;\n","var CountBaseView = require('./count_base_view');\nvar app = require('../../application');\n\nvar colorSet = require('../../helper/color_set');\n\n\n\nvar CountView = CountBaseView.extend({\n\tid: 'count-screen',\n\n\tcount: null,\n\tdataResume: {\n\t\tallExpense: 0,\n\t},\n\n\tnewExpense: null,\n\tbalancing: null,\n\n\tevents: {\n\t\t'click #count-lauch-add-user'\t:\t'addUser',\n\t\t'click #add-new-expense'\t\t\t: 'lauchNewExpense',\n\t\t'click .header-expense-elem'\t: 'printTransferBody',\n\t\t'click .delete-expense-elem'\t: 'deleteExpense',\n\t\t'click #header-balancing'\t\t\t: 'printBalancing',\n\t},\n\n\n\tinitialize: function (attributes) {\n\t\tthis.count = window.countCollection.models.find(function (count) {\n\t\t\tif (count.get('name') == attributes.countName) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tCountBaseView.prototype.initialize.call(this);\n\t},\n\n\n\taddUser: function () {\n\t\tvar userList = this.count.get('users');\n\t\tvar newUser = this.$('#count-input-add-user').val();\n\t\tvar color = colorSet[userList.length % colorSet.length];\n\n\t\tthis.$('#alert-name').remove();\n\t\tvar nameIsTaken = userList.find(function (elem) {\n\t\t\tif (elem.name === newUser) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tif (nameIsTaken !== undefined) {\n\t\t\tthis.$('#name-alert').append('<div id=\"alert-name\" class=\"alert alert-danger\" role=\"alert\"><a href=\"#\" class=\"close\" data-dismiss=\"alert\">&times;</a>Name already taken</div>');\n\t\t\treturn;\n\t\t}\n\n\t\tuserList.push({name: newUser, seed: 0, leech: 0, color: color});\n\t\tthis.$('#user-list').append('<div class=\"row\"><button class=\"btn\" style=\"background-color: #'+ color +'\">' + newUser + '</button></div>');\n\n\t\tif (this.newExpense !== null) {\n\t\t\tthis.newExpense.addUserToCount(newUser);\n\t\t}\n\t\tthis.count.save({users: userList});\n\t\tthis.$('#count-input-add-user').val('');\n\t\tif (this.balancing !== null && this.balancing !== undefined) {\n\t\t\tthis.balancing.update();\n\t\t}\n\t},\n\n\n\tlauchNewExpense: function (event) {\n    console.log('plop3');\n    app.router.navigate('count/' + this.count.get('name') + '/new-expense', {trigger: true});\n\t\t//if (this.newExpense == null) {\n\t\t\t//this.newExpense = new AddExpenseView({count: this.count});\n\t\t//}\n\n\t\t//this.$('#add-new-expense').remove();\n\t\t//this.newExpense.render();\n\n\t\t//this.listenToOnce(this.newExpense, 'remove-new-expense', this.removeNewExpense);\n\n\t\t//this.listenToOnce(this.newExpense, 'add-new-expense', function (data) {\n      //this.$('#empty-history').remove();\n\t\t\t//this.$('#expense-list-view').prepend(this.templateExpense({expense: data}));\n\t\t\t//this.stats.update();\n\t\t\t//if (this.balancing !== null && this.balancing !== undefined) {\n\t\t\t\t//this.balancing.update();\n\t\t\t//}\n\t\t\t//this.removeNewExpense();\n\t\t//});\n\t},\n\n\n\tremoveNewExpense: function () {\n\t\tthis.newExpense.remove();\n\t\tdelete this.newExpense\n\t\t\tthis.newExpense= null;\n\n\t\tthis.$('#module').prepend('<button id=\"add-new-expense\" class=\"btn btn-default btn-block\"> Add a new expense</button>');\n\t},\n\n\n\tprintTransferBody: function (event) {\n\t\tvar elem =  $(event.target);\n\t\tif (elem.is('span')) {\n\t\t\tvar expenseBody =  $(event.target).parent().next('div');\n\t\t} else {\n\t\t\tvar expenseBody =  $(event.target).next('div');\n\t\t}\n\n\t\tif (expenseBody.is('.printed')) {\n\t\t\texpenseBody.slideUp('slow');\n\t\t\texpenseBody.removeClass('printed');\n\t\t} else {\n\t\t\texpenseBody.slideDown('slow');\n\t\t\texpenseBody.addClass('printed');\n\t\t}\n\t},\n\n\n\tdeleteExpense: function (event) {\n\t\tvar id = Number(this.$(event.target).parent().attr('id'));\n\t\tvar self = this;\n\t\tthis.count.removeExpense(id, function () {\n\t\t\tself.stats.update();\n\t\t\tif (self.balancing !== null && self.balancing !== undefined) {\n\t\t\t\tself.balancing.update();\n\t\t\t}\n\t\t\tself.$(event.target).parent().parent().remove();\n\t\t});\n    if (this.expenses.length == 0) {\n      this.$('#expense-list-view').prepend('<span id=\"empty-history\">Your history is empty</span>');\n    }\n\t},\n\n\n});\n\nmodule.exports = CountView;\n","var BaseView = require('../../lib/base_view');\nvar app = require('../../application');\n\n\nvar SquareView = BaseView.extend({\n\tid: 'square-view',\n\ttemplate: require('./templates/square'),\n\n\n\tevents: {\n\t\t'click #archive-count': 'archive',\n\t},\n\n\n\tinitialize: function (attributes) {\n\t\tthis.count = attributes.count;\n\n\t\tthis.setUsersBalancing();\n\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\n\trender: function () {\n\t\t$('#module-balancing').prepend(this.$el);\n\t\tthis.$el.html(this.template({users: this.usersBalancing, squareMoves: this.squareMoves}));\n\t\tthis.$('#square-displayer').slideDown('slow');\n\n\t},\n\n\n\tclickDisplayer: function () {\n\t\tvar displayer = this.$('#square-displayer');\n\n\t\tif (displayer.is('.printed')) {\n\t\t\tdisplayer.slideUp('slow');\n\t\t\tdisplayer.removeClass('printed');\n\t\t} else {\n\t\t\tdisplayer.slideDown('slow');\n\t\t\tdisplayer.addClass('printed');\n\t\t}\n\t},\n\n\n\tupdate: function () {\n\t\tthis.setUsersBalancing();\n\t\tthis.setSquareMoves();\n\t\tthis.remove();\n\t\tthis.render();\n\t},\n\n\n\tsetUsersBalancing: function () {\n\t\tvar allExpenses = this.count.get('allExpenses');\n\t\tvar users = this.count.get('users');\n\n\t\tthis.usersBalancing = users.map(function (user) {\n\t\t\treturn {\n\t\t\t\tname: user.name,\n\t\t\t\tcolor: user.color,\n\t\t\t\tbalancing: (Math.round((user.seed - user.leech) * 100) / 100).toFixed(2)\n\t\t\t}\n\t\t});\n\n\t\tthis.setSquareMoves();\n\t},\n\n\n\tsetSquareMoves: function () {\n\t\tthis.squareMoves = [];\n\n\t\tvar tmpUsers = JSON.parse(JSON.stringify(this.usersBalancing));\n\n\t\tvar i = 0;\n\n\t\twhile (tmpUsers.length > 1 && i++ < 50) {\n\t\t\tvar leecher = null;\n\t\t\tvar indexLeecher = 0;\n\n\t\t\tfor (index in tmpUsers) {\n\t\t\t\tif (leecher === null || (leecher.balancing > tmpUsers[index].balancing && leecher != tmpUsers[index])) {\n\t\t\t\t\tleecher = {\n\t\t\t\t\t\tname: tmpUsers[index].name,\n\t\t\t\t\t\tbalancing: Number(tmpUsers[index].balancing)\n\t\t\t\t\t}\n\t\t\t\t\tindexLeecher = index;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar seeder = null;\n\t\t\tvar indexSeeder = 0;\n\n\t\t\tfor (index in tmpUsers) {\n\t\t\t\tif (seeder === null || (seeder.balancing < tmpUsers[index].balancing && seeder != tmpUsers[index])) {\n\t\t\t\t\tseeder = {\n\t\t\t\t\t\tname: tmpUsers[index].name,\n\t\t\t\t\t\tbalancing: Number(tmpUsers[index].balancing)\n\t\t\t\t\t}\n\t\t\t\t\tindexSeeder = index;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (leecher.balancing * -1 > seeder.balancing) {\n\t\t\t\texchange = seeder.balancing;\n\t\t\t} else {\n\t\t\t\texchange = - leecher.balancing;\n\t\t\t}\n\n\t\t\tseeder.balancing = (Math.round((seeder.balancing - exchange) * 100) / 100).toFixed(2);\n\t\t\tleecher.balancing = (Math.round((leecher.balancing + exchange) * 100) / 100).toFixed(2);\n\n\t\t\tif (exchange !== 0 && exchange !== 'NaN') {\n\t\t\t\tthis.squareMoves.push({\n\t\t\t\t\tfrom: leecher.name,\n\t\t\t\t\tto: seeder.name,\n\t\t\t\t\texchange: exchange\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (leecher.balancing == 0) {\n\t\t\t\ttmpUsers.splice(indexLeecher, 1);\n\t\t\t}\n\t\t\tif (seeder.balancing == 0) {\n\t\t\t\ttmpUsers.splice(indexSeeder, 1);\n\t\t\t}\n\t\t}\n\t},\n\n\n\tarchive: function (event) {\n\t\tthis.count.archive();\n\t},\n\n\n\tresetSquare: function () {\n\t\tthis.trigger('remove-module');\n\t},\n});\n\nmodule.exports = SquareView;\n","\nvar BaseView = require('../../lib/base_view');\n\n\nvar StatsView = BaseView.extend({\n\tel: '#stats-module',\n\n\n\tinitialize: function (attributes) {\n\t\tthis.count = attributes.count;\n\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\n\n\trender: function () {\n\t\tvar chartCtx = this.$('#chart-users').get(0).getContext(\"2d\");\n\t\tvar data = this.computeDataCount();\n\t\tthis.pieChart = new Chart(chartCtx).Pie(data);\n\t},\n\n\n\tcomputeDataCount: function () {\n    var data = [];\n\t\tthis.count.get('users').forEach(function (elem) {\n      if (Number(elem.seed) !== 0) {\n        data.push({value: elem.seed, color: '#'+elem.color, label: elem.name});\n      }\n\t\t});\n    return data;\n\t},\n\n\n\tupdate: function () {\n\t\tvar allExpenses = Number(this.count.get('allExpenses'));\n\t\tvar nbUsers = Number(this.count.get('users').length);\n\n\t\tvar perUserExpenses = +(Math.round(allExpenses / nbUsers * 100) / 100).toFixed(2);\n\n\t\tthis.$('#nb-expenses').text(this.count.get('expenses').length);\n\t\tthis.$('#all-expenses').text(allExpenses);\n\t\tthis.$('#perUser-expenses').text(perUserExpenses);\n\n\t\tvar self = this;\n\n\t\tthis.count.get('users').forEach(function (user, indexUser) {\n\t\t\tvar indexPie = null;\n\t\t\tself.pieChart.segments.find(function (pieSegment, index) {\n\t\t\t\tif (pieSegment.label === user.name) {\n\t\t\t\t\tindexPie = index;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t})\n\t\t\tif (indexPie !== undefined && indexPie !== null) {\n\t\t\t\tif (user.seed == 0) {\n\t\t\t\t\tself.pieChart.removeData(indexPie);\n\t\t\t\t} else {\n\t\t\t\t\tself.pieChart.segments[indexPie].value = user.seed;\n\t\t\t\t\tself.pieChart.update();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.pieChart.addData({\n\t\t\t\t\tvalue: user.seed,\n\t\t\t\t\tcolor: '#' + user.color,\n\t\t\t\t\tlabel: user.name\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\n});\n\nmodule.exports = StatsView;\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"panel panel-default\"><div class=\"panel-body\"><div class=\"panel panel-primary\"><div class=\"panel-heading\">Users</div><div class=\"panel-body\"><div id=\"stats-module\"><div class=\"col-md-4\"><div id=\"user-list\" class=\"col-md-12\">');\n// iterate count.users\n;(function(){\n  if ('number' == typeof count.users.length) {\n    for (var $index = 0, $$l = count.users.length; $index < $$l; $index++) {\n      var user = count.users[$index];\n\nbuf.push('<div class=\"row\"><button');\nbuf.push(attrs({ 'style':(\"background-color: #\" + (user.color) + \"\"), \"class\": ('btn') }, {\"style\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + '</button></div>');\n    }\n  } else {\n    for (var $index in count.users) {\n      var user = count.users[$index];\n\nbuf.push('<div class=\"row\"><button');\nbuf.push(attrs({ 'style':(\"background-color: #\" + (user.color) + \"\"), \"class\": ('btn') }, {\"style\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + '</button></div>');\n   }\n  }\n}).call(this);\n\nbuf.push('</div>');\nif ( count.status == 'active')\n{\nbuf.push('<div id=\"name-alert\" class=\"row col-md-12\"><div class=\"input-group\"><form><input id=\"count-input-add-user\" type=\"text\" placeholder=\"My name\" class=\"form-control\"/><span class=\"input-group-btn\"><input id=\"count-lauch-add-user\" type=\"submit\" value=\"Add user\" class=\"btn btn-default\"/></span></form></div></div>');\n}\nbuf.push('</div><div id=\"canvas-block\" class=\"col-md-4 col-xs-6\"><h4>Expenses per users</h4><canvas id=\"chart-users\" width=\"150\" height=\"150\"></canvas></div></div><div class=\"col-md-4 col-xs-6\"><label for=\"all-expenses\">All Expenses:</label><p id=\"all-expenses\">' + escape((interp = count.allExpenses) == null ? '' : interp) + '</p><label for=\"nb-expenses\">Number Expenses:</label><p id=\"nb-expenses\">' + escape((interp = count.expenses.length) == null ? '' : interp) + '</p><label for=\"nb-expenses\">Expenses per user:</label><p id=\"perUser-expenses\">' + escape((interp = expensePerUser) == null ? '' : interp) + '</p></div>');\nif ( (count.status == 'active'))\n{\nbuf.push('<button id=\"add-new-expense\" class=\"btn btn-primary btn-block\">Add Event</button>');\n}\nbuf.push('</div></div><div class=\"panel panel-primary\"><div id=\"header-balancing\" class=\"panel-heading\"><span class=\"caret\"></span><span>&nbsp;Balancing</span></div><div id=\"module-balancing\"></div></div><div class=\"panel panel-primary\"><div class=\"panel-heading\">History</div><div class=\"panel-body\"><div id=\"expense-list-view\">');\nif ( count.expenses.length == 0)\n{\nbuf.push('<span id=\"empty-history\">Your history is empty</span>');\n}\nelse\n{\n// iterate count.expenses\n;(function(){\n  if ('number' == typeof count.expenses.length) {\n    for (var $index = 0, $$l = count.expenses.length; $index < $$l; $index++) {\n      var expense = count.expenses[$index];\n\nbuf.push('<div class=\"panel panel-default\"><div class=\"panel-heading header-expense-elem\"><span class=\"caret\"></span><span> ' + escape((interp = expense.name) == null ? '' : interp) + '</span><span style=\"float: right\">' + escape((interp = expense.amount) == null ? '' : interp) + ' ' + escape((interp = expense.currency.name) == null ? '' : interp) + '</span></div><div');\nbuf.push(attrs({ 'style':('display: none'), 'id':(\"\" + (expense.id) + \"\"), \"class\": ('panel-body') }, {\"style\":true,\"id\":true}));\nbuf.push('><label for=\"seeder\">Who have paid ?</label><div id=\"seeder\"></div><button class=\"btn\">' + escape((interp = expense.seeder) == null ? '' : interp) + '</button><div class=\"form-group\"><label for=\"leecher-list\">Who contribute ?</label><div id=\"leecher-list\" class=\"form-group\">');\n// iterate expense.leecher\n;(function(){\n  if ('number' == typeof expense.leecher.length) {\n    for (var $index = 0, $$l = expense.leecher.length; $index < $$l; $index++) {\n      var leecher = expense.leecher[$index];\n\nbuf.push('<button class=\"btn\">' + escape((interp = leecher.name) == null ? '' : interp) + '</button>');\n    }\n  } else {\n    for (var $index in expense.leecher) {\n      var leecher = expense.leecher[$index];\n\nbuf.push('<button class=\"btn\">' + escape((interp = leecher.name) == null ? '' : interp) + '</button>');\n   }\n  }\n}).call(this);\n\nbuf.push('</div></div><button class=\"btn btn-default btn-block delete-expense-elem\">Delete</button></div></div>');\n    }\n  } else {\n    for (var $index in count.expenses) {\n      var expense = count.expenses[$index];\n\nbuf.push('<div class=\"panel panel-default\"><div class=\"panel-heading header-expense-elem\"><span class=\"caret\"></span><span> ' + escape((interp = expense.name) == null ? '' : interp) + '</span><span style=\"float: right\">' + escape((interp = expense.amount) == null ? '' : interp) + ' ' + escape((interp = expense.currency.name) == null ? '' : interp) + '</span></div><div');\nbuf.push(attrs({ 'style':('display: none'), 'id':(\"\" + (expense.id) + \"\"), \"class\": ('panel-body') }, {\"style\":true,\"id\":true}));\nbuf.push('><label for=\"seeder\">Who have paid ?</label><div id=\"seeder\"></div><button class=\"btn\">' + escape((interp = expense.seeder) == null ? '' : interp) + '</button><div class=\"form-group\"><label for=\"leecher-list\">Who contribute ?</label><div id=\"leecher-list\" class=\"form-group\">');\n// iterate expense.leecher\n;(function(){\n  if ('number' == typeof expense.leecher.length) {\n    for (var $index = 0, $$l = expense.leecher.length; $index < $$l; $index++) {\n      var leecher = expense.leecher[$index];\n\nbuf.push('<button class=\"btn\">' + escape((interp = leecher.name) == null ? '' : interp) + '</button>');\n    }\n  } else {\n    for (var $index in expense.leecher) {\n      var leecher = expense.leecher[$index];\n\nbuf.push('<button class=\"btn\">' + escape((interp = leecher.name) == null ? '' : interp) + '</button>');\n   }\n  }\n}).call(this);\n\nbuf.push('</div></div><button class=\"btn btn-default btn-block delete-expense-elem\">Delete</button></div></div>');\n   }\n  }\n}).call(this);\n\n}\nbuf.push('</div></div></div></div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div id=\"square-displayer\" style=\"display: none\" class=\"panel-body\"><label for=\"balancing\">Balancing:</label><ul id=\"balancing\">');\n// iterate users\n;(function(){\n  if ('number' == typeof users.length) {\n    for (var $index = 0, $$l = users.length; $index < $$l; $index++) {\n      var user = users[$index];\n\nbuf.push('<li><button');\nbuf.push(attrs({ 'style':(\"background-color: #\" + (user.color) + \"\"), \"class\": ('btn') }, {\"style\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + ':</button>');\nif ( user.balancing == 0)\n{\nbuf.push('<span style=\"color: blue\">&nbsp;ok</span>');\n}\nif ( user.balancing > 0)\n{\nbuf.push('<span style=\"color: green\">&nbsp;+' + escape((interp = user.balancing) == null ? '' : interp) + '</span>');\n}\nif ( user.balancing < 0)\n{\nbuf.push('<span style=\"color: red\">&nbsp;' + escape((interp = user.balancing) == null ? '' : interp) + '</span>');\n}\nbuf.push('</li>');\n    }\n  } else {\n    for (var $index in users) {\n      var user = users[$index];\n\nbuf.push('<li><button');\nbuf.push(attrs({ 'style':(\"background-color: #\" + (user.color) + \"\"), \"class\": ('btn') }, {\"style\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + ':</button>');\nif ( user.balancing == 0)\n{\nbuf.push('<span style=\"color: blue\">&nbsp;ok</span>');\n}\nif ( user.balancing > 0)\n{\nbuf.push('<span style=\"color: green\">&nbsp;+' + escape((interp = user.balancing) == null ? '' : interp) + '</span>');\n}\nif ( user.balancing < 0)\n{\nbuf.push('<span style=\"color: red\">&nbsp;' + escape((interp = user.balancing) == null ? '' : interp) + '</span>');\n}\nbuf.push('</li>');\n   }\n  }\n}).call(this);\n\nbuf.push('</ul><label for=\"balancing\">How to be square:</label><ul id=\"square\">');\n// iterate squareMoves\n;(function(){\n  if ('number' == typeof squareMoves.length) {\n    for (var $index = 0, $$l = squareMoves.length; $index < $$l; $index++) {\n      var move = squareMoves[$index];\n\nbuf.push('<li>[' + escape((interp = move.from) == null ? '' : interp) + '] gave [' + escape((interp = move.exchange) == null ? '' : interp) + '] to [' + escape((interp = move.to) == null ? '' : interp) + ']</li>');\n    }\n  } else {\n    for (var $index in squareMoves) {\n      var move = squareMoves[$index];\n\nbuf.push('<li>[' + escape((interp = move.from) == null ? '' : interp) + '] gave [' + escape((interp = move.exchange) == null ? '' : interp) + '] to [' + escape((interp = move.to) == null ? '' : interp) + ']</li>');\n   }\n  }\n}).call(this);\n\nbuf.push('</ul><button id=\"archive-count\" class=\"btn btn-primary btn-block\">Close and archive</button></div>');\n}\nreturn buf.join(\"\");\n};","var BaseView = require('../../lib/base_view');\nvar template = require('./templates/count_editor');\nvar app = require('../../application');\n\nvar colorSet = require('../../helper/color_set');\n\nvar CountEditorView = BaseView.extend({\n\tid: 'count-editor-screen',\n\ttemplate: template,\n\n\tevents: {\n\t\t'click #submit-editor':\t'submitEditor',\n\t\t'click #add-user'\t\t\t: 'addUser',\n\t\t'click .currency'\t\t\t: 'setCurrency',\n\t},\n\n\n\tinitialize: function (params) {\n\n    this.userList = [];\n    this.currencies = [];\n    this.countName = '';\n    this.nameIsUsed = false;\n\n\t\tthis.count = params.countId;\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\n\trender: function () {\n    BaseView.prototype.render.call(this);\n\t\tthis.$('#input-name')[0].addEventListener('change', (function(_this) {\n\t\t\treturn function (event) {_this.checkCountName(event);};\n\t\t})(this));\n\t},\n\n\n\tcheckCountName(event) {\n\t\tvar countName = event.target.value;\n\n\t\tvar nameIsTaken = window.countCollection.find(function (elem) {\n\t\t\tif (elem.get('name')== countName) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n    if (nameIsTaken === undefined || nameIsTaken === null) {\n      var nameIsTaken = window.archiveCollection.find(function (elem) {\n        if (elem.get('name')== countName) {\n          return true;\n        }\n        return false;\n      });\n    }\n\n\t\tvar inputGrp = this.$('#input-name-grp');\n\t\tif (nameIsTaken !== null && nameIsTaken !== undefined) {\n\t\t\tif (this.nameIsUsed === false) {\n\t\t\t\tinputGrp.addClass('has-error');\n\t\t\t\tinputGrp.append('<div id=\"name-used\" class=\"alert alert-danger\" role=\"alert\">Name already use</div>');\n\t\t\t\tthis.nameIsUsed = true;\n\t\t\t}\n\t\t} else {\n\t\t\t\tif (this.nameIsUsed === true) {\n\t\t\t\t\tthis.$('#name-used').remove();\n\t\t\t\t\tinputGrp.removeClass('has-error');\n\t\t\t\t\tthis.nameIsUsed = false;\n\t\t\t\t}\n\t\t\t\tthis.countName = countName;\n\t\t}\n\t},\n\n\n\tgetRenderData: function () {\n\t\tif (this.count != null && this.count != undefined) {\n\t\t\tvar model = window.countCollection.get(this.count);\n\t\t\treturn ({model: model.toJSON()});\n\t\t}\n\t\treturn ({model: null});\n\t},\n\n\n\tsubmitEditor: function () {\n\t\tif (this.count == null || this.count == undefined) {\n\t\t\tthis.lauchCountCreation();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lauchCountUpdate();\n\t},\n\n\n\taddUser: function (event) {\n\t\tvar color = colorSet[this.userList.length % colorSet.length];\n\t\tvar newUser = this.$('#input-users').val();\n\n\t\tthis.$('#alert-name').remove();\n\n\t\tvar nameIsTaken = this.userList.find(function (user) {\n\t\t\tif (user.name === newUser) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tif (nameIsTaken !== undefined) {\n\t\t\tthis.$('#input-user-grp').append('<div id=\"alert-name\" class=\"alert alert-danger\" role=\"alert\"><a href=\"#\" class=\"close\" data-dismiss=\"alert\">&times;</a>Name already taken</div>');\n\t\t\treturn;\n\t\t}\n\n\t\tif (newUser.length > 0) {\n\t\t\tthis.userList.push({\n\t\t\t\tname: newUser,\n\t\t\t\tseed: 0,\n\t\t\t\tleech: 0,\n\t\t\t\tcolor: color\n\t\t\t});\n\n\t\t\tthis.$('#list-users').append('<button class=\"btn\" style=\"background-color: #'+ color +'\">' + newUser + '</button>');\n      this.$('#input-users').val('');\n\t\t}\n\t},\n\n\n\tsetCurrency: function (event) {\n\t\tvar selectedCurrency = event.target.value;\n\t\tvar currencyIndex = null;\n\n\t\tthis.currencies.find(function (elem, index) {\n\t\t\tif (elem.name == selectedCurrency) {\n\t\t\t\tcurrencyIndex = index;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tvar btnTarget = this.$(event.target);\n\n\t\tif (currencyIndex == null) {\n\t\t\tbtnTarget.removeClass('btn-default');\n\t\t\tbtnTarget.addClass('btn-info');\n\t\t\tthis.currencies.push({\n\t\t\t\tname: selectedCurrency,\n\t\t\t\ttaux: 1,\n\t\t\t});\n\t\t} else {\n\t\t\tbtnTarget.removeClass('btn-info');\n\t\t\tbtnTarget.addClass('btn-default');\n\t\t\tthis.currencies.splice(currencyIndex, 1);\n\t\t}\n\t},\n\n\n\tlauchCountCreation: function () {\n\t\tvar countDescription = this.$('#input-description').val();\n\t\tvar countName = this.countName;\n\n\t\tvar error = false;\n\n\t\tthis.$('#alert-zone').remove();\n\t\tthis.$('#formular').prepend('<div id=\"alert-zone\"></div>');\n\n\t\tif (this.nameIsUsed == true) {\n\t\t\tthis.errorMessage('Your namee is already use');\n\t\t\terror = true;\n\t\t}\n\t\tif (this.countName.length <= 0) {\n\t\t\tthis.errorMessage('Your count need a name');\n\t\t\terror = true;\n\t\t}\n\t\tif (this.userList.length <= 0) {\n\t\t\tthis.errorMessage('Your count need almost one user');\n\t\t\terror = true;\n\t\t}\n\t\tif (this.currencies.length <= 0) {\n\t\t\tthis.errorMessage('Your count need almost one currency');\n\t\t\terror = true;\n\t\t}\n\n\t\tif (error === false) {\n\t\t\twindow.countCollection.create({\n\t\t\t\tname: this.countName,\n\t\t\t\tdescription: countDescription,\n\t\t\t\tusers: this.userList,\n\t\t\t\tcurrencies: this.currencies,\n\t\t\t\tstatus: 'active',\n\t\t\t},{\n\t\t\t\twait: true,\n\t\t\t\tsuccess: function () {\n\t\t\t\t\tapp.router.navigate('count/' + countName, {trigger: true});\n\t\t\t\t},\n\t\t\t\terror: function (xhr) {\n\t\t\t\t\tconsole.error(xhr);\n\t\t\t\t\tapp.router.navigate('', {trigger: true});\n\t\t\t\t}});\n\t\t}\n\t},\n\n\n\terrorMessage: function (msg) {\n\t\tthis.$('#alert-zone').append('<div class=\"alert alert-danger\" role=\"alert\"><a href=\"#\" class=\"close\" data-dismiss=\"alert\">&times;</a>'+msg+'</div>');\n\t},\n\n\n\n\tlauchCountUpdate: function () {\n\t\tvar model = window.countCollection.get(this.count);\n\t\tif (model == null || model == undefined) {\n\t\t\tconsole.error('Can\\'t retrieve model');\n\t\t\tapp.router.navigate('', {trigger: true});\n\t\t\treturn;\n\t\t}\n\n\t\tvar change = {\n\t\t\tname: this.$('#input-name').val(),\n\t\t\tdescription: this.$('#input-description').val(),\n\t\t};\n\t\tmodel.set(change);\n\n\t\tmodel.sync('update', model, {\n\t\t\terror: function (xhr) {\n\t\t\t\tconsole.error (xhr);\n\t\t\t},\n\t\t\tsuccess: function () {\n\t\t\t\tview = _.find(app.router.mainMenu.countCollectionView.views, function (view) {\n\t\t\t\t\tif (view.model.cid == model.cid) {\n\t\t\t\t\t\treturn (view.model);\n\t\t\t\t\t}\n\t\t\t\t\treturn (null);\n\t\t\t\t});\n\t\t\t\tview.render();\n\t\t\t\tapp.router.navigate('', {trigger: true});\n\t\t\t}});\n\t},\n});\n\nmodule.exports = CountEditorView;\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nif ( model)\n{\nbuf.push('<h1>' + escape((interp = model.name) == null ? '' : interp) + '</h1><form><div class=\"form-group\"><label for=\"input-name\">Count Name</label><input');\nbuf.push(attrs({ 'id':('input-name'), 'type':('text'), 'placeholder':('Name'), 'value':(\"\" + (model.name) + \"\"), \"class\": ('form-control') }, {\"type\":true,\"placeholder\":true,\"value\":true}));\nbuf.push('/></div><div class=\"form-group\"><label for=\"input-description\">Count Description</label><input');\nbuf.push(attrs({ 'id':('input-description'), 'type':('text'), 'placeholder':('Description'), 'value':(\"\" + (model.description) + \"\"), \"class\": ('form-control') }, {\"type\":true,\"placeholder\":true,\"value\":true}));\nbuf.push('/></div><button id=\"submit-editor\" class=\"btn btn-default\">Submit</button></form>');\n}\nelse\n{\nbuf.push('<div class=\"page-header\"><h1>New count</h1><small>A new count is juste a folder where you can put some friends and</small>create a fictional history of who paid what and who owe who. Each count is\\ntotaly separate to other count so each user create in this one is not linked\\n(yet) with the others count. If you don\\'t understand just try, you will see !</div><div id=\"formular\"><div id=\"input-name-grp\" class=\"form-group\"><label for=\"input-name\">Count Name</label><input id=\"input-name\" type=\"text\" placeholder=\"Name\" class=\"form-control\"/></div><div class=\"form-group\"><label for=\"input-description\">Count Description</label><input id=\"input-description\" type=\"text\" placeholder=\"Description\" class=\"form-control\"/></div><label for=\"currency\">Count Currencies</label><div id=\"currency\" class=\"form-group\"><button type=\"button\" value=\"€\" class=\"btn btn-default currency\">€</button><button type=\"button\" value=\"$\" class=\"btn btn-default currency\">$</button></div><div class=\"form-group\"><div id=\"list-users\" class=\"btn-group\"></div></div><label for=\"input-user-grp\">Count Users</label><div id=\"input-user-grp\" class=\"form-group\"><div class=\"input-group\"><form><input id=\"input-users\" type=\"text\" placeholder=\"My name\" class=\"form-control\"/><span class=\"input-group-btn\"><input id=\"add-user\" type=\"submit\" value=\"Add user\" class=\"btn btn-default\"/></span></form></div></div><div id=\"name-alert\"></div><button id=\"submit-editor\" class=\"btn btn-default\">Submit</button></div>');\n}\n}\nreturn buf.join(\"\");\n};","\nvar ViewCollection = require('../../lib/view_collection');\nvar MenuCountRowView = require('./count_row_view');\n\nvar MenuCountListView = ViewCollection.extend({\n\tel: '#menu-list-count',\n\n\titemView: MenuCountRowView,\n\n\tinitialize: function (collection) {\n\t\tthis.collection = collection;\n\t\tViewCollection.prototype.initialize.call(this);\n\t},\n});\n\nmodule.exports = MenuCountListView;\n","var BaseView = require('../../lib/base_view');\nvar app = require('../../application');\n\nvar MenuCountRowView = BaseView.extend({\n\ttemplate: require('./templates/count_row'),\n\n\ttagName: 'li',\n\n\tinitialize: function () {\n\t\tvar self = this;\n\t\tthis.$el.click(function () {\n\t\t\tself.printCount();\n\t\t})\n\t},\n\n\n\tgetRenderData: function () {\n\t\treturn ({model: this.model.toJSON()});\n\t},\n\n\n\tprintCount: function () {\n\t\tapp.router.navigate('count/' + this.model.get('name'), {trigger: true});\n\t},\n});\n\nmodule.exports = MenuCountRowView;\n","var BaseView = require('../../lib/base_view');\nvar CountListView = require('./count_list_view');\nvar app = require('../../application');\n\nvar MenuView = BaseView.extend({\n\tel: '#sidebar',\n\n\tevents: {\n\t\t'click #menu-all-count'\t\t: 'goHomeView',\n\t\t'click #menu-add-count'\t\t: 'createNewCount',\n\t\t'click #menu-archives'\t\t: 'goToArchives',\n\t},\n\n\trenderCounts: function () {\n\t\tthis.countCollectionView = new CountListView(window.countCollection);\n\t\tthis.countCollectionView.render();\n\t},\n\n\n\tgoHomeView: function () {\n\t\tapp.router.navigate('', {trigger: true});\n\t},\n\n\n\tcreateNewCount: function () {\n\t\tapp.router.navigate('count/create', {trigger: true});\n\t},\n\n\n\tgoToArchives: function () {\n\t\tapp.router.navigate('archive', {trigger: true});\n\t},\n\n});\n\nmodule.exports = MenuView;\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<a');\nbuf.push(attrs({ 'id':('count-' + (model.name) + '') }, {\"id\":true}));\nbuf.push('>' + escape((interp = model.name) == null ? '' : interp) + '</a>');\n}\nreturn buf.join(\"\");\n};","var BaseView = require('../../../lib/base_view');\nvar app = require('../../../application');\n\n\nvar AddExpenseView = BaseView.extend({\n\ttemplate: require('./templates/new_expense'),\n  id: 'new-expense',\n\n\tcount: null,\n\n\n\tevents: {\n\t\t'click .seeder'\t\t\t\t\t\t\t: 'setSeeder',\n\t\t'click .leecher'\t\t\t\t\t\t: 'setLeecher',\n\t\t'click #add-expense-save'\t\t: 'lauchSaveExpense',\n\t\t'click #add-expense-cancel'\t: 'resetNewExpense',\n\t\t'click .currency'\t\t\t\t\t\t:\t'setCurrency',\n\t},\n\n\n\tinitialize: function (attributes) {\n\t\tthis.count = window.countCollection.models.find(function (count) {\n\t\t\tif (count.get('name') == attributes.countName) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tif (this.count == undefined || this.count == null) {\n\t\t\tconsole.error('invalide route');\n      app.router.navigate('', {trigger: true});\n\t\t}\n\n\t\tvar leecher = this.count.get('users').map(function (elem) {\n\t\t\treturn {name: elem.name};\n\t\t});\n\n\t\tthis.data = {\n\t\t\tleecher: leecher,\n\t\t\tcurrency: this.count.get('currencies')[0],\n\t\t};\n\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\n  getRenderData: function () {\n    return {\n      currencies: this.count.get('currencies'),\n      users: this.count.get('users'),\n    };\n  },\n\n  afterRender: function () {\n    this.$('#input-amount')[0].addEventListener('change', (function(_this) {\n      return function (event) {_this.data.amount = event.target.value;};\n    })(this));\n\n    this.$('#input-name')[0].addEventListener('change', (function(_this) {\n      return function (event) {_this.data.name = event.target.value;};\n    })(this));\n\n    this.$('#input-description')[0].addEventListener('change', (function(_this) {\n      return function (event) {_this.data.description = event.target.value;};\n    })(this));\n  },\n\n\n\tsetSeeder: function (event) {\n\t\tvar target = this.$(event.target).children().get(0).value;\n\t\tif (this.data.seeder === target) {\n\t\t\tthis.data.seeder = null;\n\t\t} else {\n\t\t\tthis.data.seeder = target;\n\t\t}\n\t},\n\n\n\tsetLeecher: function (event) {\n\t\tvar target = this.$(event.target).children().get(0).value;\n\t\tvar listLeecher = this.data.leecher;\n\t\tvar leecherIndex = null;;\n\n\t\tlistLeecher.find(function (element, index) {\n\t\t\tif (element.name == target) {\n\t\t\t\tleecherIndex = index;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tif (leecherIndex === null) {\n\t\t\tlistLeecher.push({name: target});\n\t\t}\n\t\telse {\n\t\t\tlistLeecher.splice(leecherIndex, 1);\n\t\t}\n\t},\n\n\n\taddUserToCount: function (newUser) {\n\t\tthis.$('#seeder-list').append('<label class=\"btn btn-primary seeder\"><input type=\"radio\", autocomplete=\"off\", value=\"'+newUser+'\">' + newUser+'</label>');\n\t\tthis.$('#leecher-list').append('<label class=\"active btn btn-primary seeder\"><input type=\"checkbox\", autocomplete=\"off\", value=\"'+newUser+'\">' + newUser+'</label>');\n\t\tthis.data.leecher.push({name: newUser});\n\t},\n\n\n\tsetCurrency: function (event) {\n\t\tthis.data.currency = event.target.text;\n\t\tthis.$('#choose-currency').text(this.data.currency);\n\t},\n\n\n\tlauchSaveExpense: function () {\n\t\tvar data = this.data;\n\t\tvar error = false;\n\n\t\tthis.$('#alert-zone').remove();\n\t\tthis.$('#add-expense-displayer').prepend('<div id=\"alert-zone\"></div>');\n\t\tif (data.name === null || data.name == undefined) {\n\t\t\tthis.errorMessage('Your expense need a name');\n\t\t\terror = true;\n\t\t}\n\t\tif (data.seeder === null || data.seeder == undefined) {\n\t\t\tthis.errorMessage('One person must paid');\n\t\t\terror = true;\n\t\t}\n\t\tif (data.amount == undefined) {\n\t\t\tthis.errorMessage('You haven\\'t set a amount');\n\t\t\terror = true;\n\t\t} else if (data.amount <= 0) {\n\t\t\tthis.errorMessage('The amount must be positive');\n\t\t\terror = true;\n\t\t}\n\t\tif (data.leecher.length === 0) {\n\t\t\tthis.errorMessage('You must choose almost one persone who get benefice');\n\t\t\terror = true;\n\t\t}\n\t\tif (error === false) {\n\t\t\tthis.sendNewExpense();\n\t\t}\n\t},\n\n\n\terrorMessage: function (msg) {\n\t\tthis.$('#alert-zone').append('<div class=\"alert alert-danger\" role=\"alert\">'+msg+'</div>');\n\t},\n\n\n\tsendNewExpense: function () {\n\t\tvar self = this;\n\t\tvar newExpensesList = this.count.get('expenses');\n\t\tnewExpensesList.push(this.data);\n\n\t\tthis.data.id = Date.now() + Math.round(Math.random() % 100);\n\n\t\tvar allUsers = this.count.get('users');\n\t\tallUsers.every(function (user) {\n\t\t\tif (self.data.seeder === user.name) {\n\t\t\t\tuser.seed = (Math.round((Number(self.data.amount) + Number(user.seed)) * 100) / 100).toFixed(2);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tvar leechPerUser = (Math.round(Number(this.data.amount) / Number(this.data.leecher.length) * 100) / 100).toFixed(2);\n\t\tthis.data.leecher.forEach(function (elem) {\n\t\t\tallUsers.every(function (user) {\n\t\t\t\tif (elem.name === user.name) {\n\t\t\t\t\tuser.leech = +(Math.round((Number(leechPerUser) + Number(user.leech)) * 100) / 100).toFixed(2);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t});\n\t\t});\n\n\t\tvar newAllExpenses = (Math.round((Number(this.count.get('allExpenses')) + Number(this.data.amount)) * 100) / 100).toFixed(2);\n\t\tthis.count.save({\n\t\t\tallExpenses: newAllExpenses,\n\t\t\texpenses: newExpensesList,\n\t\t\tusers: allUsers,\n\t\t}, {\n\t\t\twait: true,\n\t\t\tsuccess: function (data) {\n        app.router.navigate('/count/' + this.count.get('name'), {trigger: true});\n\t\t\t},\n\t\t});\n\t},\n\n\tresetNewExpense: function () {\n    app.router.navigate('/count/' + this.count.get('name'), {trigger: true});\n\t},\n});\n\nmodule.exports = AddExpenseView;\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<form id=\"add-expense-displayer\" class=\"form-group\"><div id=\"alert-zone\"></div><label for=\"input-name\">Expense Name</label><input id=\"input-name\" type=\"text\" placeholder=\"Shopping...\" maxlength=\"40\" required=\"required\" autofocus=\"autofocus\" class=\"form-control\"/><div class=\"form-group\"><label for=\"input-description\">Expense Description</label><textarea id=\"input-description\" rows=\"5\" class=\"form-control\"></textarea></div><div class=\"form-group\"><label for=\"input-amount\">Amount</label><div class=\"input-group\"><input id=\"input-amount\" type=\"number\" placeholder=\"42.21\" aria-label=\"...\" required=\"required\" class=\"form-control\"/><div class=\"input-group-btn\"><button id=\"choose-currency\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" class=\"btn btn-default dropdown-toggle\">' + escape((interp = currencies[0].name) == null ? '' : interp) + '</button><ul class=\"dropdown-menu dropdown-menu-right\">');\n// iterate currencies\n;(function(){\n  if ('number' == typeof currencies.length) {\n    for (var $index = 0, $$l = currencies.length; $index < $$l; $index++) {\n      var currency = currencies[$index];\n\nbuf.push('<li class=\"currency\"><a>' + escape((interp = currency.name) == null ? '' : interp) + '</a></li>');\n    }\n  } else {\n    for (var $index in currencies) {\n      var currency = currencies[$index];\n\nbuf.push('<li class=\"currency\"><a>' + escape((interp = currency.name) == null ? '' : interp) + '</a></li>');\n   }\n  }\n}).call(this);\n\nbuf.push('</ul></div></div></div><label for=\"seeder-list\">Who Paid ?</label><div class=\"form-group\"><div id=\"seeder-list\" data-toggle=\"buttons\" class=\"btn-group\">');\n// iterate users\n;(function(){\n  if ('number' == typeof users.length) {\n    for (var $index = 0, $$l = users.length; $index < $$l; $index++) {\n      var user = users[$index];\n\nbuf.push('<label class=\"btn btn-primary seeder\"><input type=\\'radio\\', autocomplete=\\'off\\', value=\"' + escape((interp = user.name) == null ? '' : interp) + '\"> ' + escape((interp = user.name) == null ? '' : interp) + '</label>');\n    }\n  } else {\n    for (var $index in users) {\n      var user = users[$index];\n\nbuf.push('<label class=\"btn btn-primary seeder\"><input type=\\'radio\\', autocomplete=\\'off\\', value=\"' + escape((interp = user.name) == null ? '' : interp) + '\"> ' + escape((interp = user.name) == null ? '' : interp) + '</label>');\n   }\n  }\n}).call(this);\n\nbuf.push('</div></div><label for=\"leecher-list\">Who take Part ?</label><div class=\"form-group\"><div id=\"leecher-list\" data-toggle=\"buttons\" class=\"btn-group\">');\n// iterate users\n;(function(){\n  if ('number' == typeof users.length) {\n    for (var $index = 0, $$l = users.length; $index < $$l; $index++) {\n      var user = users[$index];\n\nbuf.push('<label class=\"btn btn-primary leecher active\"><input type=\\'checkbox\\', autocomplete=\\'off\\', value=\"' + escape((interp = user.name) == null ? '' : interp) + '\"> ' + escape((interp = user.name) == null ? '' : interp) + '</label>');\n    }\n  } else {\n    for (var $index in users) {\n      var user = users[$index];\n\nbuf.push('<label class=\"btn btn-primary leecher active\"><input type=\\'checkbox\\', autocomplete=\\'off\\', value=\"' + escape((interp = user.name) == null ? '' : interp) + '\"> ' + escape((interp = user.name) == null ? '' : interp) + '</label>');\n   }\n  }\n}).call(this);\n\nbuf.push('</div></div><div class=\"form-group\"><button id=\"add-expense-save\" type=\"submit\" class=\"btn btn-primary btn-block\">Save</button><button id=\"add-expense-cancel\" class=\"btn btn-primary btn-block\">Cancel</button></div></form>');\n}\nreturn buf.join(\"\");\n};"]}