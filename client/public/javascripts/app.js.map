{"version":3,"sources":["app/application.js","app/collections/count_list.js","app/helper/color_set.js","app/initialize.js","app/lib/base_view.js","app/lib/view_collection.js","app/lib/view_helper.js","app/models/count.js","app/router.js","app/views/allArchives/all_archive_view.js","app/views/allArchives/archive_list_view.js","app/views/allArchives/archive_row_view.js","app/views/allArchives/templates/all_archive.jade","app/views/allArchives/templates/archive_row.jade","app/views/allCount/all_count_view.js","app/views/allCount/count_list_view.js","app/views/allCount/count_row_view.js","app/views/allCount/templates/all_count.jade","app/views/allCount/templates/count_row.jade","app/views/archive/archive_view.js","app/views/archive/templates/archive.jade","app/views/count-editor/count_editor_view.js","app/views/count-editor/templates/count_editor.jade","app/views/count/add_expense/add_expense_view.js","app/views/count/add_expense/templates/add_expense.jade","app/views/count/count_view.js","app/views/count/templates/count.jade","app/views/countBase/count_base_view.js","app/views/countBase/square_view.js","app/views/countBase/stats_view.js","app/views/countBase/templates/expense_elem.jade","app/views/countBase/templates/square.jade","app/views/countBase/templates/stats.jade","app/views/menu/count_list_view.js","app/views/menu/count_row_view.js","app/views/menu/menu_view.js","app/views/menu/templates/count_row.jade","app/views/menu/templates/menu.jade"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApFA;AAAA;ACAA;AAAA;AACA;AADA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAznIA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlnOA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAphrrnEA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA","file":"public/javascripts/app.js","sourcesContent":["\n// Application bootstrapper.\nvar Application = {\n\tinitialize: function () {\n\t\tvar Router = require('./router');\n\n\n\t\t// Ideally, initialized classes should be kept in controllers & mediator.\n\t\t// If you're making big webapp, here's more sophisticated skeleton\n\t\t// https://github.com/paulmillr/brunch-with-chaplin\n\n\n\t\tthis.router = new Router();\n\n\n\t\tif (typeof Object.freeze === 'function') {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n};\n\nmodule.exports = Application;\n","var Count = require('../models/count');\n\nvar CountList = Backbone.Collection.extend({\n\tmodel: Count,\n\turl: 'count',\n\n});\n\nmodule.exports = CountList;\n","module.exports = [\n    '2979FF',\n    'B3C51D',\n    '00D5B8',\n    'FF5700',\n    'F819AA',\n    '7190AB',\n    '00B0FF',\n    'E70505',\n    'FF7900',\n    '51658D',\n    '304FFE',\n    '00DCE9',\n    'FF2828',\n    '6200EA',\n    '64DD17',\n    '00C853',\n    'FFA300',\n]\n","var application = require('application');\n\n$(function () {\n\tapplication.initialize();\n\tBackbone.history.start();\n\t\t\t$('[data-toggle=offcanvas]').click(function() {\n\t\t\t\t    $('.row-offcanvas').toggleClass('active');\n\n\t\t\t\t});\n});\n","require('lib/view_helper');\n\n// Base class for all views.\nvar BaseView = Backbone.View.extend({\n  initialize: function () {\n    this.render = _.bind(this.render, this);\n  },\n\n  template: function () { return null; },\n  getRenderData: function () { return null; },\n\n  render: function () {\n    this.$el.html(this.template(this.getRenderData()));\n    this.afterRender();\n    return this;\n  },\n\n  afterRender: function () { return null; }\n});\n\nmodule.exports = BaseView;\n","\nvar BaseView = require('./base_view');\n\n/*\n   View that display a collection of subitems\n   used to DRY views\n   Usage : new ViewCollection(collection:collection)\n   Automatically populate itself by creating a itemView for each item\n   in its collection\n\n   can use a template that will be displayed alongside the itemViews\n\n   itemView       : the Backbone.View to be used for items\n   itemViewOptions : the options that will be passed to itemViews\n   collectionEl : the DOM element's selector where the itemViews will\n   be displayed. Automatically falls back to el if null\n   */\n\nvar ViewCollection = BaseView.extend({\n  itemView: null,\n  views: {},\n  collectionEl: null,\n\n  appendView: function (view) {\n    this.$collectionEl.append(view.el);\n  },\n\n  initialize: function () {\n    BaseView.prototype.initialize.call(this);\n    this.views = {};\n    this.listenTo(this.collection, 'reset', this.onReset);\n    this.listenTo(this.collection, 'add', this.addItem);\n    this.listenTo(this.collection, 'remove', this.removeItem);\n\n    if (this.collectionEl === null || this.collectionEl == undefined) {\n      this.collectionEl = this.el;\n    }\n  },\n\n  render: function () {\n    for (id in this.views) {\n      this.views[id].$el.detach();\n    }\n    BaseView.prototype.render.call(this);\n    return this;\n  },\n\n  afterRender: function () {\n    this.$collectionEl = $(this.collectionEl);\n    for (id in this.views) {\n      this.appendView(this.views[id]);\n    }\n    this.onReset(this.collection);\n  },\n\n  remove: function () {\n    this.onReset();\n    BaseView.prototype.remove.call(this);\n  },\n\n  onReset: function (newCollection) {\n    for (id in this.views) {\n      view.remove();\n    }\n\t\tvar self = this;\n\t\tnewCollection.forEach(function (elem) {\n\t\t\t\tself.addItem(elem);\n\t\t});\n  },\n\n  addItem: function (model) {\n    view = new this.itemView({model: model});\n    this.views[model.cid] = view.render();\n    this.appendView(view);\n  },\n\n\n  removeItem: function (model) {\n    this.views[model.cid].remove();\n    delete this.views[model.cid];\n  }\n})\n\nmodule.exports = ViewCollection;\n","// Put your handlebars.js helpers here.\n","\nvar app = require('../application');\n\nvar Count = Backbone.Model.extend({\n\n\tremoveExpense: function (id, callback) {\n\t\tvar index = this.get('expenses').findIndex(function (elem) {\n\t\t\tif (elem.id === id) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tvar newExpenses = this.get('expenses');\n\t\tvar expenseRemove = newExpenses.splice(index, 1)[0];\n\n\t\tvar currentExpenses = this.get('allExpenses');\n\t\tvar currentUsers = this.get('users');\n\t\tvar leecherList = expenseRemove.leecher;\n\t\tvar seeder = expenseRemove.seeder;\n\n\t\tvar newUsersList = this.get('users').map(function (user) {\n\t\t\tleecherList.every(function (expenseUser) {\n\t\t\t\tif (user.name === expenseUser.name) {\n\t\t\t\t\tvar leechPerUser = (Math.round(Number(expenseRemove.amount) / Number(expenseRemove.leecher.length) * 100) / 100).toFixed(2);\n\t\t\t\t\tuser.leech = (Math.round((Number(user.leech) - leechPerUser) * 100) / 100).toFixed(2);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t});\n\n\t\t\tif (user.name == seeder) {\n\t\t\t\t\tuser.seed = (Math.round((Number(user.seed) - Number(expenseRemove.amount)) * 100) / 100).toFixed(2);\n\t\t\t}\n\t\t\treturn user;\n\t\t});\n\n\t\tvar newAllExpenses = (Math.round((Number(currentExpenses) - Number(expenseRemove.amount)) * 100) / 100).toFixed(2);\n\n\t\tthis.save({\n\t\t\texpenses: newExpenses,\n\t\t\tallExpenses: newAllExpenses,\n\t\t\tusers: newUsersList\n\t\t}, {\n\t\t\twait: true,\n\t\t\tsuccess: function () {\n\t\t\t\tcallback();\n\t\t\t},\n\t\t\terror: function (xht) {\n\t\t\t\tconsole.error(xhr);\n\t\t\t}\n\t\t});\n\t},\n\n\n\tarchive: function () {\n\t\tvar self = this;\n\t\tthis.save({\n\t\t\tstatus: 'archive'\n\t\t}, {\n\t\t\twait: true,\n\t\t\tsuccess: function () {\n\t\t\t\twindow.countCollection.remove(self);\n\t\t\t\tapp.router.navigate('', {trigger: true});\n\t\t\t},\n\t\t\terror: function (xhr) {\n\t\t\t\tconsole.error(xhr);\n\t\t\t}\n\t\t});\n\t},\n});\n\nmodule.exports = Count;\n","\nvar AllCountView = require('views/allCount/all_count_view');\nvar AllArchiveView = require('views/allArchives/all_archive_view');\n\nvar CountView = require('views/count/count_view');\nvar MenuView = require('views/menu/menu_view');\nvar CountEditorView = require('views/count-editor/count_editor_view');\nvar ArchiveView = require('views/archive/archive_view');\n\nvar CountList = require('collections/count_list');\nvar Count = require('models/count');\n\nvar Router = Backbone.Router.extend({\n\n\tmainScreen: null,\n\tmainMenu: null,\n\tcurrentButton: null,\n\n\tinitialize: function () {\n\t\tif (window.countCollection == null || window.countCollection == undefined) {\n\t\t\tthis.initializeCollections();\n\t\t}\n\n\t\tthis.mainMenu = new MenuView();\n\t\tthis.mainMenu.render();\n\n\t\tBackbone.Router.prototype.initialize.call(this);\n\t},\n\n\troutes: {\n\t\t''\t\t\t\t\t\t\t\t\t\t: 'mainBoard',\n\t\t'count/create'\t\t\t\t: 'countEditor',\n\t\t'count/update/:id'\t\t: 'countEditor',\n\t\t'count/:name'\t\t\t\t\t: 'printCount',\n\t\t'archive'\t\t\t\t\t\t\t: 'printAllArchive',\n\t\t'archive/:name'\t\t\t\t: 'printArchive',\n\t},\n\n\n\tmainBoard: function () {\n\t\tif (window.countCollection.length === 0) {\n\t\t\tthis.navigate('count/create', {trigger: true});\n\t\t} else {\n\t\t\tthis.selectInMenu($('#menu-all-count').parent());\n\t\t\tview = new AllCountView();\n\n\t\t\tthis.displayView(view);\n\t\t}\n\t},\n\n\n\tcountEditor: function (countId) {\n\t\tthis.selectInMenu($('#menu-add-count').parent());\n\t\tview = new CountEditorView({countId: countId});\n\n\t\tthis.displayView(view);\n\t},\n\n\n\tprintCount: function (countName) {\n\t\tthis.selectInMenu($('#count-'+countName).parent());\n\t\tview = new CountView({\n\t\t\tcountName: countName,\n\t\t\tmodifyPermission: true,\n\t\t});\n\n\t\tthis.displayView(view);\n\t},\n\n\n\tprintAllArchive: function () {\n\t\tthis.selectInMenu($('#menu-archives').parent());\n\t\tview = new AllArchiveView();\n\n\t\tthis.displayView(view);\n\t},\n\n\n\tprintArchive: function (archiveName) {\n\t\tview = new ArchiveView({\n\t\t\tcountName: archiveName,\n\t\t\tmodifyPermission: false,\n\t\t});\n\n\t\tthis.displayView(view);\n\t},\n\n\n\tselectInMenu: function (button) {\n\t\tif (this.currentButton !== null) {\n\t\t\tthis.currentButton.removeClass('active');\n\t\t}\n\t\tthis.currentButton = button;\n\t\tthis.currentButton.addClass('active');\n\t},\n\n\n\tdisplayView: function (view) {\n\t\tif (this.mainView !== null && this.mainView !== undefined) {\n\t\t\tthis.mainView.remove();\n\t\t}\n\t\tthis.mainView = view;\n\t\t$('#content-screen').append(view.$el);\n\t\tview.render();\n\t},\n\n\n\tinitializeCollections: function () {\n\t\twindow.countCollection = new CountList();\n\t\twindow.archiveCollection = new CountList();\n\n\t\tif (window.listCount == null || window.listCount == undefined || window.listCount == \"\") {\n\t\t\tconsole.log('listCount empty');\n\t\t\treturn;\n\t\t}\n\n\t\tfor (index in window.listCount) {\n\t\t\tvar count = window.listCount[index];\n\t\t\tif (count.status === 'active') {\n\t\t\t\tvar newCount = new Count(count);\n\t\t\t\twindow.countCollection.add(newCount);\n\t\t\t}\n\t\t\telse if (count.status === 'archive') {\n\t\t\t\tvar newCount = new Count(count);\n\t\t\t\twindow.archiveCollection.add(newCount);\n\t\t\t}\n\t\t}\n\t},\n});\n\nmodule.exports = Router;\n","var BaseView = require('../../lib/base_view');\nvar ArchiveListView = require('./archive_list_view');\n\nvar AllArchiveView = BaseView.extend({\n\tid: 'all-archive-screen',\n  template: require('./templates/all_archive'),\n\n\n\tinitialize: function () {\n\t\tthis.collection = window.archiveCollection;\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\n\tafterRender: function () {\n\t\tthis.collectionView = new ArchiveListView({\n\t\t\tcollection: this.collection,\n\t\t});\n\t\tthis.collectionView.render();\n\t},\n});\n\nmodule.exports = AllArchiveView;\n","var ViewCollection = require('../../lib/view_collection');\nvar ArchiveRowView = require('./archive_row_view');\n\nvar ArchiveListView = ViewCollection.extend({\n\tel: '#list-view',\n\n\titemView: ArchiveRowView,\n\n\tinitialize: function () {\n\t\tthis.collection = window.archiveCollection;\n\t\tViewCollection.prototype.initialize.call(this);\n\t}\n});\n\nmodule.exports = ArchiveListView;\n","var BaseView = require('../../lib/base_view');\n\nvar app = require('../../application');\n\nvar ArchiveRowView = BaseView.extend({\n\ttemplate: require('./templates/archive_row'),\n\n\tevents: {\n\t\t'click .archive-see-count'\t: 'seeArchive',\n\t},\n\n\tgetRenderData: function () {\n\t\treturn ({model: this.model.toJSON()});\n\t},\n\n\n\tseeArchive: function () {\n\t\tapp.router.navigate('archive/' + this.model.get('name'), {trigger: true});\n\t},\n});\n\nmodule.exports = ArchiveRowView;\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"panel panel-default\"><div class=\"panel-body\"><ul id=\"list-view\" class=\"nav nav-sidebar\"></ul></div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"panel panel-default\"><div class=\"panel-heading\">' + escape((interp = model.name) == null ? '' : interp) + '</div><div class=\"panel-body\"><label for=\"description\">Description</label><div id=\"description\" class=\"form-group\"><p>' + escape((interp = model.description) == null ? '' : interp) + '</p></div><label for=\"user-list\">Users</label><div id=\"user-list\" class=\"form-group\">');\n// iterate model.users\n;(function(){\n  if ('number' == typeof model.users.length) {\n    for (var $index = 0, $$l = model.users.length; $index < $$l; $index++) {\n      var user = model.users[$index];\n\nbuf.push('<button');\nbuf.push(attrs({ 'style':(\"background-color: #\" + (user.color) + \"\"), \"class\": ('btn') }, {\"style\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + '</button>');\n    }\n  } else {\n    for (var $index in model.users) {\n      var user = model.users[$index];\n\nbuf.push('<button');\nbuf.push(attrs({ 'style':(\"background-color: #\" + (user.color) + \"\"), \"class\": ('btn') }, {\"style\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + '</button>');\n   }\n  }\n}).call(this);\n\nbuf.push('</div><div class=\"form-group\"><button class=\"archive-see-count btn btn-primary btn-block\">See</button></div></div></div>');\n}\nreturn buf.join(\"\");\n};","var BaseView = require('../../lib/base_view');\nvar CountListView = require('./count_list_view');\n\nvar AllCountView = BaseView.extend({\n\tid: 'all-count-screen',\n  template: require('./templates/all_count'),\n\n\tevents: {\n\t\t'click #create-new-count' : 'createNewCount',\n\t},\n\n\n\tinitialize: function (attributes) {\n\t\tthis.collection = window.countCollection;\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\n\tafterRender: function () {\n\t\tthis.collectionView = new CountListView({\n\t\t\tcollection: this.collection,\n\t\t});\n\t\tthis.collectionView.render();\n\t},\n\n\n\tcreateNewCount: function () {\n\t\tapp.router.navigate('count/create', {trigger: true});\n\t},\n\n});\n\nmodule.exports = AllCountView;\n","\nvar ViewCollection = require('../../lib/view_collection');\nvar CountRowView = require('./count_row_view');\n\nvar CountListView = ViewCollection.extend({\n\tel: '#list-view',\n\n\titemView: CountRowView,\n\n\tinitialize: function () {\n\t\tthis.collection = window.countCollection;\n\t\tViewCollection.prototype.initialize.call(this);\n\t}\n});\n\nmodule.exports = CountListView;\n","var BaseView = require('../../lib/base_view');\n\nvar app = require('../../application');\n\nvar CountRowView = BaseView.extend({\n\ttemplate: require('./templates/count_row'),\n\n\tevents: {\n\t\t'click .count-delete' : 'deleteCount',\n\t\t'click .count-modify' : 'modifyCount',\n\t\t'click .count-see'\t\t: 'seeCount',\n\t},\n\n\tgetRenderData: function () {\n\t\treturn ({model: this.model.toJSON()});\n\t},\n\n\tdeleteCount: function () {\n\t\twindow.countCollection.remove(this);\n\t\tthis.model.destroy();\n\t},\n\n\n\tmodifyCount: function () {\n\t\tapp.router.navigate('count/update/' + this.model.id, {trigger: true});\n\t},\n\n\n\tseeCount: function () {\n\t\tapp.router.navigate('count/' + this.model.get('name'), {trigger: true});\n\t}\n\n});\n\nmodule.exports = CountRowView;\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"panel panel-default\"><div class=\"panel-body\"><ul id=\"list-view\" class=\"nav nav-sidebar\"><button id=\"create-new-count\" class=\"btn btn-default\">Create New Count</button></ul></div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"panel panel-default\"><div class=\"panel-heading\">' + escape((interp = model.name) == null ? '' : interp) + '</div><div class=\"panel-body\"><label for=\"description\">Description</label><div id=\"description\" class=\"form-group\"><p>' + escape((interp = model.description) == null ? '' : interp) + '</p></div><label for=\"user-list\">Users</label><div id=\"user-list\" class=\"form-group\">');\n// iterate model.users\n;(function(){\n  if ('number' == typeof model.users.length) {\n    for (var $index = 0, $$l = model.users.length; $index < $$l; $index++) {\n      var user = model.users[$index];\n\nbuf.push('<button');\nbuf.push(attrs({ 'style':(\"background-color: #\" + (user.color) + \"\"), \"class\": ('btn') }, {\"style\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + '</button>');\n    }\n  } else {\n    for (var $index in model.users) {\n      var user = model.users[$index];\n\nbuf.push('<button');\nbuf.push(attrs({ 'style':(\"background-color: #\" + (user.color) + \"\"), \"class\": ('btn') }, {\"style\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + '</button>');\n   }\n  }\n}).call(this);\n\nbuf.push('</div><div class=\"form-group\"><button class=\"count-see btn btn-primary btn-block\">See</button><button class=\"count-modify btn btn-primary btn-block\">Modifier</button><button class=\"count-delete btn btn-primary btn-block\">Supprimer</button></div></div></div>');\n}\nreturn buf.join(\"\");\n};","var CountBaseView = require('../countBase/count_base_view');\nvar app = require('../../application');\n\nvar ArchiveView = CountBaseView.extend({\n\tid: 'archive-screen',\n\ttemplate: require('./templates/archive'),\n\n\tcount: null,\n\tdataResume: {\n\t\tallExpense: 0,\n\t},\n\n\tnewExpense: null,\n\tbalancing: null,\n\n\tevents: {\n\t\t'click #header-balancing'\t\t\t: 'printBalancing',\n\t},\n\n\tinitialize: function (attributes) {\n\t\tthis.count = window.archiveCollection.models.find(function (count) {\n\t\t\tif (count.get('name') == attributes.countName) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tCountBaseView.prototype.initialize.call(this);\n\t},\n\n\n});\n\nmodule.exports = ArchiveView;\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"panel panel-default\"><div class=\"panel-body\"><div id=\"stats-module\"></div><div class=\"panel panel-default\"><div id=\"header-balancing\" class=\"panel-heading\">Balancing</div><div id=\"module-balancing\"></div></div><div class=\"panel panel-default\"><div class=\"panel-heading\">Expense</div><div id=\"expense-list-view\" class=\"panel-body\"></div></div></div></div>');\n}\nreturn buf.join(\"\");\n};","var BaseView = require('../../lib/base_view');\nvar template = require('./templates/count_editor');\nvar app = require('../../application');\n\nvar colorSet = require('../../helper/color_set');\n\nvar CountEditor = BaseView.extend({\n\tid: 'count-editor-screen',\n\ttemplate: template,\n\n\tuserList: [],\n\tcurrencies: [],\n\tcountName: '',\n\tnameIsUsed: false,\n\n\tevents: {\n\t\t'click #submit-editor':\t'submitEditor',\n\t\t'click #add-user'\t\t\t: 'addUser',\n\t\t'click .currency'\t\t\t: 'setCurrency',\n\t},\n\n\n\tinitialize: function (params) {\n\n\t\tthis.count = params.countId;\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\n\tafterRender: function () {\n\t\tthis.$('#input-name')[0].addEventListener('change', (function(_this) {\n\t\t\treturn function (event) {_this.checkCountName(event);};\n\t\t})(this));\n\t},\n\n\n\tcheckCountName(event) {\n\t\tvar countName = event.target.value;\n\n\t\tvar nameIsTaken = window.countCollection.find(function (elem) {\n\t\t\tif (elem.name == countName) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tvar inputGrp = this.$('#input-name-grp');\n\t\tif (nameIsTaken !== null && nameIsTaken !== undefined) {\n\t\t\tif (this.nameIsUsed === false) {\n\t\t\t\tinputGrp.addClass('has-error');\n\t\t\t\tinputGrp.append('<div id=\"name-used\" class=\"alert alert-danger\" role=\"alert\">Name already use</div>');\n\t\t\t\tthis.nameIsUsed = true;\n\t\t\t}\n\t\t} else {\n\t\t\t\tif (this.nameIsUsed === true) {\n\t\t\t\t\tthis.$('#name-used').remove();\n\t\t\t\t\tinputGrp.removeClass('has-error');\n\t\t\t\t\tthis.nameIsUsed = false;\n\t\t\t\t}\n\t\t\t\tthis.countName = countName;\n\t\t}\n\t},\n\n\n\tgetRenderData: function () {\n\t\tif (this.count != null && this.count != undefined) {\n\t\t\tvar model = window.countCollection.get(this.count);\n\t\t\treturn ({model: model.toJSON()});\n\t\t}\n\t\treturn ({model: null});\n\t},\n\n\n\tsubmitEditor: function () {\n\t\tif (this.count == null || this.count == undefined) {\n\t\t\tthis.lauchCountCreation();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lauchCountUpdate();\n\t},\n\n\n\taddUser: function (event) {\n\t\tvar color = colorSet[this.userList.length % colorSet.length];\n\t\tvar newUser = this.$('#input-users').val();\n\n\t\tthis.$('#alert-name').remove();\n\n\t\tvar nameIsTaken = this.userList.find(function (user) {\n\t\t\tif (user.name === newUser) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tif (nameIsTaken !== undefined) {\n\t\t\tthis.$('#input-user-grp').append('<div id=\"alert-name\" class=\"alert alert-danger\" role=\"alert\"><a href=\"#\" class=\"close\" data-dismiss=\"alert\">&times;</a>Name already taken</div>');\n\t\t\treturn;\n\t\t}\n\n\t\tif (newUser.length > 0) {\n\t\t\tthis.userList.push({\n\t\t\t\tname: newUser,\n\t\t\t\tseed: 0,\n\t\t\t\tleech: 0,\n\t\t\t\tcolor: color\n\t\t\t});\n\n\t\t\tthis.$('#list-users').append('<button class=\"btn\" style=\"background-color: #'+ color +'\">' + newUser + '</button>');\n\t\t}\n\t},\n\n\n\tsetCurrency: function (event) {\n\t\tvar selectedCurrency = event.target.value;\n\t\tvar currencyIndex = null;\n\n\t\tthis.currencies.find(function (elem, index) {\n\t\t\tif (elem.name == selectedCurrency) {\n\t\t\t\tcurrencyIndex = index;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tvar btnTarget = this.$(event.target);\n\n\t\tif (currencyIndex == null) {\n\t\t\tbtnTarget.removeClass('btn-default');\n\t\t\tbtnTarget.addClass('btn-info');\n\t\t\tthis.currencies.push({\n\t\t\t\tname: selectedCurrency,\n\t\t\t\ttaux: 1,\n\t\t\t});\n\t\t} else {\n\t\t\tbtnTarget.removeClass('btn-info');\n\t\t\tbtnTarget.addClass('btn-default');\n\t\t\tthis.currencies.splice(deviseIndex, 1);\n\t\t}\n\t},\n\n\n\tlauchCountCreation: function () {\n\t\tvar countDescription = this.$('#input-description').val();\n\t\tvar countName = this.countName;\n\n\t\tvar error = false;\n\n\t\tthis.$('#alert-zone').remove();\n\t\tthis.$('#formular').prepend('<div id=\"alert-zone\"></div>');\n\n\t\tif (this.nameIsUsed == true) {\n\t\t\tthis.errorMessage('Your namee is already use');\n\t\t\terror = true;\n\t\t}\n\t\tif (this.countName.length <= 0) {\n\t\t\tthis.errorMessage('Your count need a name');\n\t\t\terror = true;\n\t\t}\n\t\tif (this.userList.length <= 0) {\n\t\t\tthis.errorMessage('Your count need almost one user');\n\t\t\terror = true;\n\t\t}\n\t\tif (this.currencies.length <= 0) {\n\t\t\tthis.errorMessage('Your count need almost one currency');\n\t\t\terror = true;\n\t\t}\n\n\t\tif (error === false) {\n\t\t\twindow.countCollection.create({\n\t\t\t\tname: this.countName,\n\t\t\t\tdescription: countDescription,\n\t\t\t\tusers: this.userList,\n\t\t\t\tcurrencies: this.currencies,\n\t\t\t\tstatus: 'active',\n\t\t\t},{\n\t\t\t\twait: true,\n\t\t\t\tsuccess: function () {\n\t\t\t\t\tapp.router.navigate('count/' + countName, {trigger: true});\n\t\t\t\t},\n\t\t\t\terror: function (xhr) {\n\t\t\t\t\tconsole.error(xhr);\n\t\t\t\t\tapp.router.navigate('', {trigger: true});\n\t\t\t\t}});\n\t\t}\n\t},\n\n\n\terrorMessage: function (msg) {\n\t\tthis.$('#alert-zone').append('<div class=\"alert alert-danger\" role=\"alert\"><a href=\"#\" class=\"close\" data-dismiss=\"alert\">&times;</a>'+msg+'</div>');\n\t},\n\n\n\n\tlauchCountUpdate: function () {\n\t\tvar model = window.countCollection.get(this.count);\n\t\tif (model == null || model == undefined) {\n\t\t\tconsole.error('Can\\'t retrieve model');\n\t\t\tapp.router.navigate('', {trigger: true});\n\t\t\treturn;\n\t\t}\n\n\t\tvar change = {\n\t\t\tname: this.$('#input-name').val(),\n\t\t\tdescription: this.$('#input-description').val(),\n\t\t};\n\t\tmodel.set(change);\n\n\t\tmodel.sync('update', model, {\n\t\t\terror: function (xhr) {\n\t\t\t\tconsole.error (xhr);\n\t\t\t},\n\t\t\tsuccess: function () {\n\t\t\t\tview = _.find(app.router.mainMenu.countCollectionView.views, function (view) {\n\t\t\t\t\tif (view.model.cid == model.cid) {\n\t\t\t\t\t\treturn (view.model);\n\t\t\t\t\t}\n\t\t\t\t\treturn (null);\n\t\t\t\t});\n\t\t\t\tview.render();\n\t\t\t\tapp.router.navigate('', {trigger: true});\n\t\t\t}});\n\t},\n});\n\nmodule.exports = CountEditor;\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nif ( model)\n{\nbuf.push('<h1>' + escape((interp = model.name) == null ? '' : interp) + '</h1><form><div class=\"form-group\"><label for=\"input-name\">Count Name</label><input');\nbuf.push(attrs({ 'id':('input-name'), 'type':('text'), 'placeholder':('Name'), 'value':(\"\" + (model.name) + \"\"), \"class\": ('form-control') }, {\"type\":true,\"placeholder\":true,\"value\":true}));\nbuf.push('/></div><div class=\"form-group\"><label for=\"input-description\">Count Description</label><input');\nbuf.push(attrs({ 'id':('input-description'), 'type':('text'), 'placeholder':('Description'), 'value':(\"\" + (model.description) + \"\"), \"class\": ('form-control') }, {\"type\":true,\"placeholder\":true,\"value\":true}));\nbuf.push('/></div><button id=\"submit-editor\" class=\"btn btn-default\">Submit</button></form>');\n}\nelse\n{\nbuf.push('<h1>New Count</h1><form id=\"formular\"><div id=\"input-name-grp\" class=\"form-group\"><label for=\"input-name\">Count Name</label><input id=\"input-name\" type=\"text\" placeholder=\"Name\" class=\"form-control\"/></div><div class=\"form-group\"><label for=\"input-description\">Count Description</label><input id=\"input-description\" type=\"text\" placeholder=\"Description\" class=\"form-control\"/></div><label for=\"currency\">Count Currencies</label><div id=\"currency\" class=\"form-group\"><button type=\"button\" value=\"€\" class=\"btn btn-default currency\">€</button><button type=\"button\" value=\"$\" class=\"btn btn-default currency\">$</button></div><div id=\"list-users\" class=\"btn-group\"></div><div id=\"input-user-grp\" class=\"form-group\"><label for=\"input-users\">Count Users</label><input id=\"input-users\" type=\"text\" placeholder=\"Name\" class=\"form-control\"/><button id=\"add-user\" type=\"button\" class=\"btn btn-default\">Add user</button></div><button id=\"submit-editor\" class=\"btn btn-default\">Submit</button></form>');\n}\n}\nreturn buf.join(\"\");\n};","var BaseView = require('../../../lib/base_view');\nvar app = require('../../../application');\n\n\nvar AddExpenseView = BaseView.extend({\n\ttemplate: require('./templates/add_expense'),\n\n\tcount: null,\n\n\n\tevents: {\n\t\t'click .seeder'\t\t\t\t\t\t\t: 'setSeeder',\n\t\t'click .leecher'\t\t\t\t\t\t: 'setLeecher',\n\t\t'click #add-expense-save'\t\t: 'lauchSaveExpense',\n\t\t'click #add-expense-cancel'\t: 'resetNewExpense',\n\t\t'click .currency'\t\t\t\t\t\t:\t'setCurrency',\n\t},\n\n\tinitialize: function (attributes) {\n\t\tthis.count = attributes.count;\n\t\tvar leecher = this.count.get('users').map(function (elem) {\n\t\t\treturn {name: elem.name};\n\t\t});\n\t\tthis.data = {\n\t\t\tleecher: leecher,\n\t\t\tcurrency: this.count.get('currencies')[0],\n\t\t};\n\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\n\trender: function () {\n\t\t$('#module').prepend(this.$el);\n\t\tthis.$el.html(this.template({\n\t\t\tusers: this.count.get('users'),\n\t\t\tcurrencies: this.count.get('currencies')\n\t\t}));\n\t\tthis.$('#add-expense-displayer').slideDown('slow');\n\n\t\tthis.$('#input-amount')[0].addEventListener('change', (function(_this) {\n\t\t\treturn function (event) {_this.data.amount = event.target.value;};\n\t\t})(this));\n\n\t\tthis.$('#input-name')[0].addEventListener('change', (function(_this) {\n\t\t\treturn function (event) {_this.data.name = event.target.value;};\n\t\t})(this));\n\n\t\tthis.$('#input-description')[0].addEventListener('change', (function(_this) {\n\t\t\treturn function (event) {_this.data.description = event.target.value;};\n\t\t})(this));\n\t},\n\n\n\tsetSeeder: function (event) {\n\t\tvar target = this.$(event.target).children().get(0).value;\n\t\tif (this.data.seeder === target) {\n\t\t\tthis.data.seeder = null;\n\t\t} else {\n\t\t\tthis.data.seeder = target;\n\t\t}\n\t},\n\n\n\tsetLeecher: function (event) {\n\t\tvar target = this.$(event.target).children().get(0).value;\n\t\tvar listLeecher = this.data.leecher;\n\t\tvar leecherIndex = null;;\n\n\t\tlistLeecher.find(function (element, index) {\n\t\t\tif (element.name == target) {\n\t\t\t\tleecherIndex = index;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tif (leecherIndex === null) {\n\t\t\tlistLeecher.push({name: target});\n\t\t}\n\t\telse {\n\t\t\tlistLeecher.splice(leecherIndex, 1);\n\t\t}\n\t},\n\n\n\taddUserToCount: function (newUser) {\n\t\tthis.$('#seeder-list').append('<button type=\"button\" value=\"'+ newUser +\n\t\t\t\t'\" class=\"btn btn-default seeder\">' + newUser + '</button>');\n\n\t\tthis.$('#leecher-list').append('<button type=\"button\" value=\"'+ newUser +\n\t\t\t\t'\" class=\"btn btn-info leecher\">' + newUser + '</button>');\n\t\tthis.data.leecher.push({name: newUser});\n\t},\n\n\n\tsetCurrency: function (event) {\n\t\tthis.data.currency = event.target.text;\n\t\tthis.$('#choose-currency').text(this.data.currency);\n\t},\n\n\n\tlauchSaveExpense: function () {\n\t\tvar data = this.data;\n\t\tvar error = false;\n\n\t\tthis.$('#alert-zone').remove();\n\t\tthis.$('#add-expense-displayer').prepend('<div id=\"alert-zone\"></div>');\n\t\tif (data.name === null || data.name == undefined) {\n\t\t\tthis.errorMessage('Your expense need a name');\n\t\t\terror = true;\n\t\t}\n\t\tif (data.seeder === null || data.seeder == undefined) {\n\t\t\tthis.errorMessage('One person must paid');\n\t\t\terror = true;\n\t\t}\n\t\tif (data.amount == undefined) {\n\t\t\tthis.errorMessage('You haven\\'t set a amount');\n\t\t\terror = true;\n\t\t} else if (data.amount <= 0) {\n\t\t\tthis.errorMessage('The amount must be positive');\n\t\t\terror = true;\n\t\t}\n\t\tif (data.leecher.length === 0) {\n\t\t\tthis.errorMessage('You must choose almost one persone who get benefice');\n\t\t\terror = true;\n\t\t}\n\t\tif (error === false) {\n\t\t\tthis.sendNewExpense();\n\t\t}\n\t},\n\n\n\terrorMessage: function (msg) {\n\t\tthis.$('#alert-zone').append('<div class=\"alert alert-danger\" role=\"alert\">'+msg+'</div>');\n\t},\n\n\n\tsendNewExpense: function () {\n\t\tvar self = this;\n\t\tvar newExpensesList = this.count.get('expenses');\n\t\tnewExpensesList.push(this.data);\n\n\t\tthis.data.id = Date.now() + Math.round(Math.random() % 100);\n\n\t\tvar allUsers = this.count.get('users');\n\t\tallUsers.every(function (user) {\n\t\t\tif (self.data.seeder === user.name) {\n\t\t\t\tuser.seed = (Math.round((Number(self.data.amount) + Number(user.seed)) * 100) / 100).toFixed(2);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tvar leechPerUser = (Math.round(Number(this.data.amount) / Number(this.data.leecher.length) * 100) / 100).toFixed(2);\n\t\tthis.data.leecher.forEach(function (elem) {\n\t\t\tallUsers.every(function (user) {\n\t\t\t\tif (elem.name === user.name) {\n\t\t\t\t\tuser.leech = +(Math.round((Number(leechPerUser) + Number(user.leech)) * 100) / 100).toFixed(2);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t});\n\t\t});\n\n\t\tvar newAllExpenses = (Math.round((Number(this.count.get('allExpenses')) + Number(this.data.amount)) * 100) / 100).toFixed(2);\n\t\tthis.count.save({\n\t\t\tallExpenses: newAllExpenses,\n\t\t\texpenses: newExpensesList,\n\t\t\tusers: allUsers,\n\t\t}, {\n\t\t\twait: true,\n\t\t\tsuccess: function (data) {\n\t\t\t\tself.trigger('add-new-expense', self.data);\n\t\t\t},\n\t\t\terror: function (xhr) {\n\t\t\t\tself.trigger('remove-new-expense');\n\t\t\t}\n\t\t});\n\t},\n\n\tresetNewExpense: function () {\n\t\tthis.$('#add-expense-displayer').slideUp('slow');\n\t\tthis.trigger('remove-new-expense');\n\t},\n\n\tremove: function () {\n\t\tBaseView.prototype.remove.call(this);\n\t}\n});\n\nmodule.exports = AddExpenseView;\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<form id=\"add-expense-displayer\" style=\"display: none\" class=\"form-group\"><div id=\"alert-zone\"></div><label for=\"input-name\">Name</label><input id=\"input-name\" type=\"text\" placeholder=\"Shopping...\" maxlength=\"40\" required=\"required\" autofocus=\"autofocus\" class=\"form-control\"/><div class=\"form-group\"><label for=\"input-description\">Description</label><textarea id=\"input-description\" rows=\"5\" class=\"form-control\"></textarea></div><div class=\"form-group\"><label for=\"input-amount\">Amount</label><div class=\"input-group\"><input id=\"input-amount\" type=\"number\" placeholder=\"42.21\" aria-label=\"...\" required=\"required\" class=\"form-control\"/><div class=\"input-group-btn\"><button id=\"choose-currency\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" class=\"btn btn-default dropdown-toggle\">' + escape((interp = currencies[0].name) == null ? '' : interp) + '</button><ul class=\"dropdown-menu dropdown-menu-right\">');\n// iterate currencies\n;(function(){\n  if ('number' == typeof currencies.length) {\n    for (var $index = 0, $$l = currencies.length; $index < $$l; $index++) {\n      var currency = currencies[$index];\n\nbuf.push('<li class=\"currency\"><a>' + escape((interp = currency.name) == null ? '' : interp) + '</a></li>');\n    }\n  } else {\n    for (var $index in currencies) {\n      var currency = currencies[$index];\n\nbuf.push('<li class=\"currency\"><a>' + escape((interp = currency.name) == null ? '' : interp) + '</a></li>');\n   }\n  }\n}).call(this);\n\nbuf.push('</ul></div></div></div><label for=\"seeder-list\">Who Paid ?</label><div id=\"seeder-list\" class=\"form-group\"><div data-toggle=\"buttons\" class=\"btn-group\">');\n// iterate users\n;(function(){\n  if ('number' == typeof users.length) {\n    for (var $index = 0, $$l = users.length; $index < $$l; $index++) {\n      var user = users[$index];\n\nbuf.push('<label class=\"btn btn-primary seeder\"><input type=\\'radio\\', autocomplete=\\'off\\', value=\"' + escape((interp = user.name) == null ? '' : interp) + '\")> ' + escape((interp = user.name) == null ? '' : interp) + '</label>');\n    }\n  } else {\n    for (var $index in users) {\n      var user = users[$index];\n\nbuf.push('<label class=\"btn btn-primary seeder\"><input type=\\'radio\\', autocomplete=\\'off\\', value=\"' + escape((interp = user.name) == null ? '' : interp) + '\")> ' + escape((interp = user.name) == null ? '' : interp) + '</label>');\n   }\n  }\n}).call(this);\n\nbuf.push('</div></div><label for=\"leecher-list\">Who take Part ?</label><div id=\"leecher-list\" class=\"form-group\"><div data-toggle=\"buttons\" class=\"btn-group\">');\n// iterate users\n;(function(){\n  if ('number' == typeof users.length) {\n    for (var $index = 0, $$l = users.length; $index < $$l; $index++) {\n      var user = users[$index];\n\nbuf.push('<label class=\"btn btn-primary leecher active\"><input type=\\'checkbox\\', autocomplete=\\'off\\', value=\"' + escape((interp = user.name) == null ? '' : interp) + '\")> ' + escape((interp = user.name) == null ? '' : interp) + '</label>');\n    }\n  } else {\n    for (var $index in users) {\n      var user = users[$index];\n\nbuf.push('<label class=\"btn btn-primary leecher active\"><input type=\\'checkbox\\', autocomplete=\\'off\\', value=\"' + escape((interp = user.name) == null ? '' : interp) + '\")> ' + escape((interp = user.name) == null ? '' : interp) + '</label>');\n   }\n  }\n}).call(this);\n\nbuf.push('</div></div><div class=\"form-group\"><button id=\"add-expense-save\" type=\"submit\" class=\"btn btn-primary btn-block\">Save</button><button id=\"add-expense-cancel\" class=\"btn btn-primary btn-block\">Cancel</button></div></form>');\n}\nreturn buf.join(\"\");\n};","var CountBaseView = require('../countBase/count_base_view');\nvar app = require('../../application');\n\nvar AddExpenseView = require('./add_expense/add_expense_view');\n\nvar colorSet = require('../../helper/color_set');\n\n\n\nvar CountView = CountBaseView.extend({\n\tid: 'count-screen',\n\ttemplate: require('./templates/count'),\n\n\tcount: null,\n\tdataResume: {\n\t\tallExpense: 0,\n\t},\n\n\tnewExpense: null,\n\tbalancing: null,\n\n\tevents: {\n\t\t'click #count-lauch-add-user'\t:\t'addUser',\n\t\t'click #add-new-expense'\t\t\t: 'lauchNewExpense',\n\t\t'click .header-expense-elem'\t: 'printTransferBody',\n\t\t'click .delete-expense-elem'\t: 'deleteExpense',\n\t\t'click #header-balancing'\t\t\t: 'printBalancing',\n\t},\n\n\n\tinitialize: function (attributes) {\n\t\tthis.count = window.countCollection.models.find(function (count) {\n\t\t\tif (count.get('name') == attributes.countName) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tCountBaseView.prototype.initialize.call(this);\n\t},\n\n\n\taddUser: function () {\n\t\tvar userList = this.count.get('users');\n\t\tvar newUser = this.$('#count-input-add-user').val();\n\t\tvar color = colorSet[userList.length % colorSet.length];\n\n\t\tthis.$('#alert-name').remove();\n\t\tvar nameIsTaken = userList.find(function (elem) {\n\t\t\tif (elem.name === newUser) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tif (nameIsTaken !== undefined) {\n\t\t\tthis.$('#name-alert').append('<div id=\"alert-name\" class=\"alert alert-danger\" role=\"alert\"><a href=\"#\" class=\"close\" data-dismiss=\"alert\">&times;</a>Name already taken</div>');\n\t\t\treturn;\n\t\t}\n\n\t\tuserList.push({name: newUser, seed: 0, leech: 0, color: color});\n\t\tthis.$('#user-list').append('<div class=\"row\"><button class=\"btn\" style=\"background-color: #'+ color +'\">' + newUser + '</button></div>');\n\n\t\tif (this.newExpense !== null) {\n\t\t\tthis.newExpense.addUserToCount(newUser);\n\t\t}\n\t\tthis.count.save({users: userList});\n\t\tthis.$('#count-input-add-user').val('');\n\t\tif (this.balancing !== null && this.balancing !== undefined) {\n\t\t\tthis.balancing.update();\n\t\t}\n\t},\n\n\n\tlauchNewExpense: function (event) {\n\t\tif (this.newExpense == null) {\n\t\t\tthis.newExpense = new AddExpenseView({count: this.count});\n\t\t}\n\n\t\tthis.$('#add-new-expense').remove();\n\t\tthis.newExpense.render();\n\n\t\tthis.listenToOnce(this.newExpense, 'remove-new-expense', this.removeNewExpense);\n\n\t\tthis.listenToOnce(this.newExpense, 'add-new-expense', function (data) {\n\t\t\tthis.$('#expense-list-view').prepend(this.templateExpense({expense: data}));\n\t\t\tthis.stats.update();\n\t\t\tif (this.balancing !== null && this.balancing !== undefined) {\n\t\t\t\tthis.balancing.update();\n\t\t\t}\n\t\t\tthis.removeNewExpense();\n\t\t});\n\t},\n\n\n\tremoveNewExpense: function () {\n\t\tthis.newExpense.remove();\n\t\tdelete this.newExpense\n\t\t\tthis.newExpense= null;\n\n\t\tthis.$('#module').prepend('<button id=\"add-new-expense\" class=\"btn btn-default btn-block\"> Add a new expense</button>');\n\t},\n\n\n\tprintTransferBody: function (event) {\n\t\tvar elem =  $(event.target);\n\t\tif (elem.is('span')) {\n\t\t\tvar expenseBody =  $(event.target).parent().next('div');\n\t\t} else {\n\t\t\tvar expenseBody =  $(event.target).next('div');\n\t\t}\n\n\t\tif (expenseBody.is('.printed')) {\n\t\t\texpenseBody.slideUp('slow');\n\t\t\texpenseBody.removeClass('printed');\n\t\t} else {\n\t\t\texpenseBody.slideDown('slow');\n\t\t\texpenseBody.addClass('printed');\n\t\t}\n\t},\n\n\n\tdeleteExpense: function (event) {\n\t\tvar id = Number(this.$(event.target).parent().attr('id'));\n\t\tvar self = this;\n\t\tthis.count.removeExpense(id, function () {\n\t\t\tself.stats.update();\n\t\t\tif (self.balancing !== null && self.balancing !== undefined) {\n\t\t\t\tself.balancing.update();\n\t\t\t}\n\t\t\tself.$(event.target).parent().parent().remove();\n\t\t});\n\t},\n\n\n});\n\nmodule.exports = CountView;\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"panel panel-default\"><div class=\"panel-body\"><div id=\"stats-module\"></div><div class=\"panel panel-default\"><div id=\"header-balancing\" class=\"panel-heading\">Balancing</div><div id=\"module-balancing\"></div></div><div class=\"panel panel-default\"><div class=\"panel-heading\">Expense</div><div class=\"panel-body\"><div style=\"background-color: grey\" class=\"panel panel-default\"><div id=\"module\" class=\"panel-body\"><button id=\"add-new-expense\" class=\"btn btn-default btn-block\">Add a new expense</button></div></div><div id=\"expense-list-view\"></div></div></div></div></div>');\n}\nreturn buf.join(\"\");\n};","var BaseView = require('../../lib/base_view');\nvar app = require('../../application');\n\nvar StatsView = require('./stats_view');\nvar SquareView = require('./square_view');\n\n\nvar CountBaseView = BaseView.extend({\n\ttemplateExpense : require('./templates/expense_elem'),\n\n\tinitialize: function () {\n\t\tif (this.count == undefined || this.count == null) {\n\t\t\tconsole.error('invalide route');\n\t\t}\n\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\n\tgetRenderData: function () {\n\t\tif (this.count !== null && this.count !== undefined) {\n\t\t\treturn ({count: this.count.toJSON()});\n\t\t}\n\t\treturn ({count: null});\n\t},\n\n\n\trender: function () {\n\t\tBaseView.prototype.render.call(this);\n\n\t\tvar expenseList = this.count.get('expenses');\n\t\tvar self = this;\n\n\t\texpenseList.forEach(function (expense) {\n\t\t\tself.$('#expense-list-view').prepend(self.templateExpense({expense: expense}));\n\t\t});\n\n\t\tthis.stats = new StatsView({count: this.count});\n\t\tthis.stats.render();\n\n\t},\n\n\n\tprintBalancing: function () {\n\t\tif (this.balancing === null || this.balancing === undefined) {\n\t\t\tthis.balancing = new SquareView({count: this.count});\n\t\t\tthis.balancing.render();\n\t\t}\n\t\tthis.balancing.clickDisplayer()\n\t},\n});\n\nmodule.exports = CountBaseView;\n","var BaseView = require('../../lib/base_view');\nvar app = require('../../application');\n\n\nvar SquareView = BaseView.extend({\n\tid: 'square-view',\n\ttemplate: require('./templates/square'),\n\n\n\tevents: {\n\t\t'click #archive-count': 'archive',\n\t},\n\n\n\tinitialize: function (attributes) {\n\t\tthis.count = attributes.count;\n\n\t\tthis.setUsersBalancing();\n\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\n\trender: function () {\n\t\t$('#module-balancing').prepend(this.$el);\n\t\tthis.$el.html(this.template({users: this.usersBalancing, squareMoves: this.squareMoves}));\n\t\tthis.$('#square-displayer').slideDown('slow');\n\n\t},\n\n\n\tclickDisplayer: function () {\n\t\tvar displayer = this.$('#square-displayer');\n\n\t\tif (displayer.is('.printed')) {\n\t\t\tdisplayer.slideUp('slow');\n\t\t\tdisplayer.removeClass('printed');\n\t\t} else {\n\t\t\tdisplayer.slideDown('slow');\n\t\t\tdisplayer.addClass('printed');\n\t\t}\n\t},\n\n\n\tupdate: function () {\n\t\tthis.setUsersBalancing();\n\t\tthis.setSquareMoves();\n\t\tthis.remove();\n\t\tthis.render();\n\t},\n\n\n\tsetUsersBalancing: function () {\n\t\tvar allExpenses = this.count.get('allExpenses');\n\t\tvar users = this.count.get('users');\n\n\t\tthis.usersBalancing = users.map(function (user) {\n\t\t\treturn {\n\t\t\t\tname: user.name,\n\t\t\t\tcolor: user.color,\n\t\t\t\tbalancing: (Math.round((user.seed - user.leech) * 100) / 100).toFixed(2)\n\t\t\t}\n\t\t});\n\n\t\tthis.setSquareMoves();\n\t},\n\n\n\tsetSquareMoves: function () {\n\t\tthis.squareMoves = [];\n\n\t\tvar tmpUsers = JSON.parse(JSON.stringify(this.usersBalancing));\n\n\t\tvar i = 0;\n\n\t\twhile (tmpUsers.length > 1 && i++ < 50) {\n\t\t\tvar leecher = null;\n\t\t\tvar indexLeecher = 0;\n\n\t\t\tfor (index in tmpUsers) {\n\t\t\t\tif (leecher === null || (leecher.balancing > tmpUsers[index].balancing && leecher != tmpUsers[index])) {\n\t\t\t\t\tleecher = {\n\t\t\t\t\t\tname: tmpUsers[index].name,\n\t\t\t\t\t\tbalancing: Number(tmpUsers[index].balancing)\n\t\t\t\t\t}\n\t\t\t\t\tindexLeecher = index;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar seeder = null;\n\t\t\tvar indexSeeder = 0;\n\n\t\t\tfor (index in tmpUsers) {\n\t\t\t\tif (seeder === null || (seeder.balancing < tmpUsers[index].balancing && seeder != tmpUsers[index])) {\n\t\t\t\t\tseeder = {\n\t\t\t\t\t\tname: tmpUsers[index].name,\n\t\t\t\t\t\tbalancing: Number(tmpUsers[index].balancing)\n\t\t\t\t\t}\n\t\t\t\t\tindexSeeder = index;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (leecher.balancing * -1 > seeder.balancing) {\n\t\t\t\texchange = seeder.balancing;\n\t\t\t} else {\n\t\t\t\texchange = - leecher.balancing;\n\t\t\t}\n\n\t\t\tseeder.balancing = (Math.round((seeder.balancing - exchange) * 100) / 100).toFixed(2);\n\t\t\tleecher.balancing = (Math.round((leecher.balancing + exchange) * 100) / 100).toFixed(2);\n\n\t\t\tif (exchange !== 0 && exchange !== 'NaN') {\n\t\t\t\tthis.squareMoves.push({\n\t\t\t\t\tfrom: leecher.name,\n\t\t\t\t\tto: seeder.name,\n\t\t\t\t\texchange: exchange\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (leecher.balancing == 0) {\n\t\t\t\ttmpUsers.splice(indexLeecher, 1);\n\t\t\t}\n\t\t\tif (seeder.balancing == 0) {\n\t\t\t\ttmpUsers.splice(indexSeeder, 1);\n\t\t\t}\n\t\t}\n\t},\n\n\n\tarchive: function (event) {\n\t\tthis.count.archive();\n\t},\n\n\n\tresetSquare: function () {\n\t\tthis.trigger('remove-module');\n\t},\n});\n\nmodule.exports = SquareView;\n","\nvar BaseView = require('../../lib/base_view');\nvar template = require('./templates/stats');\n\nvar colorSet = require('../../helper/color_set');\n\nvar StatsView = BaseView.extend({\n\ttemplate: template,\n\tel: '#stats-module',\n\n\n\tinitialize: function (attributes) {\n\t\tthis.count = attributes.count;\n\n\t\tBaseView.prototype.initialize.call(this);\n\t},\n\n\n\tgetRenderData: function () {\n\t\tvar expensePerUser = +(Math.round(this.count.get('allExpenses') / this.count.get('users').length * 100) / 100).toFixed(2);\n\n\t\treturn {\n\t\t\tcount: this.count.toJSON(),\n\t\t\tcolorSet: colorSet,\n\t\t\texpensePerUser: expensePerUser\n\t\t};\n\t},\n\n\n\tafterRender: function () {\n\t\tvar chartCtx = this.$('#chart-users').get(0).getContext(\"2d\");\n\n\t\tvar data = this.computeDataCount();\n\t\tthis.pieChart = new Chart(chartCtx).Pie(data);\n\t},\n\n\n\tcomputeDataCount: function () {\n\t\treturn this.count.get('users').map(function (elem) {\n\t\t\treturn {value: elem.seed, color: '#'+elem.color, label: elem.name}\n\t\t});\n\t},\n\n\n\tupdate: function () {\n\t\tvar allExpenses = Number(this.count.get('allExpenses'));\n\t\tvar nbUsers = Number(this.count.get('users').length);\n\n\t\tvar perUserExpenses = +(Math.round(allExpenses / nbUsers * 100) / 100).toFixed(2);\n\n\t\tthis.$('#nb-expenses').text(this.count.get('expenses').length);\n\t\tthis.$('#all-expenses').text(allExpenses);\n\t\tthis.$('#perUser-expenses').text(perUserExpenses);\n\n\t\tvar self = this;\n\n\t\tthis.count.get('users').forEach(function (user, indexUser) {\n\t\t\tvar indexPie = null;\n\t\t\tself.pieChart.segments.find(function (pieSegment, index) {\n\t\t\t\tif (pieSegment.label === user.name) {\n\t\t\t\t\tindexPie = index;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t})\n\t\t\tif (indexPie !== undefined && indexPie !== null) {\n\t\t\t\tif (user.seed == 0) {\n\t\t\t\t\tself.pieChart.removeData(indexPie);\n\t\t\t\t} else {\n\t\t\t\t\tself.pieChart.segments[indexPie].value = user.seed;\n\t\t\t\t\tself.pieChart.update();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.pieChart.addData({\n\t\t\t\t\tvalue: user.seed,\n\t\t\t\t\tcolor: '#' + user.color,\n\t\t\t\t\tlabel: user.name\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\n});\n\nmodule.exports = StatsView;\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"panel panel-default\"><div class=\"panel-heading header-expense-elem\"><span> ' + escape((interp = expense.name) == null ? '' : interp) + '</span><span style=\"float: right\">' + escape((interp = expense.amount) == null ? '' : interp) + ' ' + escape((interp = expense.currency.name) == null ? '' : interp) + '</span></div><div');\nbuf.push(attrs({ 'style':('display: none'), 'id':(\"\" + (expense.id) + \"\"), \"class\": ('panel-body') }, {\"style\":true,\"id\":true}));\nbuf.push('><label for=\"seeder\">Who have paid ?</label><div id=\"seeder\"></div><button class=\"btn\">' + escape((interp = expense.seeder) == null ? '' : interp) + '</button><div class=\"form-group\"><label for=\"leecher-list\">Who take advantage ?</label><div id=\"leecher-list\" class=\"form-group\">');\n// iterate expense.leecher\n;(function(){\n  if ('number' == typeof expense.leecher.length) {\n    for (var $index = 0, $$l = expense.leecher.length; $index < $$l; $index++) {\n      var leecher = expense.leecher[$index];\n\nbuf.push('<button class=\"btn\">' + escape((interp = leecher.name) == null ? '' : interp) + '</button>');\n    }\n  } else {\n    for (var $index in expense.leecher) {\n      var leecher = expense.leecher[$index];\n\nbuf.push('<button class=\"btn\">' + escape((interp = leecher.name) == null ? '' : interp) + '</button>');\n   }\n  }\n}).call(this);\n\nbuf.push('</div></div><button class=\"btn btn-default btn-block delete-expense-elem\">Delete</button></div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div id=\"square-displayer\" style=\"display: none\" class=\"panel-body\"><label for=\"balancing\">Balancing:</label><ul id=\"balancing\">');\n// iterate users\n;(function(){\n  if ('number' == typeof users.length) {\n    for (var $index = 0, $$l = users.length; $index < $$l; $index++) {\n      var user = users[$index];\n\nbuf.push('<li><button');\nbuf.push(attrs({ 'style':(\"background-color: #\" + (user.color) + \"\"), \"class\": ('btn') }, {\"style\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + ':</button>');\nif ( user.balancing > 0)\n{\nbuf.push('<span style=\"color: green\"> +' + escape((interp = user.balancing) == null ? '' : interp) + '</span>');\n}\nelse\n{\nbuf.push('<span style=\"color: red\"> ' + escape((interp = user.balancing) == null ? '' : interp) + '</span>');\n}\nbuf.push('</li>');\n    }\n  } else {\n    for (var $index in users) {\n      var user = users[$index];\n\nbuf.push('<li><button');\nbuf.push(attrs({ 'style':(\"background-color: #\" + (user.color) + \"\"), \"class\": ('btn') }, {\"style\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + ':</button>');\nif ( user.balancing > 0)\n{\nbuf.push('<span style=\"color: green\"> +' + escape((interp = user.balancing) == null ? '' : interp) + '</span>');\n}\nelse\n{\nbuf.push('<span style=\"color: red\"> ' + escape((interp = user.balancing) == null ? '' : interp) + '</span>');\n}\nbuf.push('</li>');\n   }\n  }\n}).call(this);\n\nbuf.push('</ul><label for=\"balancing\">How to be square:</label><ul id=\"square\">');\n// iterate squareMoves\n;(function(){\n  if ('number' == typeof squareMoves.length) {\n    for (var $index = 0, $$l = squareMoves.length; $index < $$l; $index++) {\n      var move = squareMoves[$index];\n\nbuf.push('<li>[' + escape((interp = move.from) == null ? '' : interp) + '] gave [' + escape((interp = move.exchange) == null ? '' : interp) + '] to [' + escape((interp = move.to) == null ? '' : interp) + ']</li>');\n    }\n  } else {\n    for (var $index in squareMoves) {\n      var move = squareMoves[$index];\n\nbuf.push('<li>[' + escape((interp = move.from) == null ? '' : interp) + '] gave [' + escape((interp = move.exchange) == null ? '' : interp) + '] to [' + escape((interp = move.to) == null ? '' : interp) + ']</li>');\n   }\n  }\n}).call(this);\n\nbuf.push('</ul><button id=\"archive-count\" class=\"btn btn-primary btn-block\">Close and archive</button></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"panel panel-default\"><div class=\"panel-heading\">Users</div><div class=\"panel-body\"><div class=\"col-md-4\"><div id=\"user-list\">');\n// iterate count.users\n;(function(){\n  if ('number' == typeof count.users.length) {\n    for (var $index = 0, $$l = count.users.length; $index < $$l; $index++) {\n      var user = count.users[$index];\n\nbuf.push('<div class=\"row\"><button');\nbuf.push(attrs({ 'style':(\"background-color: #\" + (user.color) + \"\"), \"class\": ('btn') }, {\"style\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + '</button></div>');\n    }\n  } else {\n    for (var $index in count.users) {\n      var user = count.users[$index];\n\nbuf.push('<div class=\"row\"><button');\nbuf.push(attrs({ 'style':(\"background-color: #\" + (user.color) + \"\"), \"class\": ('btn') }, {\"style\":true}));\nbuf.push('>' + escape((interp = user.name) == null ? '' : interp) + '</button></div>');\n   }\n  }\n}).call(this);\n\nbuf.push('</div><div id=\"name-alert\" class=\"row\"><div class=\"input-group\"><input id=\"count-input-add-user\" type=\"text\" placeholder=\"My name\" class=\"form-control\"/><span class=\"input-group-btn\"><button id=\"count-lauch-add-user\" type=\"button\" class=\"btn btn-default\">Add user</button></span></div></div></div><div class=\"col-md-4 col-xs-6\"><label for=\"chart-users-block\">Expenses per users</label><div id=\"chart-users-block\"><canvas id=\"chart-users\"></canvas></div></div><div class=\"col-md-4 col-xs-6\"><label for=\"all-expenses\">All Expenses:</label><p id=\"all-expenses\">' + escape((interp = count.allExpenses) == null ? '' : interp) + '</p><label for=\"nb-expenses\">Number Expenses:</label><p id=\"nb-expenses\">' + escape((interp = count.expenses.length) == null ? '' : interp) + '</p><label for=\"nb-expenses\">Expenses per user:</label><p id=\"perUser-expenses\">' + escape((interp = expensePerUser) == null ? '' : interp) + '</p></div></div></div>');\n}\nreturn buf.join(\"\");\n};","\nvar ViewCollection = require('../../lib/view_collection');\nvar MenuCountRowView = require('./count_row_view');\n\nvar MenuCountListView = ViewCollection.extend({\n\tel: '#menu-list-count',\n\n\titemView: MenuCountRowView,\n\n\tinitialize: function (collection) {\n\t\tthis.collection = collection;\n\t\tViewCollection.prototype.initialize.call(this);\n\t},\n});\n\nmodule.exports = MenuCountListView;\n","var BaseView = require('../../lib/base_view');\nvar app = require('../../application');\n\nvar MenuCountRowView = BaseView.extend({\n\ttemplate: require('./templates/count_row'),\n\n\ttagName: 'li',\n\n\tinitialize: function () {\n\t\tvar self = this;\n\t\tthis.$el.click(function () {\n\t\t\tself.printCount();\n\t\t})\n\t},\n\n\n\tgetRenderData: function () {\n\t\treturn ({model: this.model.toJSON()});\n\t},\n\n\n\tprintCount: function () {\n\t\tapp.router.navigate('count/' + this.model.get('name'), {trigger: true});\n\t},\n});\n\nmodule.exports = MenuCountRowView;\n","var BaseView = require('../../lib/base_view');\nvar CountListView = require('./count_list_view');\nvar template = require('./templates/menu');\nvar app = require('../../application');\n\nvar MenuView = BaseView.extend({\n\tel: '#sidebar',\n\n\ttemplate: template,\n\n\tevents: {\n\t\t'click #menu-all-count'\t\t: 'goHomeView',\n\t\t'click #menu-add-count'\t\t: 'createNewCount',\n\t\t'click #menu-archives'\t\t: 'goToArchives',\n\t},\n\n\tafterRender: function () {\n\t\tthis.countCollectionView = new CountListView(window.countCollection);\n\t\tthis.countCollectionView.render();\n\t},\n\n\n\tgoHomeView: function () {\n\t\tapp.router.navigate('', {trigger: true});\n\t},\n\n\n\tcreateNewCount: function () {\n\t\tapp.router.navigate('count/create', {trigger: true});\n\t},\n\n\n\tgoToArchives: function () {\n\t\tapp.router.navigate('archive', {trigger: true});\n\t},\n\n});\n\nmodule.exports = MenuView;\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<a');\nbuf.push(attrs({ 'id':('count-' + (model.name) + '') }, {\"id\":true}));\nbuf.push('>' + escape((interp = model.name) == null ? '' : interp) + '</a>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<label for=\"menu-section\">Count</label><nav><ul class=\"nav nav-pills nav-stacked\"><li role=\"presentation\"><a id=\"menu-all-count\" href=\"#\">All Count</a></li></ul><ul id=\"menu-list-count\" class=\"nav nav-pills nav-stacked\"></ul><Label for=\"action\">Actions</Label><ul id=\"action\" class=\"nav nav-pills nav-stacked\"><li><a id=\"menu-add-count\">Create a Count</a></li><li><a id=\"menu-archives\">Archives</a></li></ul></nav>');\n}\nreturn buf.join(\"\");\n};"]}